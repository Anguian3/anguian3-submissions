
Da 5 Task 3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000053c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000004c8  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800100  00800100  0000053c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000053c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000056c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000020  00000000  00000000  000005ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000162  00000000  00000000  000005cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000000f8  00000000  00000000  0000072e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000124  00000000  00000000  00000826  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000024  00000000  00000000  0000094c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000001b9  00000000  00000000  00000970  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000005d  00000000  00000000  00000b29  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000010  00000000  00000000  00000b86  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e8 ec       	ldi	r30, 0xC8	; 200
  7c:	f4 e0       	ldi	r31, 0x04	; 4
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a0 30       	cpi	r26, 0x00	; 0
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a0 e0       	ldi	r26, 0x00	; 0
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a2 30       	cpi	r26, 0x02	; 2
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 53 00 	call	0xa6	; 0xa6 <main>
  9e:	0c 94 62 02 	jmp	0x4c4	; 0x4c4 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <main>:

int main()
{
	int x;
	int angle;
	DDRB = 0xFF;  // Set port B as an output for timer 1
  a6:	8f ef       	ldi	r24, 0xFF	; 255
  a8:	84 b9       	out	0x04, r24	; 4
	/*Enable the ADC Conversion*/
	ADMUX = 0;									// use ADC0
  aa:	ec e7       	ldi	r30, 0x7C	; 124
  ac:	f0 e0       	ldi	r31, 0x00	; 0
  ae:	10 82       	st	Z, r1
	ADMUX |= (1 << REFS0);						// use AVcc as the reference
  b0:	80 81       	ld	r24, Z
  b2:	80 64       	ori	r24, 0x40	; 64
  b4:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADPS0) | (1 << ADPS1);		// 8 prescaler
  b6:	ea e7       	ldi	r30, 0x7A	; 122
  b8:	f0 e0       	ldi	r31, 0x00	; 0
  ba:	80 81       	ld	r24, Z
  bc:	83 60       	ori	r24, 0x03	; 3
  be:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADEN);						// Enable the ADC
  c0:	80 81       	ld	r24, Z
  c2:	80 68       	ori	r24, 0x80	; 128
  c4:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADSC);						// Start the ADC conversion
  c6:	80 81       	ld	r24, Z
  c8:	80 64       	ori	r24, 0x40	; 64
  ca:	80 83       	st	Z, r24
	//TOP = ICR1;
	//output compare OC1A 8 bit non inverted PWM
	//Clear OC1A on Compare Match, set OC1A at TOP
	//Fast PWM
	//ICR1 = 20000 defines 50Hz pwm
	ICR1 = 20000;
  cc:	80 e2       	ldi	r24, 0x20	; 32
  ce:	9e e4       	ldi	r25, 0x4E	; 78
  d0:	90 93 87 00 	sts	0x0087, r25
  d4:	80 93 86 00 	sts	0x0086, r24
	OCR1A = 500;
  d8:	84 ef       	ldi	r24, 0xF4	; 244
  da:	91 e0       	ldi	r25, 0x01	; 1
  dc:	90 93 89 00 	sts	0x0089, r25
  e0:	80 93 88 00 	sts	0x0088, r24
	TCCR1A|=(0<<COM1A0)|(1<<COM1A1)|(0<<COM1B0)|(0<<COM1B1)|(0<<FOC1A)|(0<<FOC1B)|(1<<WGM11)|(0<<WGM10); //TCCR1A = 0x82
  e4:	e0 e8       	ldi	r30, 0x80	; 128
  e6:	f0 e0       	ldi	r31, 0x00	; 0
  e8:	80 81       	ld	r24, Z
  ea:	82 68       	ori	r24, 0x82	; 130
  ec:	80 83       	st	Z, r24
	TCCR1B|=(0<<ICNC1)|(0<<ICES1)|(1<<WGM13)|(1<<WGM12)|(0<<CS12)|(1<<CS11)|(0<<CS10); //TCCR1B = 0x1A
  ee:	e1 e8       	ldi	r30, 0x81	; 129
  f0:	f0 e0       	ldi	r31, 0x00	; 0
  f2:	80 81       	ld	r24, Z
  f4:	8a 61       	ori	r24, 0x1A	; 26
  f6:	80 83       	st	Z, r24
	while (1)
	{	
		ADCSRA |= (1 << ADSC);	// Start the ADC conversion
  f8:	ca e7       	ldi	r28, 0x7A	; 122
  fa:	d0 e0       	ldi	r29, 0x00	; 0
		loop_until_bit_is_set(ADCSRA, ADSC);
		value = ADC;
  fc:	0f 2e       	mov	r0, r31
  fe:	f8 e7       	ldi	r31, 0x78	; 120
 100:	ef 2e       	mov	r14, r31
 102:	f1 2c       	mov	r15, r1
 104:	f0 2d       	mov	r31, r0
		angle = 1800*(1-(ADC_ratio*value)); // Total value of 500 is approximately 0 degrees
		angle = 500 + angle;  // Total value of 2300 is approximately 180 degrees
		OCR1A = angle;
 106:	08 e8       	ldi	r16, 0x88	; 136
 108:	10 e0       	ldi	r17, 0x00	; 0
 10a:	0f 2e       	mov	r0, r31
 10c:	f4 ef       	ldi	r31, 0xF4	; 244
 10e:	cf 2e       	mov	r12, r31
 110:	f0 2d       	mov	r31, r0
 112:	dd 24       	eor	r13, r13
 114:	d3 94       	inc	r13
	OCR1A = 500;
	TCCR1A|=(0<<COM1A0)|(1<<COM1A1)|(0<<COM1B0)|(0<<COM1B1)|(0<<FOC1A)|(0<<FOC1B)|(1<<WGM11)|(0<<WGM10); //TCCR1A = 0x82
	TCCR1B|=(0<<ICNC1)|(0<<ICES1)|(1<<WGM13)|(1<<WGM12)|(0<<CS12)|(1<<CS11)|(0<<CS10); //TCCR1B = 0x1A
	while (1)
	{	
		ADCSRA |= (1 << ADSC);	// Start the ADC conversion
 116:	88 81       	ld	r24, Y
 118:	80 64       	ori	r24, 0x40	; 64
 11a:	88 83       	st	Y, r24
		loop_until_bit_is_set(ADCSRA, ADSC);
 11c:	88 81       	ld	r24, Y
 11e:	86 ff       	sbrs	r24, 6
 120:	fd cf       	rjmp	.-6      	; 0x11c <main+0x76>
		value = ADC;
 122:	f7 01       	movw	r30, r14
 124:	60 81       	ld	r22, Z
 126:	71 81       	ldd	r23, Z+1	; 0x01
 128:	70 93 01 01 	sts	0x0101, r23
 12c:	60 93 00 01 	sts	0x0100, r22
		angle = 1800*(1-(ADC_ratio*value)); // Total value of 500 is approximately 0 degrees
 130:	07 2e       	mov	r0, r23
 132:	00 0c       	add	r0, r0
 134:	88 0b       	sbc	r24, r24
 136:	99 0b       	sbc	r25, r25
 138:	0e 94 69 01 	call	0x2d2	; 0x2d2 <__floatsisf>
 13c:	25 e7       	ldi	r18, 0x75	; 117
 13e:	3f e1       	ldi	r19, 0x1F	; 31
 140:	40 e8       	ldi	r20, 0x80	; 128
 142:	5a e3       	ldi	r21, 0x3A	; 58
 144:	0e 94 f5 01 	call	0x3ea	; 0x3ea <__mulsf3>
 148:	9b 01       	movw	r18, r22
 14a:	ac 01       	movw	r20, r24
 14c:	60 e0       	ldi	r22, 0x00	; 0
 14e:	70 e0       	ldi	r23, 0x00	; 0
 150:	80 e8       	ldi	r24, 0x80	; 128
 152:	9f e3       	ldi	r25, 0x3F	; 63
 154:	0e 94 c4 00 	call	0x188	; 0x188 <__subsf3>
 158:	20 e0       	ldi	r18, 0x00	; 0
 15a:	30 e0       	ldi	r19, 0x00	; 0
 15c:	41 ee       	ldi	r20, 0xE1	; 225
 15e:	54 e4       	ldi	r21, 0x44	; 68
 160:	0e 94 f5 01 	call	0x3ea	; 0x3ea <__mulsf3>
 164:	0e 94 31 01 	call	0x262	; 0x262 <__fixsfsi>
		angle = 500 + angle;  // Total value of 2300 is approximately 180 degrees
 168:	6c 50       	subi	r22, 0x0C	; 12
 16a:	7e 4f       	sbci	r23, 0xFE	; 254
		OCR1A = angle;
 16c:	f8 01       	movw	r30, r16
 16e:	71 83       	std	Z+1, r23	; 0x01
 170:	60 83       	st	Z, r22
 172:	8c 2d       	mov	r24, r12
 174:	9d 2d       	mov	r25, r13
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 176:	ef ec       	ldi	r30, 0xCF	; 207
 178:	f7 e0       	ldi	r31, 0x07	; 7
 17a:	31 97       	sbiw	r30, 0x01	; 1
 17c:	f1 f7       	brne	.-4      	; 0x17a <main+0xd4>
 17e:	00 c0       	rjmp	.+0      	; 0x180 <main+0xda>
 180:	00 00       	nop
 182:	01 97       	sbiw	r24, 0x01	; 1
		for(x = 0; x<500;x++)
 184:	c1 f7       	brne	.-16     	; 0x176 <main+0xd0>
 186:	c7 cf       	rjmp	.-114    	; 0x116 <main+0x70>

00000188 <__subsf3>:
 188:	50 58       	subi	r21, 0x80	; 128

0000018a <__addsf3>:
 18a:	bb 27       	eor	r27, r27
 18c:	aa 27       	eor	r26, r26
 18e:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <__addsf3x>
 192:	0c 94 bb 01 	jmp	0x376	; 0x376 <__fp_round>
 196:	0e 94 ad 01 	call	0x35a	; 0x35a <__fp_pscA>
 19a:	38 f0       	brcs	.+14     	; 0x1aa <__addsf3+0x20>
 19c:	0e 94 b4 01 	call	0x368	; 0x368 <__fp_pscB>
 1a0:	20 f0       	brcs	.+8      	; 0x1aa <__addsf3+0x20>
 1a2:	39 f4       	brne	.+14     	; 0x1b2 <__addsf3+0x28>
 1a4:	9f 3f       	cpi	r25, 0xFF	; 255
 1a6:	19 f4       	brne	.+6      	; 0x1ae <__addsf3+0x24>
 1a8:	26 f4       	brtc	.+8      	; 0x1b2 <__addsf3+0x28>
 1aa:	0c 94 aa 01 	jmp	0x354	; 0x354 <__fp_nan>
 1ae:	0e f4       	brtc	.+2      	; 0x1b2 <__addsf3+0x28>
 1b0:	e0 95       	com	r30
 1b2:	e7 fb       	bst	r30, 7
 1b4:	0c 94 a4 01 	jmp	0x348	; 0x348 <__fp_inf>

000001b8 <__addsf3x>:
 1b8:	e9 2f       	mov	r30, r25
 1ba:	0e 94 cc 01 	call	0x398	; 0x398 <__fp_split3>
 1be:	58 f3       	brcs	.-42     	; 0x196 <__addsf3+0xc>
 1c0:	ba 17       	cp	r27, r26
 1c2:	62 07       	cpc	r22, r18
 1c4:	73 07       	cpc	r23, r19
 1c6:	84 07       	cpc	r24, r20
 1c8:	95 07       	cpc	r25, r21
 1ca:	20 f0       	brcs	.+8      	; 0x1d4 <__addsf3x+0x1c>
 1cc:	79 f4       	brne	.+30     	; 0x1ec <__addsf3x+0x34>
 1ce:	a6 f5       	brtc	.+104    	; 0x238 <__addsf3x+0x80>
 1d0:	0c 94 ee 01 	jmp	0x3dc	; 0x3dc <__fp_zero>
 1d4:	0e f4       	brtc	.+2      	; 0x1d8 <__addsf3x+0x20>
 1d6:	e0 95       	com	r30
 1d8:	0b 2e       	mov	r0, r27
 1da:	ba 2f       	mov	r27, r26
 1dc:	a0 2d       	mov	r26, r0
 1de:	0b 01       	movw	r0, r22
 1e0:	b9 01       	movw	r22, r18
 1e2:	90 01       	movw	r18, r0
 1e4:	0c 01       	movw	r0, r24
 1e6:	ca 01       	movw	r24, r20
 1e8:	a0 01       	movw	r20, r0
 1ea:	11 24       	eor	r1, r1
 1ec:	ff 27       	eor	r31, r31
 1ee:	59 1b       	sub	r21, r25
 1f0:	99 f0       	breq	.+38     	; 0x218 <__addsf3x+0x60>
 1f2:	59 3f       	cpi	r21, 0xF9	; 249
 1f4:	50 f4       	brcc	.+20     	; 0x20a <__addsf3x+0x52>
 1f6:	50 3e       	cpi	r21, 0xE0	; 224
 1f8:	68 f1       	brcs	.+90     	; 0x254 <__addsf3x+0x9c>
 1fa:	1a 16       	cp	r1, r26
 1fc:	f0 40       	sbci	r31, 0x00	; 0
 1fe:	a2 2f       	mov	r26, r18
 200:	23 2f       	mov	r18, r19
 202:	34 2f       	mov	r19, r20
 204:	44 27       	eor	r20, r20
 206:	58 5f       	subi	r21, 0xF8	; 248
 208:	f3 cf       	rjmp	.-26     	; 0x1f0 <__addsf3x+0x38>
 20a:	46 95       	lsr	r20
 20c:	37 95       	ror	r19
 20e:	27 95       	ror	r18
 210:	a7 95       	ror	r26
 212:	f0 40       	sbci	r31, 0x00	; 0
 214:	53 95       	inc	r21
 216:	c9 f7       	brne	.-14     	; 0x20a <__addsf3x+0x52>
 218:	7e f4       	brtc	.+30     	; 0x238 <__addsf3x+0x80>
 21a:	1f 16       	cp	r1, r31
 21c:	ba 0b       	sbc	r27, r26
 21e:	62 0b       	sbc	r22, r18
 220:	73 0b       	sbc	r23, r19
 222:	84 0b       	sbc	r24, r20
 224:	ba f0       	brmi	.+46     	; 0x254 <__addsf3x+0x9c>
 226:	91 50       	subi	r25, 0x01	; 1
 228:	a1 f0       	breq	.+40     	; 0x252 <__addsf3x+0x9a>
 22a:	ff 0f       	add	r31, r31
 22c:	bb 1f       	adc	r27, r27
 22e:	66 1f       	adc	r22, r22
 230:	77 1f       	adc	r23, r23
 232:	88 1f       	adc	r24, r24
 234:	c2 f7       	brpl	.-16     	; 0x226 <__addsf3x+0x6e>
 236:	0e c0       	rjmp	.+28     	; 0x254 <__addsf3x+0x9c>
 238:	ba 0f       	add	r27, r26
 23a:	62 1f       	adc	r22, r18
 23c:	73 1f       	adc	r23, r19
 23e:	84 1f       	adc	r24, r20
 240:	48 f4       	brcc	.+18     	; 0x254 <__addsf3x+0x9c>
 242:	87 95       	ror	r24
 244:	77 95       	ror	r23
 246:	67 95       	ror	r22
 248:	b7 95       	ror	r27
 24a:	f7 95       	ror	r31
 24c:	9e 3f       	cpi	r25, 0xFE	; 254
 24e:	08 f0       	brcs	.+2      	; 0x252 <__addsf3x+0x9a>
 250:	b0 cf       	rjmp	.-160    	; 0x1b2 <__addsf3+0x28>
 252:	93 95       	inc	r25
 254:	88 0f       	add	r24, r24
 256:	08 f0       	brcs	.+2      	; 0x25a <__addsf3x+0xa2>
 258:	99 27       	eor	r25, r25
 25a:	ee 0f       	add	r30, r30
 25c:	97 95       	ror	r25
 25e:	87 95       	ror	r24
 260:	08 95       	ret

00000262 <__fixsfsi>:
 262:	0e 94 38 01 	call	0x270	; 0x270 <__fixunssfsi>
 266:	68 94       	set
 268:	b1 11       	cpse	r27, r1
 26a:	0c 94 ef 01 	jmp	0x3de	; 0x3de <__fp_szero>
 26e:	08 95       	ret

00000270 <__fixunssfsi>:
 270:	0e 94 d4 01 	call	0x3a8	; 0x3a8 <__fp_splitA>
 274:	88 f0       	brcs	.+34     	; 0x298 <__fixunssfsi+0x28>
 276:	9f 57       	subi	r25, 0x7F	; 127
 278:	98 f0       	brcs	.+38     	; 0x2a0 <__fixunssfsi+0x30>
 27a:	b9 2f       	mov	r27, r25
 27c:	99 27       	eor	r25, r25
 27e:	b7 51       	subi	r27, 0x17	; 23
 280:	b0 f0       	brcs	.+44     	; 0x2ae <__fixunssfsi+0x3e>
 282:	e1 f0       	breq	.+56     	; 0x2bc <__fixunssfsi+0x4c>
 284:	66 0f       	add	r22, r22
 286:	77 1f       	adc	r23, r23
 288:	88 1f       	adc	r24, r24
 28a:	99 1f       	adc	r25, r25
 28c:	1a f0       	brmi	.+6      	; 0x294 <__fixunssfsi+0x24>
 28e:	ba 95       	dec	r27
 290:	c9 f7       	brne	.-14     	; 0x284 <__fixunssfsi+0x14>
 292:	14 c0       	rjmp	.+40     	; 0x2bc <__fixunssfsi+0x4c>
 294:	b1 30       	cpi	r27, 0x01	; 1
 296:	91 f0       	breq	.+36     	; 0x2bc <__fixunssfsi+0x4c>
 298:	0e 94 ee 01 	call	0x3dc	; 0x3dc <__fp_zero>
 29c:	b1 e0       	ldi	r27, 0x01	; 1
 29e:	08 95       	ret
 2a0:	0c 94 ee 01 	jmp	0x3dc	; 0x3dc <__fp_zero>
 2a4:	67 2f       	mov	r22, r23
 2a6:	78 2f       	mov	r23, r24
 2a8:	88 27       	eor	r24, r24
 2aa:	b8 5f       	subi	r27, 0xF8	; 248
 2ac:	39 f0       	breq	.+14     	; 0x2bc <__fixunssfsi+0x4c>
 2ae:	b9 3f       	cpi	r27, 0xF9	; 249
 2b0:	cc f3       	brlt	.-14     	; 0x2a4 <__fixunssfsi+0x34>
 2b2:	86 95       	lsr	r24
 2b4:	77 95       	ror	r23
 2b6:	67 95       	ror	r22
 2b8:	b3 95       	inc	r27
 2ba:	d9 f7       	brne	.-10     	; 0x2b2 <__fixunssfsi+0x42>
 2bc:	3e f4       	brtc	.+14     	; 0x2cc <__fixunssfsi+0x5c>
 2be:	90 95       	com	r25
 2c0:	80 95       	com	r24
 2c2:	70 95       	com	r23
 2c4:	61 95       	neg	r22
 2c6:	7f 4f       	sbci	r23, 0xFF	; 255
 2c8:	8f 4f       	sbci	r24, 0xFF	; 255
 2ca:	9f 4f       	sbci	r25, 0xFF	; 255
 2cc:	08 95       	ret

000002ce <__floatunsisf>:
 2ce:	e8 94       	clt
 2d0:	09 c0       	rjmp	.+18     	; 0x2e4 <__floatsisf+0x12>

000002d2 <__floatsisf>:
 2d2:	97 fb       	bst	r25, 7
 2d4:	3e f4       	brtc	.+14     	; 0x2e4 <__floatsisf+0x12>
 2d6:	90 95       	com	r25
 2d8:	80 95       	com	r24
 2da:	70 95       	com	r23
 2dc:	61 95       	neg	r22
 2de:	7f 4f       	sbci	r23, 0xFF	; 255
 2e0:	8f 4f       	sbci	r24, 0xFF	; 255
 2e2:	9f 4f       	sbci	r25, 0xFF	; 255
 2e4:	99 23       	and	r25, r25
 2e6:	a9 f0       	breq	.+42     	; 0x312 <__floatsisf+0x40>
 2e8:	f9 2f       	mov	r31, r25
 2ea:	96 e9       	ldi	r25, 0x96	; 150
 2ec:	bb 27       	eor	r27, r27
 2ee:	93 95       	inc	r25
 2f0:	f6 95       	lsr	r31
 2f2:	87 95       	ror	r24
 2f4:	77 95       	ror	r23
 2f6:	67 95       	ror	r22
 2f8:	b7 95       	ror	r27
 2fa:	f1 11       	cpse	r31, r1
 2fc:	f8 cf       	rjmp	.-16     	; 0x2ee <__floatsisf+0x1c>
 2fe:	fa f4       	brpl	.+62     	; 0x33e <__floatsisf+0x6c>
 300:	bb 0f       	add	r27, r27
 302:	11 f4       	brne	.+4      	; 0x308 <__floatsisf+0x36>
 304:	60 ff       	sbrs	r22, 0
 306:	1b c0       	rjmp	.+54     	; 0x33e <__floatsisf+0x6c>
 308:	6f 5f       	subi	r22, 0xFF	; 255
 30a:	7f 4f       	sbci	r23, 0xFF	; 255
 30c:	8f 4f       	sbci	r24, 0xFF	; 255
 30e:	9f 4f       	sbci	r25, 0xFF	; 255
 310:	16 c0       	rjmp	.+44     	; 0x33e <__floatsisf+0x6c>
 312:	88 23       	and	r24, r24
 314:	11 f0       	breq	.+4      	; 0x31a <__floatsisf+0x48>
 316:	96 e9       	ldi	r25, 0x96	; 150
 318:	11 c0       	rjmp	.+34     	; 0x33c <__floatsisf+0x6a>
 31a:	77 23       	and	r23, r23
 31c:	21 f0       	breq	.+8      	; 0x326 <__floatsisf+0x54>
 31e:	9e e8       	ldi	r25, 0x8E	; 142
 320:	87 2f       	mov	r24, r23
 322:	76 2f       	mov	r23, r22
 324:	05 c0       	rjmp	.+10     	; 0x330 <__floatsisf+0x5e>
 326:	66 23       	and	r22, r22
 328:	71 f0       	breq	.+28     	; 0x346 <__floatsisf+0x74>
 32a:	96 e8       	ldi	r25, 0x86	; 134
 32c:	86 2f       	mov	r24, r22
 32e:	70 e0       	ldi	r23, 0x00	; 0
 330:	60 e0       	ldi	r22, 0x00	; 0
 332:	2a f0       	brmi	.+10     	; 0x33e <__floatsisf+0x6c>
 334:	9a 95       	dec	r25
 336:	66 0f       	add	r22, r22
 338:	77 1f       	adc	r23, r23
 33a:	88 1f       	adc	r24, r24
 33c:	da f7       	brpl	.-10     	; 0x334 <__floatsisf+0x62>
 33e:	88 0f       	add	r24, r24
 340:	96 95       	lsr	r25
 342:	87 95       	ror	r24
 344:	97 f9       	bld	r25, 7
 346:	08 95       	ret

00000348 <__fp_inf>:
 348:	97 f9       	bld	r25, 7
 34a:	9f 67       	ori	r25, 0x7F	; 127
 34c:	80 e8       	ldi	r24, 0x80	; 128
 34e:	70 e0       	ldi	r23, 0x00	; 0
 350:	60 e0       	ldi	r22, 0x00	; 0
 352:	08 95       	ret

00000354 <__fp_nan>:
 354:	9f ef       	ldi	r25, 0xFF	; 255
 356:	80 ec       	ldi	r24, 0xC0	; 192
 358:	08 95       	ret

0000035a <__fp_pscA>:
 35a:	00 24       	eor	r0, r0
 35c:	0a 94       	dec	r0
 35e:	16 16       	cp	r1, r22
 360:	17 06       	cpc	r1, r23
 362:	18 06       	cpc	r1, r24
 364:	09 06       	cpc	r0, r25
 366:	08 95       	ret

00000368 <__fp_pscB>:
 368:	00 24       	eor	r0, r0
 36a:	0a 94       	dec	r0
 36c:	12 16       	cp	r1, r18
 36e:	13 06       	cpc	r1, r19
 370:	14 06       	cpc	r1, r20
 372:	05 06       	cpc	r0, r21
 374:	08 95       	ret

00000376 <__fp_round>:
 376:	09 2e       	mov	r0, r25
 378:	03 94       	inc	r0
 37a:	00 0c       	add	r0, r0
 37c:	11 f4       	brne	.+4      	; 0x382 <__fp_round+0xc>
 37e:	88 23       	and	r24, r24
 380:	52 f0       	brmi	.+20     	; 0x396 <__fp_round+0x20>
 382:	bb 0f       	add	r27, r27
 384:	40 f4       	brcc	.+16     	; 0x396 <__fp_round+0x20>
 386:	bf 2b       	or	r27, r31
 388:	11 f4       	brne	.+4      	; 0x38e <__fp_round+0x18>
 38a:	60 ff       	sbrs	r22, 0
 38c:	04 c0       	rjmp	.+8      	; 0x396 <__fp_round+0x20>
 38e:	6f 5f       	subi	r22, 0xFF	; 255
 390:	7f 4f       	sbci	r23, 0xFF	; 255
 392:	8f 4f       	sbci	r24, 0xFF	; 255
 394:	9f 4f       	sbci	r25, 0xFF	; 255
 396:	08 95       	ret

00000398 <__fp_split3>:
 398:	57 fd       	sbrc	r21, 7
 39a:	90 58       	subi	r25, 0x80	; 128
 39c:	44 0f       	add	r20, r20
 39e:	55 1f       	adc	r21, r21
 3a0:	59 f0       	breq	.+22     	; 0x3b8 <__fp_splitA+0x10>
 3a2:	5f 3f       	cpi	r21, 0xFF	; 255
 3a4:	71 f0       	breq	.+28     	; 0x3c2 <__fp_splitA+0x1a>
 3a6:	47 95       	ror	r20

000003a8 <__fp_splitA>:
 3a8:	88 0f       	add	r24, r24
 3aa:	97 fb       	bst	r25, 7
 3ac:	99 1f       	adc	r25, r25
 3ae:	61 f0       	breq	.+24     	; 0x3c8 <__fp_splitA+0x20>
 3b0:	9f 3f       	cpi	r25, 0xFF	; 255
 3b2:	79 f0       	breq	.+30     	; 0x3d2 <__fp_splitA+0x2a>
 3b4:	87 95       	ror	r24
 3b6:	08 95       	ret
 3b8:	12 16       	cp	r1, r18
 3ba:	13 06       	cpc	r1, r19
 3bc:	14 06       	cpc	r1, r20
 3be:	55 1f       	adc	r21, r21
 3c0:	f2 cf       	rjmp	.-28     	; 0x3a6 <__fp_split3+0xe>
 3c2:	46 95       	lsr	r20
 3c4:	f1 df       	rcall	.-30     	; 0x3a8 <__fp_splitA>
 3c6:	08 c0       	rjmp	.+16     	; 0x3d8 <__fp_splitA+0x30>
 3c8:	16 16       	cp	r1, r22
 3ca:	17 06       	cpc	r1, r23
 3cc:	18 06       	cpc	r1, r24
 3ce:	99 1f       	adc	r25, r25
 3d0:	f1 cf       	rjmp	.-30     	; 0x3b4 <__fp_splitA+0xc>
 3d2:	86 95       	lsr	r24
 3d4:	71 05       	cpc	r23, r1
 3d6:	61 05       	cpc	r22, r1
 3d8:	08 94       	sec
 3da:	08 95       	ret

000003dc <__fp_zero>:
 3dc:	e8 94       	clt

000003de <__fp_szero>:
 3de:	bb 27       	eor	r27, r27
 3e0:	66 27       	eor	r22, r22
 3e2:	77 27       	eor	r23, r23
 3e4:	cb 01       	movw	r24, r22
 3e6:	97 f9       	bld	r25, 7
 3e8:	08 95       	ret

000003ea <__mulsf3>:
 3ea:	0e 94 08 02 	call	0x410	; 0x410 <__mulsf3x>
 3ee:	0c 94 bb 01 	jmp	0x376	; 0x376 <__fp_round>
 3f2:	0e 94 ad 01 	call	0x35a	; 0x35a <__fp_pscA>
 3f6:	38 f0       	brcs	.+14     	; 0x406 <__mulsf3+0x1c>
 3f8:	0e 94 b4 01 	call	0x368	; 0x368 <__fp_pscB>
 3fc:	20 f0       	brcs	.+8      	; 0x406 <__mulsf3+0x1c>
 3fe:	95 23       	and	r25, r21
 400:	11 f0       	breq	.+4      	; 0x406 <__mulsf3+0x1c>
 402:	0c 94 a4 01 	jmp	0x348	; 0x348 <__fp_inf>
 406:	0c 94 aa 01 	jmp	0x354	; 0x354 <__fp_nan>
 40a:	11 24       	eor	r1, r1
 40c:	0c 94 ef 01 	jmp	0x3de	; 0x3de <__fp_szero>

00000410 <__mulsf3x>:
 410:	0e 94 cc 01 	call	0x398	; 0x398 <__fp_split3>
 414:	70 f3       	brcs	.-36     	; 0x3f2 <__mulsf3+0x8>

00000416 <__mulsf3_pse>:
 416:	95 9f       	mul	r25, r21
 418:	c1 f3       	breq	.-16     	; 0x40a <__mulsf3+0x20>
 41a:	95 0f       	add	r25, r21
 41c:	50 e0       	ldi	r21, 0x00	; 0
 41e:	55 1f       	adc	r21, r21
 420:	62 9f       	mul	r22, r18
 422:	f0 01       	movw	r30, r0
 424:	72 9f       	mul	r23, r18
 426:	bb 27       	eor	r27, r27
 428:	f0 0d       	add	r31, r0
 42a:	b1 1d       	adc	r27, r1
 42c:	63 9f       	mul	r22, r19
 42e:	aa 27       	eor	r26, r26
 430:	f0 0d       	add	r31, r0
 432:	b1 1d       	adc	r27, r1
 434:	aa 1f       	adc	r26, r26
 436:	64 9f       	mul	r22, r20
 438:	66 27       	eor	r22, r22
 43a:	b0 0d       	add	r27, r0
 43c:	a1 1d       	adc	r26, r1
 43e:	66 1f       	adc	r22, r22
 440:	82 9f       	mul	r24, r18
 442:	22 27       	eor	r18, r18
 444:	b0 0d       	add	r27, r0
 446:	a1 1d       	adc	r26, r1
 448:	62 1f       	adc	r22, r18
 44a:	73 9f       	mul	r23, r19
 44c:	b0 0d       	add	r27, r0
 44e:	a1 1d       	adc	r26, r1
 450:	62 1f       	adc	r22, r18
 452:	83 9f       	mul	r24, r19
 454:	a0 0d       	add	r26, r0
 456:	61 1d       	adc	r22, r1
 458:	22 1f       	adc	r18, r18
 45a:	74 9f       	mul	r23, r20
 45c:	33 27       	eor	r19, r19
 45e:	a0 0d       	add	r26, r0
 460:	61 1d       	adc	r22, r1
 462:	23 1f       	adc	r18, r19
 464:	84 9f       	mul	r24, r20
 466:	60 0d       	add	r22, r0
 468:	21 1d       	adc	r18, r1
 46a:	82 2f       	mov	r24, r18
 46c:	76 2f       	mov	r23, r22
 46e:	6a 2f       	mov	r22, r26
 470:	11 24       	eor	r1, r1
 472:	9f 57       	subi	r25, 0x7F	; 127
 474:	50 40       	sbci	r21, 0x00	; 0
 476:	9a f0       	brmi	.+38     	; 0x49e <__mulsf3_pse+0x88>
 478:	f1 f0       	breq	.+60     	; 0x4b6 <__mulsf3_pse+0xa0>
 47a:	88 23       	and	r24, r24
 47c:	4a f0       	brmi	.+18     	; 0x490 <__mulsf3_pse+0x7a>
 47e:	ee 0f       	add	r30, r30
 480:	ff 1f       	adc	r31, r31
 482:	bb 1f       	adc	r27, r27
 484:	66 1f       	adc	r22, r22
 486:	77 1f       	adc	r23, r23
 488:	88 1f       	adc	r24, r24
 48a:	91 50       	subi	r25, 0x01	; 1
 48c:	50 40       	sbci	r21, 0x00	; 0
 48e:	a9 f7       	brne	.-22     	; 0x47a <__mulsf3_pse+0x64>
 490:	9e 3f       	cpi	r25, 0xFE	; 254
 492:	51 05       	cpc	r21, r1
 494:	80 f0       	brcs	.+32     	; 0x4b6 <__mulsf3_pse+0xa0>
 496:	0c 94 a4 01 	jmp	0x348	; 0x348 <__fp_inf>
 49a:	0c 94 ef 01 	jmp	0x3de	; 0x3de <__fp_szero>
 49e:	5f 3f       	cpi	r21, 0xFF	; 255
 4a0:	e4 f3       	brlt	.-8      	; 0x49a <__mulsf3_pse+0x84>
 4a2:	98 3e       	cpi	r25, 0xE8	; 232
 4a4:	d4 f3       	brlt	.-12     	; 0x49a <__mulsf3_pse+0x84>
 4a6:	86 95       	lsr	r24
 4a8:	77 95       	ror	r23
 4aa:	67 95       	ror	r22
 4ac:	b7 95       	ror	r27
 4ae:	f7 95       	ror	r31
 4b0:	e7 95       	ror	r30
 4b2:	9f 5f       	subi	r25, 0xFF	; 255
 4b4:	c1 f7       	brne	.-16     	; 0x4a6 <__mulsf3_pse+0x90>
 4b6:	fe 2b       	or	r31, r30
 4b8:	88 0f       	add	r24, r24
 4ba:	91 1d       	adc	r25, r1
 4bc:	96 95       	lsr	r25
 4be:	87 95       	ror	r24
 4c0:	97 f9       	bld	r25, 7
 4c2:	08 95       	ret

000004c4 <_exit>:
 4c4:	f8 94       	cli

000004c6 <__stop_program>:
 4c6:	ff cf       	rjmp	.-2      	; 0x4c6 <__stop_program>
