
Da 5 Task 1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  000004ee  00000582  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000004ee  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800106  00800106  00000588  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000588  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000005b8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000028  00000000  00000000  000005f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000001a0  00000000  00000000  00000620  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000010f  00000000  00000000  000007c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000134  00000000  00000000  000008cf  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000034  00000000  00000000  00000a04  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000001c5  00000000  00000000  00000a38  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000006a  00000000  00000000  00000bfd  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000018  00000000  00000000  00000c67  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ee ee       	ldi	r30, 0xEE	; 238
  7c:	f4 e0       	ldi	r31, 0x04	; 4
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a6 30       	cpi	r26, 0x06	; 6
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a6 e0       	ldi	r26, 0x06	; 6
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a8 30       	cpi	r26, 0x08	; 8
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 63 00 	call	0xc6	; 0xc6 <main>
  9e:	0c 94 75 02 	jmp	0x4ea	; 0x4ea <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <Delay>:

// Function delays for the number of ms provided
void Delay(unsigned int length)
{
	int i = 0;
	for (i = 0; i < length; i++)
  a6:	00 97       	sbiw	r24, 0x00	; 0
  a8:	69 f0       	breq	.+26     	; 0xc4 <Delay+0x1e>
  aa:	20 e0       	ldi	r18, 0x00	; 0
  ac:	30 e0       	ldi	r19, 0x00	; 0
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  ae:	ef ec       	ldi	r30, 0xCF	; 207
  b0:	f7 e0       	ldi	r31, 0x07	; 7
  b2:	31 97       	sbiw	r30, 0x01	; 1
  b4:	f1 f7       	brne	.-4      	; 0xb2 <Delay+0xc>
  b6:	00 c0       	rjmp	.+0      	; 0xb8 <Delay+0x12>
  b8:	00 00       	nop
  ba:	2f 5f       	subi	r18, 0xFF	; 255
  bc:	3f 4f       	sbci	r19, 0xFF	; 255
  be:	28 17       	cp	r18, r24
  c0:	39 07       	cpc	r19, r25
  c2:	a9 f7       	brne	.-22     	; 0xae <Delay+0x8>
  c4:	08 95       	ret

000000c6 <main>:
float ADC_ratio = .0009775; // 1/1023
int time = 50;
int value;
int main(void)
{
	DDRD |= (1<<6);         // Enable Port D.6 as an output
  c6:	56 9a       	sbi	0x0a, 6	; 10
	PORTD = (1<<ENABLE);    // Output 1 at Port D.6
  c8:	80 e4       	ldi	r24, 0x40	; 64
  ca:	8b b9       	out	0x0b, r24	; 11
	/*Enable the ADC Conversion*/
	ADMUX = 0;									// use ADC0
  cc:	ec e7       	ldi	r30, 0x7C	; 124
  ce:	f0 e0       	ldi	r31, 0x00	; 0
  d0:	10 82       	st	Z, r1
	ADMUX |= (1 << REFS0);						// use AVcc as the reference
  d2:	80 81       	ld	r24, Z
  d4:	80 64       	ori	r24, 0x40	; 64
  d6:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADPS0) | (1 << ADPS1);		// 8 prescaler
  d8:	ea e7       	ldi	r30, 0x7A	; 122
  da:	f0 e0       	ldi	r31, 0x00	; 0
  dc:	80 81       	ld	r24, Z
  de:	83 60       	ori	r24, 0x03	; 3
  e0:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADEN);						// Enable the ADC
  e2:	80 81       	ld	r24, Z
  e4:	80 68       	ori	r24, 0x80	; 128
  e6:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADSC);						// Start the ADC conversion
  e8:	80 81       	ld	r24, Z
  ea:	80 64       	ori	r24, 0x40	; 64
  ec:	80 83       	st	Z, r24

	while (1)               // Infinite while loop for code execution
	{
		ADCSRA |= (1 << ADSC);						// Start the ADC conversion
  ee:	ca e7       	ldi	r28, 0x7A	; 122
  f0:	d0 e0       	ldi	r29, 0x00	; 0
		loop_until_bit_is_clear(ADCSRA, ADSC);
		value = ADC;
  f2:	08 e7       	ldi	r16, 0x78	; 120
  f4:	10 e0       	ldi	r17, 0x00	; 0
	ADCSRA |= (1 << ADEN);						// Enable the ADC
	ADCSRA |= (1 << ADSC);						// Start the ADC conversion

	while (1)               // Infinite while loop for code execution
	{
		ADCSRA |= (1 << ADSC);						// Start the ADC conversion
  f6:	88 81       	ld	r24, Y
  f8:	80 64       	ori	r24, 0x40	; 64
  fa:	88 83       	st	Y, r24
		loop_until_bit_is_clear(ADCSRA, ADSC);
  fc:	88 81       	ld	r24, Y
  fe:	86 fd       	sbrc	r24, 6
 100:	fd cf       	rjmp	.-6      	; 0xfc <main+0x36>
		value = ADC;
 102:	f8 01       	movw	r30, r16
 104:	80 81       	ld	r24, Z
 106:	91 81       	ldd	r25, Z+1	; 0x01
 108:	90 93 07 01 	sts	0x0107, r25
 10c:	80 93 06 01 	sts	0x0106, r24
		PORTD = PORTD | (1<<ENABLE);
 110:	5e 9a       	sbi	0x0b, 6	; 11
		Delay((unsigned int)time*value*ADC_ratio);
 112:	20 91 06 01 	lds	r18, 0x0106
 116:	30 91 07 01 	lds	r19, 0x0107
 11a:	80 91 00 01 	lds	r24, 0x0100
 11e:	90 91 01 01 	lds	r25, 0x0101
 122:	28 9f       	mul	r18, r24
 124:	b0 01       	movw	r22, r0
 126:	29 9f       	mul	r18, r25
 128:	70 0d       	add	r23, r0
 12a:	38 9f       	mul	r19, r24
 12c:	70 0d       	add	r23, r0
 12e:	11 24       	eor	r1, r1
 130:	80 e0       	ldi	r24, 0x00	; 0
 132:	90 e0       	ldi	r25, 0x00	; 0
 134:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <__floatunsisf>
 138:	20 91 02 01 	lds	r18, 0x0102
 13c:	30 91 03 01 	lds	r19, 0x0103
 140:	40 91 04 01 	lds	r20, 0x0104
 144:	50 91 05 01 	lds	r21, 0x0105
 148:	0e 94 08 02 	call	0x410	; 0x410 <__mulsf3>
 14c:	0e 94 4b 01 	call	0x296	; 0x296 <__fixunssfsi>
 150:	cb 01       	movw	r24, r22
 152:	0e 94 53 00 	call	0xa6	; 0xa6 <Delay>
		PORTD = PORTD & (~(1<<ENABLE));
 156:	5e 98       	cbi	0x0b, 6	; 11
		Delay((unsigned int)time*(1-(value*ADC_ratio)));
 158:	60 91 00 01 	lds	r22, 0x0100
 15c:	70 91 01 01 	lds	r23, 0x0101
 160:	80 e0       	ldi	r24, 0x00	; 0
 162:	90 e0       	ldi	r25, 0x00	; 0
 164:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <__floatunsisf>
 168:	6b 01       	movw	r12, r22
 16a:	7c 01       	movw	r14, r24
 16c:	80 91 06 01 	lds	r24, 0x0106
 170:	90 91 07 01 	lds	r25, 0x0107
 174:	bc 01       	movw	r22, r24
 176:	99 0f       	add	r25, r25
 178:	88 0b       	sbc	r24, r24
 17a:	99 0b       	sbc	r25, r25
 17c:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <__floatsisf>
 180:	20 91 02 01 	lds	r18, 0x0102
 184:	30 91 03 01 	lds	r19, 0x0103
 188:	40 91 04 01 	lds	r20, 0x0104
 18c:	50 91 05 01 	lds	r21, 0x0105
 190:	0e 94 08 02 	call	0x410	; 0x410 <__mulsf3>
 194:	9b 01       	movw	r18, r22
 196:	ac 01       	movw	r20, r24
 198:	60 e0       	ldi	r22, 0x00	; 0
 19a:	70 e0       	ldi	r23, 0x00	; 0
 19c:	80 e8       	ldi	r24, 0x80	; 128
 19e:	9f e3       	ldi	r25, 0x3F	; 63
 1a0:	0e 94 de 00 	call	0x1bc	; 0x1bc <__subsf3>
 1a4:	9b 01       	movw	r18, r22
 1a6:	ac 01       	movw	r20, r24
 1a8:	c7 01       	movw	r24, r14
 1aa:	b6 01       	movw	r22, r12
 1ac:	0e 94 08 02 	call	0x410	; 0x410 <__mulsf3>
 1b0:	0e 94 4b 01 	call	0x296	; 0x296 <__fixunssfsi>
 1b4:	cb 01       	movw	r24, r22
 1b6:	0e 94 53 00 	call	0xa6	; 0xa6 <Delay>
	}
 1ba:	9d cf       	rjmp	.-198    	; 0xf6 <main+0x30>

000001bc <__subsf3>:
 1bc:	50 58       	subi	r21, 0x80	; 128

000001be <__addsf3>:
 1be:	bb 27       	eor	r27, r27
 1c0:	aa 27       	eor	r26, r26
 1c2:	0e 94 f6 00 	call	0x1ec	; 0x1ec <__addsf3x>
 1c6:	0c 94 ce 01 	jmp	0x39c	; 0x39c <__fp_round>
 1ca:	0e 94 c0 01 	call	0x380	; 0x380 <__fp_pscA>
 1ce:	38 f0       	brcs	.+14     	; 0x1de <__addsf3+0x20>
 1d0:	0e 94 c7 01 	call	0x38e	; 0x38e <__fp_pscB>
 1d4:	20 f0       	brcs	.+8      	; 0x1de <__addsf3+0x20>
 1d6:	39 f4       	brne	.+14     	; 0x1e6 <__addsf3+0x28>
 1d8:	9f 3f       	cpi	r25, 0xFF	; 255
 1da:	19 f4       	brne	.+6      	; 0x1e2 <__addsf3+0x24>
 1dc:	26 f4       	brtc	.+8      	; 0x1e6 <__addsf3+0x28>
 1de:	0c 94 bd 01 	jmp	0x37a	; 0x37a <__fp_nan>
 1e2:	0e f4       	brtc	.+2      	; 0x1e6 <__addsf3+0x28>
 1e4:	e0 95       	com	r30
 1e6:	e7 fb       	bst	r30, 7
 1e8:	0c 94 b7 01 	jmp	0x36e	; 0x36e <__fp_inf>

000001ec <__addsf3x>:
 1ec:	e9 2f       	mov	r30, r25
 1ee:	0e 94 df 01 	call	0x3be	; 0x3be <__fp_split3>
 1f2:	58 f3       	brcs	.-42     	; 0x1ca <__addsf3+0xc>
 1f4:	ba 17       	cp	r27, r26
 1f6:	62 07       	cpc	r22, r18
 1f8:	73 07       	cpc	r23, r19
 1fa:	84 07       	cpc	r24, r20
 1fc:	95 07       	cpc	r25, r21
 1fe:	20 f0       	brcs	.+8      	; 0x208 <__addsf3x+0x1c>
 200:	79 f4       	brne	.+30     	; 0x220 <__addsf3x+0x34>
 202:	a6 f5       	brtc	.+104    	; 0x26c <__addsf3x+0x80>
 204:	0c 94 01 02 	jmp	0x402	; 0x402 <__fp_zero>
 208:	0e f4       	brtc	.+2      	; 0x20c <__addsf3x+0x20>
 20a:	e0 95       	com	r30
 20c:	0b 2e       	mov	r0, r27
 20e:	ba 2f       	mov	r27, r26
 210:	a0 2d       	mov	r26, r0
 212:	0b 01       	movw	r0, r22
 214:	b9 01       	movw	r22, r18
 216:	90 01       	movw	r18, r0
 218:	0c 01       	movw	r0, r24
 21a:	ca 01       	movw	r24, r20
 21c:	a0 01       	movw	r20, r0
 21e:	11 24       	eor	r1, r1
 220:	ff 27       	eor	r31, r31
 222:	59 1b       	sub	r21, r25
 224:	99 f0       	breq	.+38     	; 0x24c <__addsf3x+0x60>
 226:	59 3f       	cpi	r21, 0xF9	; 249
 228:	50 f4       	brcc	.+20     	; 0x23e <__addsf3x+0x52>
 22a:	50 3e       	cpi	r21, 0xE0	; 224
 22c:	68 f1       	brcs	.+90     	; 0x288 <__addsf3x+0x9c>
 22e:	1a 16       	cp	r1, r26
 230:	f0 40       	sbci	r31, 0x00	; 0
 232:	a2 2f       	mov	r26, r18
 234:	23 2f       	mov	r18, r19
 236:	34 2f       	mov	r19, r20
 238:	44 27       	eor	r20, r20
 23a:	58 5f       	subi	r21, 0xF8	; 248
 23c:	f3 cf       	rjmp	.-26     	; 0x224 <__addsf3x+0x38>
 23e:	46 95       	lsr	r20
 240:	37 95       	ror	r19
 242:	27 95       	ror	r18
 244:	a7 95       	ror	r26
 246:	f0 40       	sbci	r31, 0x00	; 0
 248:	53 95       	inc	r21
 24a:	c9 f7       	brne	.-14     	; 0x23e <__addsf3x+0x52>
 24c:	7e f4       	brtc	.+30     	; 0x26c <__addsf3x+0x80>
 24e:	1f 16       	cp	r1, r31
 250:	ba 0b       	sbc	r27, r26
 252:	62 0b       	sbc	r22, r18
 254:	73 0b       	sbc	r23, r19
 256:	84 0b       	sbc	r24, r20
 258:	ba f0       	brmi	.+46     	; 0x288 <__addsf3x+0x9c>
 25a:	91 50       	subi	r25, 0x01	; 1
 25c:	a1 f0       	breq	.+40     	; 0x286 <__addsf3x+0x9a>
 25e:	ff 0f       	add	r31, r31
 260:	bb 1f       	adc	r27, r27
 262:	66 1f       	adc	r22, r22
 264:	77 1f       	adc	r23, r23
 266:	88 1f       	adc	r24, r24
 268:	c2 f7       	brpl	.-16     	; 0x25a <__addsf3x+0x6e>
 26a:	0e c0       	rjmp	.+28     	; 0x288 <__addsf3x+0x9c>
 26c:	ba 0f       	add	r27, r26
 26e:	62 1f       	adc	r22, r18
 270:	73 1f       	adc	r23, r19
 272:	84 1f       	adc	r24, r20
 274:	48 f4       	brcc	.+18     	; 0x288 <__addsf3x+0x9c>
 276:	87 95       	ror	r24
 278:	77 95       	ror	r23
 27a:	67 95       	ror	r22
 27c:	b7 95       	ror	r27
 27e:	f7 95       	ror	r31
 280:	9e 3f       	cpi	r25, 0xFE	; 254
 282:	08 f0       	brcs	.+2      	; 0x286 <__addsf3x+0x9a>
 284:	b0 cf       	rjmp	.-160    	; 0x1e6 <__addsf3+0x28>
 286:	93 95       	inc	r25
 288:	88 0f       	add	r24, r24
 28a:	08 f0       	brcs	.+2      	; 0x28e <__addsf3x+0xa2>
 28c:	99 27       	eor	r25, r25
 28e:	ee 0f       	add	r30, r30
 290:	97 95       	ror	r25
 292:	87 95       	ror	r24
 294:	08 95       	ret

00000296 <__fixunssfsi>:
 296:	0e 94 e7 01 	call	0x3ce	; 0x3ce <__fp_splitA>
 29a:	88 f0       	brcs	.+34     	; 0x2be <__fixunssfsi+0x28>
 29c:	9f 57       	subi	r25, 0x7F	; 127
 29e:	98 f0       	brcs	.+38     	; 0x2c6 <__fixunssfsi+0x30>
 2a0:	b9 2f       	mov	r27, r25
 2a2:	99 27       	eor	r25, r25
 2a4:	b7 51       	subi	r27, 0x17	; 23
 2a6:	b0 f0       	brcs	.+44     	; 0x2d4 <__fixunssfsi+0x3e>
 2a8:	e1 f0       	breq	.+56     	; 0x2e2 <__fixunssfsi+0x4c>
 2aa:	66 0f       	add	r22, r22
 2ac:	77 1f       	adc	r23, r23
 2ae:	88 1f       	adc	r24, r24
 2b0:	99 1f       	adc	r25, r25
 2b2:	1a f0       	brmi	.+6      	; 0x2ba <__fixunssfsi+0x24>
 2b4:	ba 95       	dec	r27
 2b6:	c9 f7       	brne	.-14     	; 0x2aa <__fixunssfsi+0x14>
 2b8:	14 c0       	rjmp	.+40     	; 0x2e2 <__fixunssfsi+0x4c>
 2ba:	b1 30       	cpi	r27, 0x01	; 1
 2bc:	91 f0       	breq	.+36     	; 0x2e2 <__fixunssfsi+0x4c>
 2be:	0e 94 01 02 	call	0x402	; 0x402 <__fp_zero>
 2c2:	b1 e0       	ldi	r27, 0x01	; 1
 2c4:	08 95       	ret
 2c6:	0c 94 01 02 	jmp	0x402	; 0x402 <__fp_zero>
 2ca:	67 2f       	mov	r22, r23
 2cc:	78 2f       	mov	r23, r24
 2ce:	88 27       	eor	r24, r24
 2d0:	b8 5f       	subi	r27, 0xF8	; 248
 2d2:	39 f0       	breq	.+14     	; 0x2e2 <__fixunssfsi+0x4c>
 2d4:	b9 3f       	cpi	r27, 0xF9	; 249
 2d6:	cc f3       	brlt	.-14     	; 0x2ca <__fixunssfsi+0x34>
 2d8:	86 95       	lsr	r24
 2da:	77 95       	ror	r23
 2dc:	67 95       	ror	r22
 2de:	b3 95       	inc	r27
 2e0:	d9 f7       	brne	.-10     	; 0x2d8 <__fixunssfsi+0x42>
 2e2:	3e f4       	brtc	.+14     	; 0x2f2 <__fixunssfsi+0x5c>
 2e4:	90 95       	com	r25
 2e6:	80 95       	com	r24
 2e8:	70 95       	com	r23
 2ea:	61 95       	neg	r22
 2ec:	7f 4f       	sbci	r23, 0xFF	; 255
 2ee:	8f 4f       	sbci	r24, 0xFF	; 255
 2f0:	9f 4f       	sbci	r25, 0xFF	; 255
 2f2:	08 95       	ret

000002f4 <__floatunsisf>:
 2f4:	e8 94       	clt
 2f6:	09 c0       	rjmp	.+18     	; 0x30a <__floatsisf+0x12>

000002f8 <__floatsisf>:
 2f8:	97 fb       	bst	r25, 7
 2fa:	3e f4       	brtc	.+14     	; 0x30a <__floatsisf+0x12>
 2fc:	90 95       	com	r25
 2fe:	80 95       	com	r24
 300:	70 95       	com	r23
 302:	61 95       	neg	r22
 304:	7f 4f       	sbci	r23, 0xFF	; 255
 306:	8f 4f       	sbci	r24, 0xFF	; 255
 308:	9f 4f       	sbci	r25, 0xFF	; 255
 30a:	99 23       	and	r25, r25
 30c:	a9 f0       	breq	.+42     	; 0x338 <__floatsisf+0x40>
 30e:	f9 2f       	mov	r31, r25
 310:	96 e9       	ldi	r25, 0x96	; 150
 312:	bb 27       	eor	r27, r27
 314:	93 95       	inc	r25
 316:	f6 95       	lsr	r31
 318:	87 95       	ror	r24
 31a:	77 95       	ror	r23
 31c:	67 95       	ror	r22
 31e:	b7 95       	ror	r27
 320:	f1 11       	cpse	r31, r1
 322:	f8 cf       	rjmp	.-16     	; 0x314 <__floatsisf+0x1c>
 324:	fa f4       	brpl	.+62     	; 0x364 <__floatsisf+0x6c>
 326:	bb 0f       	add	r27, r27
 328:	11 f4       	brne	.+4      	; 0x32e <__floatsisf+0x36>
 32a:	60 ff       	sbrs	r22, 0
 32c:	1b c0       	rjmp	.+54     	; 0x364 <__floatsisf+0x6c>
 32e:	6f 5f       	subi	r22, 0xFF	; 255
 330:	7f 4f       	sbci	r23, 0xFF	; 255
 332:	8f 4f       	sbci	r24, 0xFF	; 255
 334:	9f 4f       	sbci	r25, 0xFF	; 255
 336:	16 c0       	rjmp	.+44     	; 0x364 <__floatsisf+0x6c>
 338:	88 23       	and	r24, r24
 33a:	11 f0       	breq	.+4      	; 0x340 <__floatsisf+0x48>
 33c:	96 e9       	ldi	r25, 0x96	; 150
 33e:	11 c0       	rjmp	.+34     	; 0x362 <__floatsisf+0x6a>
 340:	77 23       	and	r23, r23
 342:	21 f0       	breq	.+8      	; 0x34c <__floatsisf+0x54>
 344:	9e e8       	ldi	r25, 0x8E	; 142
 346:	87 2f       	mov	r24, r23
 348:	76 2f       	mov	r23, r22
 34a:	05 c0       	rjmp	.+10     	; 0x356 <__floatsisf+0x5e>
 34c:	66 23       	and	r22, r22
 34e:	71 f0       	breq	.+28     	; 0x36c <__floatsisf+0x74>
 350:	96 e8       	ldi	r25, 0x86	; 134
 352:	86 2f       	mov	r24, r22
 354:	70 e0       	ldi	r23, 0x00	; 0
 356:	60 e0       	ldi	r22, 0x00	; 0
 358:	2a f0       	brmi	.+10     	; 0x364 <__floatsisf+0x6c>
 35a:	9a 95       	dec	r25
 35c:	66 0f       	add	r22, r22
 35e:	77 1f       	adc	r23, r23
 360:	88 1f       	adc	r24, r24
 362:	da f7       	brpl	.-10     	; 0x35a <__floatsisf+0x62>
 364:	88 0f       	add	r24, r24
 366:	96 95       	lsr	r25
 368:	87 95       	ror	r24
 36a:	97 f9       	bld	r25, 7
 36c:	08 95       	ret

0000036e <__fp_inf>:
 36e:	97 f9       	bld	r25, 7
 370:	9f 67       	ori	r25, 0x7F	; 127
 372:	80 e8       	ldi	r24, 0x80	; 128
 374:	70 e0       	ldi	r23, 0x00	; 0
 376:	60 e0       	ldi	r22, 0x00	; 0
 378:	08 95       	ret

0000037a <__fp_nan>:
 37a:	9f ef       	ldi	r25, 0xFF	; 255
 37c:	80 ec       	ldi	r24, 0xC0	; 192
 37e:	08 95       	ret

00000380 <__fp_pscA>:
 380:	00 24       	eor	r0, r0
 382:	0a 94       	dec	r0
 384:	16 16       	cp	r1, r22
 386:	17 06       	cpc	r1, r23
 388:	18 06       	cpc	r1, r24
 38a:	09 06       	cpc	r0, r25
 38c:	08 95       	ret

0000038e <__fp_pscB>:
 38e:	00 24       	eor	r0, r0
 390:	0a 94       	dec	r0
 392:	12 16       	cp	r1, r18
 394:	13 06       	cpc	r1, r19
 396:	14 06       	cpc	r1, r20
 398:	05 06       	cpc	r0, r21
 39a:	08 95       	ret

0000039c <__fp_round>:
 39c:	09 2e       	mov	r0, r25
 39e:	03 94       	inc	r0
 3a0:	00 0c       	add	r0, r0
 3a2:	11 f4       	brne	.+4      	; 0x3a8 <__fp_round+0xc>
 3a4:	88 23       	and	r24, r24
 3a6:	52 f0       	brmi	.+20     	; 0x3bc <__fp_round+0x20>
 3a8:	bb 0f       	add	r27, r27
 3aa:	40 f4       	brcc	.+16     	; 0x3bc <__fp_round+0x20>
 3ac:	bf 2b       	or	r27, r31
 3ae:	11 f4       	brne	.+4      	; 0x3b4 <__fp_round+0x18>
 3b0:	60 ff       	sbrs	r22, 0
 3b2:	04 c0       	rjmp	.+8      	; 0x3bc <__fp_round+0x20>
 3b4:	6f 5f       	subi	r22, 0xFF	; 255
 3b6:	7f 4f       	sbci	r23, 0xFF	; 255
 3b8:	8f 4f       	sbci	r24, 0xFF	; 255
 3ba:	9f 4f       	sbci	r25, 0xFF	; 255
 3bc:	08 95       	ret

000003be <__fp_split3>:
 3be:	57 fd       	sbrc	r21, 7
 3c0:	90 58       	subi	r25, 0x80	; 128
 3c2:	44 0f       	add	r20, r20
 3c4:	55 1f       	adc	r21, r21
 3c6:	59 f0       	breq	.+22     	; 0x3de <__fp_splitA+0x10>
 3c8:	5f 3f       	cpi	r21, 0xFF	; 255
 3ca:	71 f0       	breq	.+28     	; 0x3e8 <__fp_splitA+0x1a>
 3cc:	47 95       	ror	r20

000003ce <__fp_splitA>:
 3ce:	88 0f       	add	r24, r24
 3d0:	97 fb       	bst	r25, 7
 3d2:	99 1f       	adc	r25, r25
 3d4:	61 f0       	breq	.+24     	; 0x3ee <__fp_splitA+0x20>
 3d6:	9f 3f       	cpi	r25, 0xFF	; 255
 3d8:	79 f0       	breq	.+30     	; 0x3f8 <__fp_splitA+0x2a>
 3da:	87 95       	ror	r24
 3dc:	08 95       	ret
 3de:	12 16       	cp	r1, r18
 3e0:	13 06       	cpc	r1, r19
 3e2:	14 06       	cpc	r1, r20
 3e4:	55 1f       	adc	r21, r21
 3e6:	f2 cf       	rjmp	.-28     	; 0x3cc <__fp_split3+0xe>
 3e8:	46 95       	lsr	r20
 3ea:	f1 df       	rcall	.-30     	; 0x3ce <__fp_splitA>
 3ec:	08 c0       	rjmp	.+16     	; 0x3fe <__fp_splitA+0x30>
 3ee:	16 16       	cp	r1, r22
 3f0:	17 06       	cpc	r1, r23
 3f2:	18 06       	cpc	r1, r24
 3f4:	99 1f       	adc	r25, r25
 3f6:	f1 cf       	rjmp	.-30     	; 0x3da <__fp_splitA+0xc>
 3f8:	86 95       	lsr	r24
 3fa:	71 05       	cpc	r23, r1
 3fc:	61 05       	cpc	r22, r1
 3fe:	08 94       	sec
 400:	08 95       	ret

00000402 <__fp_zero>:
 402:	e8 94       	clt

00000404 <__fp_szero>:
 404:	bb 27       	eor	r27, r27
 406:	66 27       	eor	r22, r22
 408:	77 27       	eor	r23, r23
 40a:	cb 01       	movw	r24, r22
 40c:	97 f9       	bld	r25, 7
 40e:	08 95       	ret

00000410 <__mulsf3>:
 410:	0e 94 1b 02 	call	0x436	; 0x436 <__mulsf3x>
 414:	0c 94 ce 01 	jmp	0x39c	; 0x39c <__fp_round>
 418:	0e 94 c0 01 	call	0x380	; 0x380 <__fp_pscA>
 41c:	38 f0       	brcs	.+14     	; 0x42c <__mulsf3+0x1c>
 41e:	0e 94 c7 01 	call	0x38e	; 0x38e <__fp_pscB>
 422:	20 f0       	brcs	.+8      	; 0x42c <__mulsf3+0x1c>
 424:	95 23       	and	r25, r21
 426:	11 f0       	breq	.+4      	; 0x42c <__mulsf3+0x1c>
 428:	0c 94 b7 01 	jmp	0x36e	; 0x36e <__fp_inf>
 42c:	0c 94 bd 01 	jmp	0x37a	; 0x37a <__fp_nan>
 430:	11 24       	eor	r1, r1
 432:	0c 94 02 02 	jmp	0x404	; 0x404 <__fp_szero>

00000436 <__mulsf3x>:
 436:	0e 94 df 01 	call	0x3be	; 0x3be <__fp_split3>
 43a:	70 f3       	brcs	.-36     	; 0x418 <__mulsf3+0x8>

0000043c <__mulsf3_pse>:
 43c:	95 9f       	mul	r25, r21
 43e:	c1 f3       	breq	.-16     	; 0x430 <__mulsf3+0x20>
 440:	95 0f       	add	r25, r21
 442:	50 e0       	ldi	r21, 0x00	; 0
 444:	55 1f       	adc	r21, r21
 446:	62 9f       	mul	r22, r18
 448:	f0 01       	movw	r30, r0
 44a:	72 9f       	mul	r23, r18
 44c:	bb 27       	eor	r27, r27
 44e:	f0 0d       	add	r31, r0
 450:	b1 1d       	adc	r27, r1
 452:	63 9f       	mul	r22, r19
 454:	aa 27       	eor	r26, r26
 456:	f0 0d       	add	r31, r0
 458:	b1 1d       	adc	r27, r1
 45a:	aa 1f       	adc	r26, r26
 45c:	64 9f       	mul	r22, r20
 45e:	66 27       	eor	r22, r22
 460:	b0 0d       	add	r27, r0
 462:	a1 1d       	adc	r26, r1
 464:	66 1f       	adc	r22, r22
 466:	82 9f       	mul	r24, r18
 468:	22 27       	eor	r18, r18
 46a:	b0 0d       	add	r27, r0
 46c:	a1 1d       	adc	r26, r1
 46e:	62 1f       	adc	r22, r18
 470:	73 9f       	mul	r23, r19
 472:	b0 0d       	add	r27, r0
 474:	a1 1d       	adc	r26, r1
 476:	62 1f       	adc	r22, r18
 478:	83 9f       	mul	r24, r19
 47a:	a0 0d       	add	r26, r0
 47c:	61 1d       	adc	r22, r1
 47e:	22 1f       	adc	r18, r18
 480:	74 9f       	mul	r23, r20
 482:	33 27       	eor	r19, r19
 484:	a0 0d       	add	r26, r0
 486:	61 1d       	adc	r22, r1
 488:	23 1f       	adc	r18, r19
 48a:	84 9f       	mul	r24, r20
 48c:	60 0d       	add	r22, r0
 48e:	21 1d       	adc	r18, r1
 490:	82 2f       	mov	r24, r18
 492:	76 2f       	mov	r23, r22
 494:	6a 2f       	mov	r22, r26
 496:	11 24       	eor	r1, r1
 498:	9f 57       	subi	r25, 0x7F	; 127
 49a:	50 40       	sbci	r21, 0x00	; 0
 49c:	9a f0       	brmi	.+38     	; 0x4c4 <__mulsf3_pse+0x88>
 49e:	f1 f0       	breq	.+60     	; 0x4dc <__mulsf3_pse+0xa0>
 4a0:	88 23       	and	r24, r24
 4a2:	4a f0       	brmi	.+18     	; 0x4b6 <__mulsf3_pse+0x7a>
 4a4:	ee 0f       	add	r30, r30
 4a6:	ff 1f       	adc	r31, r31
 4a8:	bb 1f       	adc	r27, r27
 4aa:	66 1f       	adc	r22, r22
 4ac:	77 1f       	adc	r23, r23
 4ae:	88 1f       	adc	r24, r24
 4b0:	91 50       	subi	r25, 0x01	; 1
 4b2:	50 40       	sbci	r21, 0x00	; 0
 4b4:	a9 f7       	brne	.-22     	; 0x4a0 <__mulsf3_pse+0x64>
 4b6:	9e 3f       	cpi	r25, 0xFE	; 254
 4b8:	51 05       	cpc	r21, r1
 4ba:	80 f0       	brcs	.+32     	; 0x4dc <__mulsf3_pse+0xa0>
 4bc:	0c 94 b7 01 	jmp	0x36e	; 0x36e <__fp_inf>
 4c0:	0c 94 02 02 	jmp	0x404	; 0x404 <__fp_szero>
 4c4:	5f 3f       	cpi	r21, 0xFF	; 255
 4c6:	e4 f3       	brlt	.-8      	; 0x4c0 <__mulsf3_pse+0x84>
 4c8:	98 3e       	cpi	r25, 0xE8	; 232
 4ca:	d4 f3       	brlt	.-12     	; 0x4c0 <__mulsf3_pse+0x84>
 4cc:	86 95       	lsr	r24
 4ce:	77 95       	ror	r23
 4d0:	67 95       	ror	r22
 4d2:	b7 95       	ror	r27
 4d4:	f7 95       	ror	r31
 4d6:	e7 95       	ror	r30
 4d8:	9f 5f       	subi	r25, 0xFF	; 255
 4da:	c1 f7       	brne	.-16     	; 0x4cc <__mulsf3_pse+0x90>
 4dc:	fe 2b       	or	r31, r30
 4de:	88 0f       	add	r24, r24
 4e0:	91 1d       	adc	r25, r1
 4e2:	96 95       	lsr	r25
 4e4:	87 95       	ror	r24
 4e6:	97 f9       	bld	r25, 7
 4e8:	08 95       	ret

000004ea <_exit>:
 4ea:	f8 94       	cli

000004ec <__stop_program>:
 4ec:	ff cf       	rjmp	.-2      	; 0x4ec <__stop_program>
