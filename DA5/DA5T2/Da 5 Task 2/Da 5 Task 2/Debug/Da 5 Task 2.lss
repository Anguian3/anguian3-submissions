
Da 5 Task 2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  000004a6  0000053a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000004a6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800106  00800106  00000540  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000540  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000570  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000028  00000000  00000000  000005b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000001b2  00000000  00000000  000005d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000010f  00000000  00000000  0000078a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000140  00000000  00000000  00000899  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000034  00000000  00000000  000009dc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000001c5  00000000  00000000  00000a10  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000006a  00000000  00000000  00000bd5  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000018  00000000  00000000  00000c3f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e6 ea       	ldi	r30, 0xA6	; 166
  7c:	f4 e0       	ldi	r31, 0x04	; 4
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a6 30       	cpi	r26, 0x06	; 6
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a6 e0       	ldi	r26, 0x06	; 6
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a8 30       	cpi	r26, 0x08	; 8
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 63 00 	call	0xc6	; 0xc6 <main>
  9e:	0c 94 51 02 	jmp	0x4a2	; 0x4a2 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <Delay>:

// Function delays for the number of ms provided
void Delay(unsigned int length)
{
	int i = 0;
	for (i = 0; i < length; i++)
  a6:	00 97       	sbiw	r24, 0x00	; 0
  a8:	69 f0       	breq	.+26     	; 0xc4 <Delay+0x1e>
  aa:	20 e0       	ldi	r18, 0x00	; 0
  ac:	30 e0       	ldi	r19, 0x00	; 0
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  ae:	ef ec       	ldi	r30, 0xCF	; 207
  b0:	f7 e0       	ldi	r31, 0x07	; 7
  b2:	31 97       	sbiw	r30, 0x01	; 1
  b4:	f1 f7       	brne	.-4      	; 0xb2 <Delay+0xc>
  b6:	00 c0       	rjmp	.+0      	; 0xb8 <Delay+0x12>
  b8:	00 00       	nop
  ba:	2f 5f       	subi	r18, 0xFF	; 255
  bc:	3f 4f       	sbci	r19, 0xFF	; 255
  be:	28 17       	cp	r18, r24
  c0:	39 07       	cpc	r19, r25
  c2:	a9 f7       	brne	.-22     	; 0xae <Delay+0x8>
  c4:	08 95       	ret

000000c6 <main>:
float ADC_ratio = .0009775; // 1/1023
int time = 50;
int value;
int main(void)
{
	DDRB = 0xFF;
  c6:	8f ef       	ldi	r24, 0xFF	; 255
  c8:	84 b9       	out	0x04, r24	; 4
	DDRD |= (1<<6);         // Enable Port D.6 as an output
  ca:	56 9a       	sbi	0x0a, 6	; 10
	PORTD = (1<<ENABLE);    // Output 1 at Port D.6
  cc:	80 e4       	ldi	r24, 0x40	; 64
  ce:	8b b9       	out	0x0b, r24	; 11
	/*Enable the ADC Conversion*/
	ADMUX = 0;									// use ADC0
  d0:	ec e7       	ldi	r30, 0x7C	; 124
  d2:	f0 e0       	ldi	r31, 0x00	; 0
  d4:	10 82       	st	Z, r1
	ADMUX |= (1 << REFS0);						// use AVcc as the reference
  d6:	80 81       	ld	r24, Z
  d8:	80 64       	ori	r24, 0x40	; 64
  da:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADPS0) | (1 << ADPS1);		// 8 prescaler
  dc:	ea e7       	ldi	r30, 0x7A	; 122
  de:	f0 e0       	ldi	r31, 0x00	; 0
  e0:	80 81       	ld	r24, Z
  e2:	83 60       	ori	r24, 0x03	; 3
  e4:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADEN);						// Enable the ADC
  e6:	80 81       	ld	r24, Z
  e8:	80 68       	ori	r24, 0x80	; 128
  ea:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADSC);						// Start the ADC conversion
  ec:	80 81       	ld	r24, Z
  ee:	80 64       	ori	r24, 0x40	; 64
  f0:	80 83       	st	Z, r24

	while (1)               // Infinite while loop for code execution
	{
		ADCSRA |= (1 << ADSC);						// Start the ADC conversion
  f2:	ca e7       	ldi	r28, 0x7A	; 122
  f4:	d0 e0       	ldi	r29, 0x00	; 0
		loop_until_bit_is_clear(ADCSRA, ADSC);
		value = ADC;
  f6:	08 e7       	ldi	r16, 0x78	; 120
  f8:	10 e0       	ldi	r17, 0x00	; 0
		PORTB = 0X66;
  fa:	0f 2e       	mov	r0, r31
  fc:	f6 e6       	ldi	r31, 0x66	; 102
  fe:	cf 2e       	mov	r12, r31
 100:	f0 2d       	mov	r31, r0
		Delay((unsigned int)time*value*ADC_ratio);
		PORTB = 0xCC;
 102:	0f 2e       	mov	r0, r31
 104:	fc ec       	ldi	r31, 0xCC	; 204
 106:	df 2e       	mov	r13, r31
 108:	f0 2d       	mov	r31, r0
		Delay((unsigned int)time*value*ADC_ratio);
		PORTB = 0x99;
 10a:	0f 2e       	mov	r0, r31
 10c:	f9 e9       	ldi	r31, 0x99	; 153
 10e:	ef 2e       	mov	r14, r31
 110:	f0 2d       	mov	r31, r0
		Delay((unsigned int)time*value*ADC_ratio);
		PORTB = 0x33;
 112:	0f 2e       	mov	r0, r31
 114:	f3 e3       	ldi	r31, 0x33	; 51
 116:	ff 2e       	mov	r15, r31
 118:	f0 2d       	mov	r31, r0
	ADCSRA |= (1 << ADEN);						// Enable the ADC
	ADCSRA |= (1 << ADSC);						// Start the ADC conversion

	while (1)               // Infinite while loop for code execution
	{
		ADCSRA |= (1 << ADSC);						// Start the ADC conversion
 11a:	88 81       	ld	r24, Y
 11c:	80 64       	ori	r24, 0x40	; 64
 11e:	88 83       	st	Y, r24
		loop_until_bit_is_clear(ADCSRA, ADSC);
 120:	88 81       	ld	r24, Y
 122:	86 fd       	sbrc	r24, 6
 124:	fd cf       	rjmp	.-6      	; 0x120 <main+0x5a>
		value = ADC;
 126:	f8 01       	movw	r30, r16
 128:	80 81       	ld	r24, Z
 12a:	91 81       	ldd	r25, Z+1	; 0x01
 12c:	90 93 07 01 	sts	0x0107, r25
 130:	80 93 06 01 	sts	0x0106, r24
		PORTB = 0X66;
 134:	c5 b8       	out	0x05, r12	; 5
		Delay((unsigned int)time*value*ADC_ratio);
 136:	20 91 06 01 	lds	r18, 0x0106
 13a:	30 91 07 01 	lds	r19, 0x0107
 13e:	80 91 00 01 	lds	r24, 0x0100
 142:	90 91 01 01 	lds	r25, 0x0101
 146:	28 9f       	mul	r18, r24
 148:	b0 01       	movw	r22, r0
 14a:	29 9f       	mul	r18, r25
 14c:	70 0d       	add	r23, r0
 14e:	38 9f       	mul	r19, r24
 150:	70 0d       	add	r23, r0
 152:	11 24       	eor	r1, r1
 154:	80 e0       	ldi	r24, 0x00	; 0
 156:	90 e0       	ldi	r25, 0x00	; 0
 158:	0e 94 56 01 	call	0x2ac	; 0x2ac <__floatunsisf>
 15c:	20 91 02 01 	lds	r18, 0x0102
 160:	30 91 03 01 	lds	r19, 0x0103
 164:	40 91 04 01 	lds	r20, 0x0104
 168:	50 91 05 01 	lds	r21, 0x0105
 16c:	0e 94 bc 01 	call	0x378	; 0x378 <__mulsf3>
 170:	0e 94 27 01 	call	0x24e	; 0x24e <__fixunssfsi>
 174:	cb 01       	movw	r24, r22
 176:	0e 94 53 00 	call	0xa6	; 0xa6 <Delay>
		PORTB = 0xCC;
 17a:	d5 b8       	out	0x05, r13	; 5
		Delay((unsigned int)time*value*ADC_ratio);
 17c:	20 91 06 01 	lds	r18, 0x0106
 180:	30 91 07 01 	lds	r19, 0x0107
 184:	80 91 00 01 	lds	r24, 0x0100
 188:	90 91 01 01 	lds	r25, 0x0101
 18c:	28 9f       	mul	r18, r24
 18e:	b0 01       	movw	r22, r0
 190:	29 9f       	mul	r18, r25
 192:	70 0d       	add	r23, r0
 194:	38 9f       	mul	r19, r24
 196:	70 0d       	add	r23, r0
 198:	11 24       	eor	r1, r1
 19a:	80 e0       	ldi	r24, 0x00	; 0
 19c:	90 e0       	ldi	r25, 0x00	; 0
 19e:	0e 94 56 01 	call	0x2ac	; 0x2ac <__floatunsisf>
 1a2:	20 91 02 01 	lds	r18, 0x0102
 1a6:	30 91 03 01 	lds	r19, 0x0103
 1aa:	40 91 04 01 	lds	r20, 0x0104
 1ae:	50 91 05 01 	lds	r21, 0x0105
 1b2:	0e 94 bc 01 	call	0x378	; 0x378 <__mulsf3>
 1b6:	0e 94 27 01 	call	0x24e	; 0x24e <__fixunssfsi>
 1ba:	cb 01       	movw	r24, r22
 1bc:	0e 94 53 00 	call	0xa6	; 0xa6 <Delay>
		PORTB = 0x99;
 1c0:	e5 b8       	out	0x05, r14	; 5
		Delay((unsigned int)time*value*ADC_ratio);
 1c2:	20 91 06 01 	lds	r18, 0x0106
 1c6:	30 91 07 01 	lds	r19, 0x0107
 1ca:	80 91 00 01 	lds	r24, 0x0100
 1ce:	90 91 01 01 	lds	r25, 0x0101
 1d2:	28 9f       	mul	r18, r24
 1d4:	b0 01       	movw	r22, r0
 1d6:	29 9f       	mul	r18, r25
 1d8:	70 0d       	add	r23, r0
 1da:	38 9f       	mul	r19, r24
 1dc:	70 0d       	add	r23, r0
 1de:	11 24       	eor	r1, r1
 1e0:	80 e0       	ldi	r24, 0x00	; 0
 1e2:	90 e0       	ldi	r25, 0x00	; 0
 1e4:	0e 94 56 01 	call	0x2ac	; 0x2ac <__floatunsisf>
 1e8:	20 91 02 01 	lds	r18, 0x0102
 1ec:	30 91 03 01 	lds	r19, 0x0103
 1f0:	40 91 04 01 	lds	r20, 0x0104
 1f4:	50 91 05 01 	lds	r21, 0x0105
 1f8:	0e 94 bc 01 	call	0x378	; 0x378 <__mulsf3>
 1fc:	0e 94 27 01 	call	0x24e	; 0x24e <__fixunssfsi>
 200:	cb 01       	movw	r24, r22
 202:	0e 94 53 00 	call	0xa6	; 0xa6 <Delay>
		PORTB = 0x33;
 206:	f5 b8       	out	0x05, r15	; 5
		Delay((unsigned int)time*value*ADC_ratio);
 208:	20 91 06 01 	lds	r18, 0x0106
 20c:	30 91 07 01 	lds	r19, 0x0107
 210:	80 91 00 01 	lds	r24, 0x0100
 214:	90 91 01 01 	lds	r25, 0x0101
 218:	28 9f       	mul	r18, r24
 21a:	b0 01       	movw	r22, r0
 21c:	29 9f       	mul	r18, r25
 21e:	70 0d       	add	r23, r0
 220:	38 9f       	mul	r19, r24
 222:	70 0d       	add	r23, r0
 224:	11 24       	eor	r1, r1
 226:	80 e0       	ldi	r24, 0x00	; 0
 228:	90 e0       	ldi	r25, 0x00	; 0
 22a:	0e 94 56 01 	call	0x2ac	; 0x2ac <__floatunsisf>
 22e:	20 91 02 01 	lds	r18, 0x0102
 232:	30 91 03 01 	lds	r19, 0x0103
 236:	40 91 04 01 	lds	r20, 0x0104
 23a:	50 91 05 01 	lds	r21, 0x0105
 23e:	0e 94 bc 01 	call	0x378	; 0x378 <__mulsf3>
 242:	0e 94 27 01 	call	0x24e	; 0x24e <__fixunssfsi>
 246:	cb 01       	movw	r24, r22
 248:	0e 94 53 00 	call	0xa6	; 0xa6 <Delay>
	}
 24c:	66 cf       	rjmp	.-308    	; 0x11a <main+0x54>

0000024e <__fixunssfsi>:
 24e:	0e 94 9b 01 	call	0x336	; 0x336 <__fp_splitA>
 252:	88 f0       	brcs	.+34     	; 0x276 <__fixunssfsi+0x28>
 254:	9f 57       	subi	r25, 0x7F	; 127
 256:	98 f0       	brcs	.+38     	; 0x27e <__fixunssfsi+0x30>
 258:	b9 2f       	mov	r27, r25
 25a:	99 27       	eor	r25, r25
 25c:	b7 51       	subi	r27, 0x17	; 23
 25e:	b0 f0       	brcs	.+44     	; 0x28c <__fixunssfsi+0x3e>
 260:	e1 f0       	breq	.+56     	; 0x29a <__fixunssfsi+0x4c>
 262:	66 0f       	add	r22, r22
 264:	77 1f       	adc	r23, r23
 266:	88 1f       	adc	r24, r24
 268:	99 1f       	adc	r25, r25
 26a:	1a f0       	brmi	.+6      	; 0x272 <__fixunssfsi+0x24>
 26c:	ba 95       	dec	r27
 26e:	c9 f7       	brne	.-14     	; 0x262 <__fixunssfsi+0x14>
 270:	14 c0       	rjmp	.+40     	; 0x29a <__fixunssfsi+0x4c>
 272:	b1 30       	cpi	r27, 0x01	; 1
 274:	91 f0       	breq	.+36     	; 0x29a <__fixunssfsi+0x4c>
 276:	0e 94 b5 01 	call	0x36a	; 0x36a <__fp_zero>
 27a:	b1 e0       	ldi	r27, 0x01	; 1
 27c:	08 95       	ret
 27e:	0c 94 b5 01 	jmp	0x36a	; 0x36a <__fp_zero>
 282:	67 2f       	mov	r22, r23
 284:	78 2f       	mov	r23, r24
 286:	88 27       	eor	r24, r24
 288:	b8 5f       	subi	r27, 0xF8	; 248
 28a:	39 f0       	breq	.+14     	; 0x29a <__fixunssfsi+0x4c>
 28c:	b9 3f       	cpi	r27, 0xF9	; 249
 28e:	cc f3       	brlt	.-14     	; 0x282 <__fixunssfsi+0x34>
 290:	86 95       	lsr	r24
 292:	77 95       	ror	r23
 294:	67 95       	ror	r22
 296:	b3 95       	inc	r27
 298:	d9 f7       	brne	.-10     	; 0x290 <__fixunssfsi+0x42>
 29a:	3e f4       	brtc	.+14     	; 0x2aa <__fixunssfsi+0x5c>
 29c:	90 95       	com	r25
 29e:	80 95       	com	r24
 2a0:	70 95       	com	r23
 2a2:	61 95       	neg	r22
 2a4:	7f 4f       	sbci	r23, 0xFF	; 255
 2a6:	8f 4f       	sbci	r24, 0xFF	; 255
 2a8:	9f 4f       	sbci	r25, 0xFF	; 255
 2aa:	08 95       	ret

000002ac <__floatunsisf>:
 2ac:	e8 94       	clt
 2ae:	09 c0       	rjmp	.+18     	; 0x2c2 <__floatsisf+0x12>

000002b0 <__floatsisf>:
 2b0:	97 fb       	bst	r25, 7
 2b2:	3e f4       	brtc	.+14     	; 0x2c2 <__floatsisf+0x12>
 2b4:	90 95       	com	r25
 2b6:	80 95       	com	r24
 2b8:	70 95       	com	r23
 2ba:	61 95       	neg	r22
 2bc:	7f 4f       	sbci	r23, 0xFF	; 255
 2be:	8f 4f       	sbci	r24, 0xFF	; 255
 2c0:	9f 4f       	sbci	r25, 0xFF	; 255
 2c2:	99 23       	and	r25, r25
 2c4:	a9 f0       	breq	.+42     	; 0x2f0 <__floatsisf+0x40>
 2c6:	f9 2f       	mov	r31, r25
 2c8:	96 e9       	ldi	r25, 0x96	; 150
 2ca:	bb 27       	eor	r27, r27
 2cc:	93 95       	inc	r25
 2ce:	f6 95       	lsr	r31
 2d0:	87 95       	ror	r24
 2d2:	77 95       	ror	r23
 2d4:	67 95       	ror	r22
 2d6:	b7 95       	ror	r27
 2d8:	f1 11       	cpse	r31, r1
 2da:	f8 cf       	rjmp	.-16     	; 0x2cc <__floatsisf+0x1c>
 2dc:	fa f4       	brpl	.+62     	; 0x31c <__floatsisf+0x6c>
 2de:	bb 0f       	add	r27, r27
 2e0:	11 f4       	brne	.+4      	; 0x2e6 <__floatsisf+0x36>
 2e2:	60 ff       	sbrs	r22, 0
 2e4:	1b c0       	rjmp	.+54     	; 0x31c <__floatsisf+0x6c>
 2e6:	6f 5f       	subi	r22, 0xFF	; 255
 2e8:	7f 4f       	sbci	r23, 0xFF	; 255
 2ea:	8f 4f       	sbci	r24, 0xFF	; 255
 2ec:	9f 4f       	sbci	r25, 0xFF	; 255
 2ee:	16 c0       	rjmp	.+44     	; 0x31c <__floatsisf+0x6c>
 2f0:	88 23       	and	r24, r24
 2f2:	11 f0       	breq	.+4      	; 0x2f8 <__floatsisf+0x48>
 2f4:	96 e9       	ldi	r25, 0x96	; 150
 2f6:	11 c0       	rjmp	.+34     	; 0x31a <__floatsisf+0x6a>
 2f8:	77 23       	and	r23, r23
 2fa:	21 f0       	breq	.+8      	; 0x304 <__floatsisf+0x54>
 2fc:	9e e8       	ldi	r25, 0x8E	; 142
 2fe:	87 2f       	mov	r24, r23
 300:	76 2f       	mov	r23, r22
 302:	05 c0       	rjmp	.+10     	; 0x30e <__floatsisf+0x5e>
 304:	66 23       	and	r22, r22
 306:	71 f0       	breq	.+28     	; 0x324 <__floatsisf+0x74>
 308:	96 e8       	ldi	r25, 0x86	; 134
 30a:	86 2f       	mov	r24, r22
 30c:	70 e0       	ldi	r23, 0x00	; 0
 30e:	60 e0       	ldi	r22, 0x00	; 0
 310:	2a f0       	brmi	.+10     	; 0x31c <__floatsisf+0x6c>
 312:	9a 95       	dec	r25
 314:	66 0f       	add	r22, r22
 316:	77 1f       	adc	r23, r23
 318:	88 1f       	adc	r24, r24
 31a:	da f7       	brpl	.-10     	; 0x312 <__floatsisf+0x62>
 31c:	88 0f       	add	r24, r24
 31e:	96 95       	lsr	r25
 320:	87 95       	ror	r24
 322:	97 f9       	bld	r25, 7
 324:	08 95       	ret

00000326 <__fp_split3>:
 326:	57 fd       	sbrc	r21, 7
 328:	90 58       	subi	r25, 0x80	; 128
 32a:	44 0f       	add	r20, r20
 32c:	55 1f       	adc	r21, r21
 32e:	59 f0       	breq	.+22     	; 0x346 <__fp_splitA+0x10>
 330:	5f 3f       	cpi	r21, 0xFF	; 255
 332:	71 f0       	breq	.+28     	; 0x350 <__fp_splitA+0x1a>
 334:	47 95       	ror	r20

00000336 <__fp_splitA>:
 336:	88 0f       	add	r24, r24
 338:	97 fb       	bst	r25, 7
 33a:	99 1f       	adc	r25, r25
 33c:	61 f0       	breq	.+24     	; 0x356 <__fp_splitA+0x20>
 33e:	9f 3f       	cpi	r25, 0xFF	; 255
 340:	79 f0       	breq	.+30     	; 0x360 <__fp_splitA+0x2a>
 342:	87 95       	ror	r24
 344:	08 95       	ret
 346:	12 16       	cp	r1, r18
 348:	13 06       	cpc	r1, r19
 34a:	14 06       	cpc	r1, r20
 34c:	55 1f       	adc	r21, r21
 34e:	f2 cf       	rjmp	.-28     	; 0x334 <__fp_split3+0xe>
 350:	46 95       	lsr	r20
 352:	f1 df       	rcall	.-30     	; 0x336 <__fp_splitA>
 354:	08 c0       	rjmp	.+16     	; 0x366 <__fp_splitA+0x30>
 356:	16 16       	cp	r1, r22
 358:	17 06       	cpc	r1, r23
 35a:	18 06       	cpc	r1, r24
 35c:	99 1f       	adc	r25, r25
 35e:	f1 cf       	rjmp	.-30     	; 0x342 <__fp_splitA+0xc>
 360:	86 95       	lsr	r24
 362:	71 05       	cpc	r23, r1
 364:	61 05       	cpc	r22, r1
 366:	08 94       	sec
 368:	08 95       	ret

0000036a <__fp_zero>:
 36a:	e8 94       	clt

0000036c <__fp_szero>:
 36c:	bb 27       	eor	r27, r27
 36e:	66 27       	eor	r22, r22
 370:	77 27       	eor	r23, r23
 372:	cb 01       	movw	r24, r22
 374:	97 f9       	bld	r25, 7
 376:	08 95       	ret

00000378 <__mulsf3>:
 378:	0e 94 cf 01 	call	0x39e	; 0x39e <__mulsf3x>
 37c:	0c 94 40 02 	jmp	0x480	; 0x480 <__fp_round>
 380:	0e 94 32 02 	call	0x464	; 0x464 <__fp_pscA>
 384:	38 f0       	brcs	.+14     	; 0x394 <__mulsf3+0x1c>
 386:	0e 94 39 02 	call	0x472	; 0x472 <__fp_pscB>
 38a:	20 f0       	brcs	.+8      	; 0x394 <__mulsf3+0x1c>
 38c:	95 23       	and	r25, r21
 38e:	11 f0       	breq	.+4      	; 0x394 <__mulsf3+0x1c>
 390:	0c 94 29 02 	jmp	0x452	; 0x452 <__fp_inf>
 394:	0c 94 2f 02 	jmp	0x45e	; 0x45e <__fp_nan>
 398:	11 24       	eor	r1, r1
 39a:	0c 94 b6 01 	jmp	0x36c	; 0x36c <__fp_szero>

0000039e <__mulsf3x>:
 39e:	0e 94 93 01 	call	0x326	; 0x326 <__fp_split3>
 3a2:	70 f3       	brcs	.-36     	; 0x380 <__mulsf3+0x8>

000003a4 <__mulsf3_pse>:
 3a4:	95 9f       	mul	r25, r21
 3a6:	c1 f3       	breq	.-16     	; 0x398 <__mulsf3+0x20>
 3a8:	95 0f       	add	r25, r21
 3aa:	50 e0       	ldi	r21, 0x00	; 0
 3ac:	55 1f       	adc	r21, r21
 3ae:	62 9f       	mul	r22, r18
 3b0:	f0 01       	movw	r30, r0
 3b2:	72 9f       	mul	r23, r18
 3b4:	bb 27       	eor	r27, r27
 3b6:	f0 0d       	add	r31, r0
 3b8:	b1 1d       	adc	r27, r1
 3ba:	63 9f       	mul	r22, r19
 3bc:	aa 27       	eor	r26, r26
 3be:	f0 0d       	add	r31, r0
 3c0:	b1 1d       	adc	r27, r1
 3c2:	aa 1f       	adc	r26, r26
 3c4:	64 9f       	mul	r22, r20
 3c6:	66 27       	eor	r22, r22
 3c8:	b0 0d       	add	r27, r0
 3ca:	a1 1d       	adc	r26, r1
 3cc:	66 1f       	adc	r22, r22
 3ce:	82 9f       	mul	r24, r18
 3d0:	22 27       	eor	r18, r18
 3d2:	b0 0d       	add	r27, r0
 3d4:	a1 1d       	adc	r26, r1
 3d6:	62 1f       	adc	r22, r18
 3d8:	73 9f       	mul	r23, r19
 3da:	b0 0d       	add	r27, r0
 3dc:	a1 1d       	adc	r26, r1
 3de:	62 1f       	adc	r22, r18
 3e0:	83 9f       	mul	r24, r19
 3e2:	a0 0d       	add	r26, r0
 3e4:	61 1d       	adc	r22, r1
 3e6:	22 1f       	adc	r18, r18
 3e8:	74 9f       	mul	r23, r20
 3ea:	33 27       	eor	r19, r19
 3ec:	a0 0d       	add	r26, r0
 3ee:	61 1d       	adc	r22, r1
 3f0:	23 1f       	adc	r18, r19
 3f2:	84 9f       	mul	r24, r20
 3f4:	60 0d       	add	r22, r0
 3f6:	21 1d       	adc	r18, r1
 3f8:	82 2f       	mov	r24, r18
 3fa:	76 2f       	mov	r23, r22
 3fc:	6a 2f       	mov	r22, r26
 3fe:	11 24       	eor	r1, r1
 400:	9f 57       	subi	r25, 0x7F	; 127
 402:	50 40       	sbci	r21, 0x00	; 0
 404:	9a f0       	brmi	.+38     	; 0x42c <__mulsf3_pse+0x88>
 406:	f1 f0       	breq	.+60     	; 0x444 <__mulsf3_pse+0xa0>
 408:	88 23       	and	r24, r24
 40a:	4a f0       	brmi	.+18     	; 0x41e <__mulsf3_pse+0x7a>
 40c:	ee 0f       	add	r30, r30
 40e:	ff 1f       	adc	r31, r31
 410:	bb 1f       	adc	r27, r27
 412:	66 1f       	adc	r22, r22
 414:	77 1f       	adc	r23, r23
 416:	88 1f       	adc	r24, r24
 418:	91 50       	subi	r25, 0x01	; 1
 41a:	50 40       	sbci	r21, 0x00	; 0
 41c:	a9 f7       	brne	.-22     	; 0x408 <__mulsf3_pse+0x64>
 41e:	9e 3f       	cpi	r25, 0xFE	; 254
 420:	51 05       	cpc	r21, r1
 422:	80 f0       	brcs	.+32     	; 0x444 <__mulsf3_pse+0xa0>
 424:	0c 94 29 02 	jmp	0x452	; 0x452 <__fp_inf>
 428:	0c 94 b6 01 	jmp	0x36c	; 0x36c <__fp_szero>
 42c:	5f 3f       	cpi	r21, 0xFF	; 255
 42e:	e4 f3       	brlt	.-8      	; 0x428 <__mulsf3_pse+0x84>
 430:	98 3e       	cpi	r25, 0xE8	; 232
 432:	d4 f3       	brlt	.-12     	; 0x428 <__mulsf3_pse+0x84>
 434:	86 95       	lsr	r24
 436:	77 95       	ror	r23
 438:	67 95       	ror	r22
 43a:	b7 95       	ror	r27
 43c:	f7 95       	ror	r31
 43e:	e7 95       	ror	r30
 440:	9f 5f       	subi	r25, 0xFF	; 255
 442:	c1 f7       	brne	.-16     	; 0x434 <__mulsf3_pse+0x90>
 444:	fe 2b       	or	r31, r30
 446:	88 0f       	add	r24, r24
 448:	91 1d       	adc	r25, r1
 44a:	96 95       	lsr	r25
 44c:	87 95       	ror	r24
 44e:	97 f9       	bld	r25, 7
 450:	08 95       	ret

00000452 <__fp_inf>:
 452:	97 f9       	bld	r25, 7
 454:	9f 67       	ori	r25, 0x7F	; 127
 456:	80 e8       	ldi	r24, 0x80	; 128
 458:	70 e0       	ldi	r23, 0x00	; 0
 45a:	60 e0       	ldi	r22, 0x00	; 0
 45c:	08 95       	ret

0000045e <__fp_nan>:
 45e:	9f ef       	ldi	r25, 0xFF	; 255
 460:	80 ec       	ldi	r24, 0xC0	; 192
 462:	08 95       	ret

00000464 <__fp_pscA>:
 464:	00 24       	eor	r0, r0
 466:	0a 94       	dec	r0
 468:	16 16       	cp	r1, r22
 46a:	17 06       	cpc	r1, r23
 46c:	18 06       	cpc	r1, r24
 46e:	09 06       	cpc	r0, r25
 470:	08 95       	ret

00000472 <__fp_pscB>:
 472:	00 24       	eor	r0, r0
 474:	0a 94       	dec	r0
 476:	12 16       	cp	r1, r18
 478:	13 06       	cpc	r1, r19
 47a:	14 06       	cpc	r1, r20
 47c:	05 06       	cpc	r0, r21
 47e:	08 95       	ret

00000480 <__fp_round>:
 480:	09 2e       	mov	r0, r25
 482:	03 94       	inc	r0
 484:	00 0c       	add	r0, r0
 486:	11 f4       	brne	.+4      	; 0x48c <__fp_round+0xc>
 488:	88 23       	and	r24, r24
 48a:	52 f0       	brmi	.+20     	; 0x4a0 <__fp_round+0x20>
 48c:	bb 0f       	add	r27, r27
 48e:	40 f4       	brcc	.+16     	; 0x4a0 <__fp_round+0x20>
 490:	bf 2b       	or	r27, r31
 492:	11 f4       	brne	.+4      	; 0x498 <__fp_round+0x18>
 494:	60 ff       	sbrs	r22, 0
 496:	04 c0       	rjmp	.+8      	; 0x4a0 <__fp_round+0x20>
 498:	6f 5f       	subi	r22, 0xFF	; 255
 49a:	7f 4f       	sbci	r23, 0xFF	; 255
 49c:	8f 4f       	sbci	r24, 0xFF	; 255
 49e:	9f 4f       	sbci	r25, 0xFF	; 255
 4a0:	08 95       	ret

000004a2 <_exit>:
 4a2:	f8 94       	cli

000004a4 <__stop_program>:
 4a4:	ff cf       	rjmp	.-2      	; 0x4a4 <__stop_program>
