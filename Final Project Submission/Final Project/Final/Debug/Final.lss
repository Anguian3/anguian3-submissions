
Final.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000044  00800100  000026fa  0000278e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000026fa  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000094  00800144  00800144  000027d2  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000027d2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002830  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d8  00000000  00000000  00002870  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000010c6  00000000  00000000  00002948  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000036c  00000000  00000000  00003a0e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000047b  00000000  00000000  00003d7a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002dc  00000000  00000000  000041f8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003ab  00000000  00000000  000044d4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000005e9  00000000  00000000  0000487f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c8  00000000  00000000  00004e68  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 0d 01 	jmp	0x21a	; 0x21a <__ctors_end>
       4:	0c 94 2a 01 	jmp	0x254	; 0x254 <__bad_interrupt>
       8:	0c 94 2a 01 	jmp	0x254	; 0x254 <__bad_interrupt>
       c:	0c 94 2a 01 	jmp	0x254	; 0x254 <__bad_interrupt>
      10:	0c 94 2a 01 	jmp	0x254	; 0x254 <__bad_interrupt>
      14:	0c 94 2a 01 	jmp	0x254	; 0x254 <__bad_interrupt>
      18:	0c 94 2a 01 	jmp	0x254	; 0x254 <__bad_interrupt>
      1c:	0c 94 2a 01 	jmp	0x254	; 0x254 <__bad_interrupt>
      20:	0c 94 2a 01 	jmp	0x254	; 0x254 <__bad_interrupt>
      24:	0c 94 2a 01 	jmp	0x254	; 0x254 <__bad_interrupt>
      28:	0c 94 2a 01 	jmp	0x254	; 0x254 <__bad_interrupt>
      2c:	0c 94 2a 01 	jmp	0x254	; 0x254 <__bad_interrupt>
      30:	0c 94 2a 01 	jmp	0x254	; 0x254 <__bad_interrupt>
      34:	0c 94 2a 01 	jmp	0x254	; 0x254 <__bad_interrupt>
      38:	0c 94 2a 01 	jmp	0x254	; 0x254 <__bad_interrupt>
      3c:	0c 94 2a 01 	jmp	0x254	; 0x254 <__bad_interrupt>
      40:	0c 94 2a 01 	jmp	0x254	; 0x254 <__bad_interrupt>
      44:	0c 94 2a 01 	jmp	0x254	; 0x254 <__bad_interrupt>
      48:	0c 94 2a 01 	jmp	0x254	; 0x254 <__bad_interrupt>
      4c:	0c 94 2a 01 	jmp	0x254	; 0x254 <__bad_interrupt>
      50:	0c 94 2a 01 	jmp	0x254	; 0x254 <__bad_interrupt>
      54:	0c 94 2a 01 	jmp	0x254	; 0x254 <__bad_interrupt>
      58:	0c 94 2a 01 	jmp	0x254	; 0x254 <__bad_interrupt>
      5c:	0c 94 2a 01 	jmp	0x254	; 0x254 <__bad_interrupt>
      60:	0c 94 2a 01 	jmp	0x254	; 0x254 <__bad_interrupt>
      64:	0c 94 2a 01 	jmp	0x254	; 0x254 <__bad_interrupt>
      68:	08 4a       	sbci	r16, 0xA8	; 168
      6a:	d7 3b       	cpi	r29, 0xB7	; 183
      6c:	3b ce       	rjmp	.-906    	; 0xfffffce4 <__eeprom_end+0xff7efce4>
      6e:	01 6e       	ori	r16, 0xE1	; 225
      70:	84 bc       	out	0x24, r8	; 36
      72:	bf fd       	.word	0xfdbf	; ????
      74:	c1 2f       	mov	r28, r17
      76:	3d 6c       	ori	r19, 0xCD	; 205
      78:	74 31       	cpi	r23, 0x14	; 20
      7a:	9a bd       	out	0x2a, r25	; 42
      7c:	56 83       	std	Z+6, r21	; 0x06
      7e:	3d da       	rcall	.-2950   	; 0xfffff4fa <__eeprom_end+0xff7ef4fa>
      80:	3d 00       	.word	0x003d	; ????
      82:	c7 7f       	andi	r28, 0xF7	; 247
      84:	11 be       	out	0x31, r1	; 49
      86:	d9 e4       	ldi	r29, 0x49	; 73
      88:	bb 4c       	sbci	r27, 0xCB	; 203
      8a:	3e 91       	ld	r19, -X
      8c:	6b aa       	std	Y+51, r6	; 0x33
      8e:	aa be       	out	0x3a, r10	; 58
      90:	00 00       	nop
      92:	00 80       	ld	r0, Z
      94:	3f 07       	cpc	r19, r31
      96:	63 42       	sbci	r22, 0x23	; 35
      98:	36 b7       	in	r19, 0x36	; 54
      9a:	9b d8       	rcall	.-3786   	; 0xfffff1d2 <__eeprom_end+0xff7ef1d2>
      9c:	a7 1a       	sub	r10, r23
      9e:	39 68       	ori	r19, 0x89	; 137
      a0:	56 18       	sub	r5, r6
      a2:	ae ba       	out	0x1e, r10	; 30
      a4:	ab 55       	subi	r26, 0x5B	; 91
      a6:	8c 1d       	adc	r24, r12
      a8:	3c b7       	in	r19, 0x3c	; 60
      aa:	cc 57       	subi	r28, 0x7C	; 124
      ac:	63 bd       	out	0x23, r22	; 35
      ae:	6d ed       	ldi	r22, 0xDD	; 221
      b0:	fd 75       	andi	r31, 0x5D	; 93
      b2:	3e f6       	brtc	.-114    	; 0x42 <__SREG__+0x3>
      b4:	17 72       	andi	r17, 0x27	; 39
      b6:	31 bf       	out	0x31, r19	; 49
      b8:	00 00       	nop
      ba:	00 80       	ld	r0, Z
      bc:	3f 08       	sbc	r3, r15
      be:	00 00       	nop
      c0:	00 be       	out	0x30, r0	; 48
      c2:	92 24       	eor	r9, r2
      c4:	49 12       	cpse	r4, r25
      c6:	3e ab       	std	Y+54, r19	; 0x36
      c8:	aa aa       	std	Y+50, r10	; 0x32
      ca:	2a be       	out	0x3a, r2	; 58
      cc:	cd cc       	rjmp	.-1638   	; 0xfffffa68 <__eeprom_end+0xff7efa68>
      ce:	cc 4c       	sbci	r28, 0xCC	; 204
      d0:	3e 00       	.word	0x003e	; ????
      d2:	00 00       	nop
      d4:	80 be       	out	0x30, r8	; 48
      d6:	ab aa       	std	Y+51, r10	; 0x33
      d8:	aa aa       	std	Y+50, r10	; 0x32
      da:	3e 00       	.word	0x003e	; ????
      dc:	00 00       	nop
      de:	00 bf       	out	0x30, r16	; 48
      e0:	00 00       	nop
      e2:	00 80       	ld	r0, Z
      e4:	3f 00       	.word	0x003f	; ????
      e6:	00 00       	nop
      e8:	00 00       	nop
      ea:	08 41       	sbci	r16, 0x18	; 24
      ec:	78 d3       	rcall	.+1776   	; 0x7de <ConvertUP+0x290>
      ee:	bb 43       	sbci	r27, 0x3B	; 59
      f0:	87 d1       	rcall	.+782    	; 0x400 <USART0init+0xc>
      f2:	13 3d       	cpi	r17, 0xD3	; 211
      f4:	19 0e       	add	r1, r25
      f6:	3c c3       	rjmp	.+1656   	; 0x770 <ConvertUP+0x222>
      f8:	bd 42       	sbci	r27, 0x2D	; 45
      fa:	82 ad       	ldd	r24, Z+58	; 0x3a
      fc:	2b 3e       	cpi	r18, 0xEB	; 235
      fe:	68 ec       	ldi	r22, 0xC8	; 200
     100:	82 76       	andi	r24, 0x62	; 98
     102:	be d9       	rcall	.-3204   	; 0xfffff480 <__eeprom_end+0xff7ef480>
     104:	8f e1       	ldi	r24, 0x1F	; 31
     106:	a9 3e       	cpi	r26, 0xE9	; 233
     108:	4c 80       	ldd	r4, Y+4	; 0x04
     10a:	ef ff       	.word	0xffef	; ????
     10c:	be 01       	movw	r22, r28
     10e:	c4 ff       	sbrs	r28, 4
     110:	7f 3f       	cpi	r23, 0xFF	; 255
     112:	00 00       	nop
     114:	00 00       	nop
	...

00000118 <__trampolines_end>:
     118:	6e 61       	ori	r22, 0x1E	; 30
     11a:	6e 00       	.word	0x006e	; ????

0000011c <__c.2177>:
     11c:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     12c:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     13c:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     14c:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     15c:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     16c:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     17c:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     18c:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     19c:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     1ac:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     1bc:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     1cc:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     1dc:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     1ec:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     1fc:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     20c:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000021a <__ctors_end>:
     21a:	11 24       	eor	r1, r1
     21c:	1f be       	out	0x3f, r1	; 63
     21e:	cf ef       	ldi	r28, 0xFF	; 255
     220:	d8 e0       	ldi	r29, 0x08	; 8
     222:	de bf       	out	0x3e, r29	; 62
     224:	cd bf       	out	0x3d, r28	; 61

00000226 <__do_copy_data>:
     226:	11 e0       	ldi	r17, 0x01	; 1
     228:	a0 e0       	ldi	r26, 0x00	; 0
     22a:	b1 e0       	ldi	r27, 0x01	; 1
     22c:	ea ef       	ldi	r30, 0xFA	; 250
     22e:	f6 e2       	ldi	r31, 0x26	; 38
     230:	02 c0       	rjmp	.+4      	; 0x236 <__do_copy_data+0x10>
     232:	05 90       	lpm	r0, Z+
     234:	0d 92       	st	X+, r0
     236:	a4 34       	cpi	r26, 0x44	; 68
     238:	b1 07       	cpc	r27, r17
     23a:	d9 f7       	brne	.-10     	; 0x232 <__do_copy_data+0xc>

0000023c <__do_clear_bss>:
     23c:	21 e0       	ldi	r18, 0x01	; 1
     23e:	a4 e4       	ldi	r26, 0x44	; 68
     240:	b1 e0       	ldi	r27, 0x01	; 1
     242:	01 c0       	rjmp	.+2      	; 0x246 <.do_clear_bss_start>

00000244 <.do_clear_bss_loop>:
     244:	1d 92       	st	X+, r1

00000246 <.do_clear_bss_start>:
     246:	a8 3d       	cpi	r26, 0xD8	; 216
     248:	b2 07       	cpc	r27, r18
     24a:	e1 f7       	brne	.-8      	; 0x244 <.do_clear_bss_loop>
     24c:	0e 94 31 09 	call	0x1262	; 0x1262 <main>
     250:	0c 94 7b 13 	jmp	0x26f6	; 0x26f6 <_exit>

00000254 <__bad_interrupt>:
     254:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000258 <USART0SendByte>:

// ------------------- USART Functions ------------------------------

// Sends a character via USART
int USART0SendByte(char u8Data, FILE *stream)
{
     258:	cf 93       	push	r28
     25a:	c8 2f       	mov	r28, r24
	if(u8Data == '\n')
     25c:	8a 30       	cpi	r24, 0x0A	; 10
     25e:	29 f4       	brne	.+10     	; 0x26a <USART0SendByte+0x12>
	{
		USART0SendByte('\r', 0);
     260:	60 e0       	ldi	r22, 0x00	; 0
     262:	70 e0       	ldi	r23, 0x00	; 0
     264:	8d e0       	ldi	r24, 0x0D	; 13
     266:	0e 94 2c 01 	call	0x258	; 0x258 <USART0SendByte>
	}
	//wait while previous byte is completed
	while(!(UCSR0A&(1<<UDRE0))){};
     26a:	e0 ec       	ldi	r30, 0xC0	; 192
     26c:	f0 e0       	ldi	r31, 0x00	; 0
     26e:	90 81       	ld	r25, Z
     270:	95 ff       	sbrs	r25, 5
     272:	fd cf       	rjmp	.-6      	; 0x26e <USART0SendByte+0x16>
	// Transmit data
	UDR0 = u8Data;
     274:	c0 93 c6 00 	sts	0x00C6, r28
	return 0;
}
     278:	80 e0       	ldi	r24, 0x00	; 0
     27a:	90 e0       	ldi	r25, 0x00	; 0
     27c:	cf 91       	pop	r28
     27e:	08 95       	ret

00000280 <USART0ReceiveByte>:

// Receives a character via USART
int USART0ReceiveByte(FILE *stream)
{
     280:	cf 93       	push	r28
     282:	bc 01       	movw	r22, r24
	uint8_t u8Data;
	// Wait for byte to be received
	while(!(UCSR0A&(1<<RXC0))){};
     284:	e0 ec       	ldi	r30, 0xC0	; 192
     286:	f0 e0       	ldi	r31, 0x00	; 0
     288:	90 81       	ld	r25, Z
     28a:	99 23       	and	r25, r25
     28c:	ec f7       	brge	.-6      	; 0x288 <USART0ReceiveByte+0x8>
	u8Data=UDR0;
     28e:	c0 91 c6 00 	lds	r28, 0x00C6
	//echo input data
	USART0SendByte(u8Data,stream);
     292:	8c 2f       	mov	r24, r28
     294:	0e 94 2c 01 	call	0x258	; 0x258 <USART0SendByte>
	// Return received data
	return u8Data;
}
     298:	8c 2f       	mov	r24, r28
     29a:	90 e0       	ldi	r25, 0x00	; 0
     29c:	cf 91       	pop	r28
     29e:	08 95       	ret

000002a0 <i2c_write>:
	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);
}
//*******************************************************
void i2c_write(unsigned char data)
{
	TWDR = data;
     2a0:	80 93 bb 00 	sts	0x00BB, r24
	TWCR = (1<<TWINT)|(1<<TWEN);
     2a4:	84 e8       	ldi	r24, 0x84	; 132
     2a6:	80 93 bc 00 	sts	0x00BC, r24
	while(!(TWCR & (1<<TWINT)));
     2aa:	ec eb       	ldi	r30, 0xBC	; 188
     2ac:	f0 e0       	ldi	r31, 0x00	; 0
     2ae:	80 81       	ld	r24, Z
     2b0:	88 23       	and	r24, r24
     2b2:	ec f7       	brge	.-6      	; 0x2ae <i2c_write+0xe>
}
     2b4:	08 95       	ret

000002b6 <i2c_start>:
//*********************************************************
void i2c_start(void)
{
	TWCR = (1<< TWINT) | (1<<TWSTA) | (1<< TWEN);
     2b6:	84 ea       	ldi	r24, 0xA4	; 164
     2b8:	80 93 bc 00 	sts	0x00BC, r24
	while (!(TWCR & (1<<TWINT)));
     2bc:	ec eb       	ldi	r30, 0xBC	; 188
     2be:	f0 e0       	ldi	r31, 0x00	; 0
     2c0:	80 81       	ld	r24, Z
     2c2:	88 23       	and	r24, r24
     2c4:	ec f7       	brge	.-6      	; 0x2c0 <i2c_start+0xa>
}
     2c6:	08 95       	ret

000002c8 <i2c_init>:
//***********************************************************
void i2c_init(void)
{
	TWSR = 0x00; //set prescaler bits to 0
     2c8:	10 92 b9 00 	sts	0x00B9, r1
	TWBR = 0x0C; //0x48; //SCL freq. is 100k for XTAL = 16M
     2cc:	8c e0       	ldi	r24, 0x0C	; 12
     2ce:	80 93 b8 00 	sts	0x00B8, r24
	TWCR = 0x04; //enable TWI module
     2d2:	84 e0       	ldi	r24, 0x04	; 4
     2d4:	80 93 bc 00 	sts	0x00BC, r24
     2d8:	08 95       	ret

000002da <i2c_ReadACK>:
}
//***********************************************************
uint8_t i2c_ReadACK(void)
{
	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWEA);
     2da:	84 ec       	ldi	r24, 0xC4	; 196
     2dc:	80 93 bc 00 	sts	0x00BC, r24
	while ((TWCR & (1<<TWINT)) == 0); // Wait until acknowledment is received
     2e0:	ec eb       	ldi	r30, 0xBC	; 188
     2e2:	f0 e0       	ldi	r31, 0x00	; 0
     2e4:	80 81       	ld	r24, Z
     2e6:	88 23       	and	r24, r24
     2e8:	ec f7       	brge	.-6      	; 0x2e4 <i2c_ReadACK+0xa>
	return TWDR;
     2ea:	80 91 bb 00 	lds	r24, 0x00BB
}
     2ee:	08 95       	ret

000002f0 <i2c_ReadNACK>:
//read byte with NACK
uint8_t i2c_ReadNACK(void)
{
	TWCR = (1<<TWINT)|(1<<TWEN);
     2f0:	84 e8       	ldi	r24, 0x84	; 132
     2f2:	80 93 bc 00 	sts	0x00BC, r24
	while ((TWCR & (1<<TWINT)) == 0); 
     2f6:	ec eb       	ldi	r30, 0xBC	; 188
     2f8:	f0 e0       	ldi	r31, 0x00	; 0
     2fa:	80 81       	ld	r24, Z
     2fc:	88 23       	and	r24, r24
     2fe:	ec f7       	brge	.-6      	; 0x2fa <i2c_ReadNACK+0xa>
	return TWDR;
     300:	80 91 bb 00 	lds	r24, 0x00BB
}
     304:	08 95       	ret

00000306 <i2c_CompassSetUp>:
//***********************************************************

// ---------------- Compass Functions -------------------------------
void i2c_CompassSetUp(void)
{
     306:	1f 93       	push	r17
     308:	cf 93       	push	r28
     30a:	df 93       	push	r29
	i2c_start();
     30c:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <i2c_start>
	i2c_write(0x3C);	// Address + Write bit of compass
     310:	8c e3       	ldi	r24, 0x3C	; 60
     312:	0e 94 50 01 	call	0x2a0	; 0x2a0 <i2c_write>
	i2c_write(0x00);	// Address of configuration register A
     316:	80 e0       	ldi	r24, 0x00	; 0
     318:	0e 94 50 01 	call	0x2a0	; 0x2a0 <i2c_write>
	i2c_write(0x70);	// 15Hz rate with 8 Samples
     31c:	80 e7       	ldi	r24, 0x70	; 112
     31e:	0e 94 50 01 	call	0x2a0	; 0x2a0 <i2c_write>
}

//i2c functions
void i2c_stop()
{
	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);
     322:	cc eb       	ldi	r28, 0xBC	; 188
     324:	d0 e0       	ldi	r29, 0x00	; 0
     326:	14 e9       	ldi	r17, 0x94	; 148
     328:	18 83       	st	Y, r17
	i2c_start();
	i2c_write(0x3C);	// Address + Write bit of compass
	i2c_write(0x00);	// Address of configuration register A
	i2c_write(0x70);	// 15Hz rate with 8 Samples
	i2c_stop();
	i2c_start();
     32a:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <i2c_start>
	i2c_write(0x3C);	// Address + Write bit of compass
     32e:	8c e3       	ldi	r24, 0x3C	; 60
     330:	0e 94 50 01 	call	0x2a0	; 0x2a0 <i2c_write>
	i2c_write(0x01);	// Address of configuration register B
     334:	81 e0       	ldi	r24, 0x01	; 1
     336:	0e 94 50 01 	call	0x2a0	; 0x2a0 <i2c_write>
	i2c_write(0xA0);	// Gain = 5
     33a:	80 ea       	ldi	r24, 0xA0	; 160
     33c:	0e 94 50 01 	call	0x2a0	; 0x2a0 <i2c_write>
}

//i2c functions
void i2c_stop()
{
	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);
     340:	18 83       	st	Y, r17
	i2c_write(0x3C);	// Address + Write bit of compass
	i2c_write(0x01);	// Address of configuration register B
	i2c_write(0xA0);	// Gain = 5
	i2c_stop();

}
     342:	df 91       	pop	r29
     344:	cf 91       	pop	r28
     346:	1f 91       	pop	r17
     348:	08 95       	ret

0000034a <i2c_ReadCompass>:

void i2c_ReadCompass(void)
{
     34a:	1f 93       	push	r17
     34c:	cf 93       	push	r28
     34e:	df 93       	push	r29
	// Set up Single Measurement Mode
	i2c_start();
     350:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <i2c_start>
	i2c_write(0x3C);	// Address + Write bit of compass
     354:	8c e3       	ldi	r24, 0x3C	; 60
     356:	0e 94 50 01 	call	0x2a0	; 0x2a0 <i2c_write>
	i2c_write(0x02);	// Address of configuration register B
     35a:	82 e0       	ldi	r24, 0x02	; 2
     35c:	0e 94 50 01 	call	0x2a0	; 0x2a0 <i2c_write>
	i2c_write(0x01);	// Gain = 5
     360:	81 e0       	ldi	r24, 0x01	; 1
     362:	0e 94 50 01 	call	0x2a0	; 0x2a0 <i2c_write>
}

//i2c functions
void i2c_stop()
{
	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);
     366:	cc eb       	ldi	r28, 0xBC	; 188
     368:	d0 e0       	ldi	r29, 0x00	; 0
     36a:	14 e9       	ldi	r17, 0x94	; 148
     36c:	18 83       	st	Y, r17
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     36e:	8f e3       	ldi	r24, 0x3F	; 63
     370:	9c e9       	ldi	r25, 0x9C	; 156
     372:	01 97       	sbiw	r24, 0x01	; 1
     374:	f1 f7       	brne	.-4      	; 0x372 <i2c_ReadCompass+0x28>
     376:	00 c0       	rjmp	.+0      	; 0x378 <i2c_ReadCompass+0x2e>
     378:	00 00       	nop
	i2c_write(0x01);	// Gain = 5
	i2c_stop();

	_delay_ms(10);		// Delay for at least 6 ms

	i2c_start();
     37a:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <i2c_start>
	i2c_write(0x3D);	// Address + Read bit
     37e:	8d e3       	ldi	r24, 0x3D	; 61
     380:	0e 94 50 01 	call	0x2a0	; 0x2a0 <i2c_write>
	// Read the values
	// Address pointer automatically increments after
	// every read
	Xval = i2c_ReadACK() << 8;
     384:	0e 94 6d 01 	call	0x2da	; 0x2da <i2c_ReadACK>
     388:	10 92 58 01 	sts	0x0158, r1
     38c:	80 93 59 01 	sts	0x0159, r24
	Xval |= i2c_ReadACK();
     390:	0e 94 6d 01 	call	0x2da	; 0x2da <i2c_ReadACK>
     394:	20 91 58 01 	lds	r18, 0x0158
     398:	30 91 59 01 	lds	r19, 0x0159
     39c:	28 2b       	or	r18, r24
     39e:	30 93 59 01 	sts	0x0159, r19
     3a2:	20 93 58 01 	sts	0x0158, r18
	Zval = i2c_ReadACK() << 8;
     3a6:	0e 94 6d 01 	call	0x2da	; 0x2da <i2c_ReadACK>
     3aa:	10 92 54 01 	sts	0x0154, r1
     3ae:	80 93 55 01 	sts	0x0155, r24
	Zval |= i2c_ReadACK();
     3b2:	0e 94 6d 01 	call	0x2da	; 0x2da <i2c_ReadACK>
     3b6:	20 91 54 01 	lds	r18, 0x0154
     3ba:	30 91 55 01 	lds	r19, 0x0155
     3be:	28 2b       	or	r18, r24
     3c0:	30 93 55 01 	sts	0x0155, r19
     3c4:	20 93 54 01 	sts	0x0154, r18
	Yval = i2c_ReadACK() << 8;
     3c8:	0e 94 6d 01 	call	0x2da	; 0x2da <i2c_ReadACK>
     3cc:	10 92 56 01 	sts	0x0156, r1
     3d0:	80 93 57 01 	sts	0x0157, r24
	Yval |= i2c_ReadNACK();
     3d4:	0e 94 78 01 	call	0x2f0	; 0x2f0 <i2c_ReadNACK>
     3d8:	20 91 56 01 	lds	r18, 0x0156
     3dc:	30 91 57 01 	lds	r19, 0x0157
     3e0:	28 2b       	or	r18, r24
     3e2:	30 93 57 01 	sts	0x0157, r19
     3e6:	20 93 56 01 	sts	0x0156, r18
}

//i2c functions
void i2c_stop()
{
	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);
     3ea:	18 83       	st	Y, r17
	Zval = i2c_ReadACK() << 8;
	Zval |= i2c_ReadACK();
	Yval = i2c_ReadACK() << 8;
	Yval |= i2c_ReadNACK();
	i2c_stop();
}
     3ec:	df 91       	pop	r29
     3ee:	cf 91       	pop	r28
     3f0:	1f 91       	pop	r17
     3f2:	08 95       	ret

000003f4 <USART0init>:
}

void USART0init(void)
{
	/*Set baud rate */
	UBRR0L = MYUBRR;
     3f4:	87 e6       	ldi	r24, 0x67	; 103
     3f6:	80 93 c4 00 	sts	0x00C4, r24
	UCSR0B |= (1 << TXEN0);				// Enable transmitter
     3fa:	e1 ec       	ldi	r30, 0xC1	; 193
     3fc:	f0 e0       	ldi	r31, 0x00	; 0
     3fe:	80 81       	ld	r24, Z
     400:	88 60       	ori	r24, 0x08	; 8
     402:	80 83       	st	Z, r24
	UCSR0C |= (1 << UCSZ01) | (1 << UCSZ00); // Set frame: 8-bit data
     404:	e2 ec       	ldi	r30, 0xC2	; 194
     406:	f0 e0       	ldi	r31, 0x00	; 0
     408:	80 81       	ld	r24, Z
     40a:	86 60       	ori	r24, 0x06	; 6
     40c:	80 83       	st	Z, r24
     40e:	08 95       	ret

00000410 <delay>:
}

// Function delays for 1 second
void delay(){
     410:	84 ef       	ldi	r24, 0xF4	; 244
     412:	91 e0       	ldi	r25, 0x01	; 1
     414:	ef e3       	ldi	r30, 0x3F	; 63
     416:	ff e1       	ldi	r31, 0x1F	; 31
     418:	31 97       	sbiw	r30, 0x01	; 1
     41a:	f1 f7       	brne	.-4      	; 0x418 <delay+0x8>
     41c:	00 c0       	rjmp	.+0      	; 0x41e <delay+0xe>
     41e:	00 00       	nop
     420:	01 97       	sbiw	r24, 0x01	; 1
	for(int i = 500; i > 0; i--)
     422:	c1 f7       	brne	.-16     	; 0x414 <delay+0x4>
	_delay_ms(2);
}
     424:	08 95       	ret

00000426 <i2c_ReadAccel>:

void i2c_ReadAccel(void)
{
////// X /////////
	i2c_start();
     426:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <i2c_start>
	i2c_write(0xA6); // Address to write to Accelo
     42a:	86 ea       	ldi	r24, 0xA6	; 166
     42c:	0e 94 50 01 	call	0x2a0	; 0x2a0 <i2c_write>
	i2c_write(0x33); // X msb Address
     430:	83 e3       	ldi	r24, 0x33	; 51
     432:	0e 94 50 01 	call	0x2a0	; 0x2a0 <i2c_write>
	i2c_start();
     436:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <i2c_start>
	i2c_write(0xA7); // Address to read from Accelo
     43a:	87 ea       	ldi	r24, 0xA7	; 167
     43c:	0e 94 50 01 	call	0x2a0	; 0x2a0 <i2c_write>
	X_accel_Raw = i2c_ReadACK() << 8;
     440:	0e 94 6d 01 	call	0x2da	; 0x2da <i2c_ReadACK>
     444:	10 92 7e 01 	sts	0x017E, r1
     448:	80 93 7f 01 	sts	0x017F, r24

	i2c_start();
     44c:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <i2c_start>
	i2c_write(0xA6); // Address to write to Accelo
     450:	86 ea       	ldi	r24, 0xA6	; 166
     452:	0e 94 50 01 	call	0x2a0	; 0x2a0 <i2c_write>
	i2c_write(0x32); // X lsb Address
     456:	82 e3       	ldi	r24, 0x32	; 50
     458:	0e 94 50 01 	call	0x2a0	; 0x2a0 <i2c_write>
	i2c_start();
     45c:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <i2c_start>
	i2c_write(0xA7); // Address to read from Accelo
     460:	87 ea       	ldi	r24, 0xA7	; 167
     462:	0e 94 50 01 	call	0x2a0	; 0x2a0 <i2c_write>
	X_accel_Raw |= i2c_ReadACK();
     466:	0e 94 6d 01 	call	0x2da	; 0x2da <i2c_ReadACK>
     46a:	20 91 7e 01 	lds	r18, 0x017E
     46e:	30 91 7f 01 	lds	r19, 0x017F
     472:	28 2b       	or	r18, r24
     474:	30 93 7f 01 	sts	0x017F, r19
     478:	20 93 7e 01 	sts	0x017E, r18
////// Y ////////
	i2c_start();
     47c:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <i2c_start>
	i2c_write(0xA6); // Address to write to Accelo
     480:	86 ea       	ldi	r24, 0xA6	; 166
     482:	0e 94 50 01 	call	0x2a0	; 0x2a0 <i2c_write>
	i2c_write(0x35); // Y msb Address
     486:	85 e3       	ldi	r24, 0x35	; 53
     488:	0e 94 50 01 	call	0x2a0	; 0x2a0 <i2c_write>
	i2c_start();
     48c:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <i2c_start>
	i2c_write(0xA7); // Address to read from Accelo
     490:	87 ea       	ldi	r24, 0xA7	; 167
     492:	0e 94 50 01 	call	0x2a0	; 0x2a0 <i2c_write>
	Y_accel_Raw = i2c_ReadACK() << 8;
     496:	0e 94 6d 01 	call	0x2da	; 0x2da <i2c_ReadACK>
     49a:	10 92 68 01 	sts	0x0168, r1
     49e:	80 93 69 01 	sts	0x0169, r24

	i2c_start();
     4a2:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <i2c_start>
	i2c_write(0xA6); // Address to write to Accelo
     4a6:	86 ea       	ldi	r24, 0xA6	; 166
     4a8:	0e 94 50 01 	call	0x2a0	; 0x2a0 <i2c_write>
	i2c_write(0x34); // Y lsb Address
     4ac:	84 e3       	ldi	r24, 0x34	; 52
     4ae:	0e 94 50 01 	call	0x2a0	; 0x2a0 <i2c_write>
	i2c_start();
     4b2:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <i2c_start>
	i2c_write(0xA7); // Address to read from Accelo
     4b6:	87 ea       	ldi	r24, 0xA7	; 167
     4b8:	0e 94 50 01 	call	0x2a0	; 0x2a0 <i2c_write>
	Y_accel_Raw |= i2c_ReadACK();
     4bc:	0e 94 6d 01 	call	0x2da	; 0x2da <i2c_ReadACK>
     4c0:	20 91 68 01 	lds	r18, 0x0168
     4c4:	30 91 69 01 	lds	r19, 0x0169
     4c8:	28 2b       	or	r18, r24
     4ca:	30 93 69 01 	sts	0x0169, r19
     4ce:	20 93 68 01 	sts	0x0168, r18

////// Z ////////
	i2c_start();
     4d2:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <i2c_start>
	i2c_write(0xA6); // Address to write to Accelo
     4d6:	86 ea       	ldi	r24, 0xA6	; 166
     4d8:	0e 94 50 01 	call	0x2a0	; 0x2a0 <i2c_write>
	i2c_write(0x37); // Y msb Address
     4dc:	87 e3       	ldi	r24, 0x37	; 55
     4de:	0e 94 50 01 	call	0x2a0	; 0x2a0 <i2c_write>
	i2c_start();
     4e2:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <i2c_start>
	i2c_write(0xA7); // Address to read from Accelo
     4e6:	87 ea       	ldi	r24, 0xA7	; 167
     4e8:	0e 94 50 01 	call	0x2a0	; 0x2a0 <i2c_write>
	Z_accel_Raw = i2c_ReadACK() << 8;
     4ec:	0e 94 6d 01 	call	0x2da	; 0x2da <i2c_ReadACK>
     4f0:	10 92 88 01 	sts	0x0188, r1
     4f4:	80 93 89 01 	sts	0x0189, r24

	i2c_start();
     4f8:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <i2c_start>
	i2c_write(0xA6); // Address to write to Accelo
     4fc:	86 ea       	ldi	r24, 0xA6	; 166
     4fe:	0e 94 50 01 	call	0x2a0	; 0x2a0 <i2c_write>
	i2c_write(0x36); // Y lsb Address
     502:	86 e3       	ldi	r24, 0x36	; 54
     504:	0e 94 50 01 	call	0x2a0	; 0x2a0 <i2c_write>
	i2c_start();
     508:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <i2c_start>
	i2c_write(0xA7); // Address to read from Accelo
     50c:	87 ea       	ldi	r24, 0xA7	; 167
     50e:	0e 94 50 01 	call	0x2a0	; 0x2a0 <i2c_write>
	Z_accel_Raw |= i2c_ReadNACK();
     512:	0e 94 78 01 	call	0x2f0	; 0x2f0 <i2c_ReadNACK>
     516:	20 91 88 01 	lds	r18, 0x0188
     51a:	30 91 89 01 	lds	r19, 0x0189
     51e:	28 2b       	or	r18, r24
     520:	30 93 89 01 	sts	0x0189, r19
     524:	20 93 88 01 	sts	0x0188, r18
}

//i2c functions
void i2c_stop()
{
	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);
     528:	84 e9       	ldi	r24, 0x94	; 148
     52a:	80 93 bc 00 	sts	0x00BC, r24
     52e:	08 95       	ret

00000530 <i2c_AccelSetUp>:
	i2c_stop();
}

void i2c_AccelSetUp(void)
{	
	i2c_start();
     530:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <i2c_start>
	i2c_write(0xA6);
     534:	86 ea       	ldi	r24, 0xA6	; 166
     536:	0e 94 50 01 	call	0x2a0	; 0x2a0 <i2c_write>
	i2c_write(0x2D);	// Power Ctl register
     53a:	8d e2       	ldi	r24, 0x2D	; 45
     53c:	0e 94 50 01 	call	0x2a0	; 0x2a0 <i2c_write>
	i2c_write(0x08);	// Enable measurement mode
     540:	88 e0       	ldi	r24, 0x08	; 8
     542:	0e 94 50 01 	call	0x2a0	; 0x2a0 <i2c_write>
}

//i2c functions
void i2c_stop()
{
	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);
     546:	84 e9       	ldi	r24, 0x94	; 148
     548:	80 93 bc 00 	sts	0x00BC, r24
     54c:	08 95       	ret

0000054e <ConvertUP>:

// This function converts the raw pressure read from the barometer to
// the actual pressure value.  These conversions were obtained from
// the datasheet
void ConvertUP(void)
{	
     54e:	4f 92       	push	r4
     550:	5f 92       	push	r5
     552:	6f 92       	push	r6
     554:	7f 92       	push	r7
     556:	8f 92       	push	r8
     558:	9f 92       	push	r9
     55a:	af 92       	push	r10
     55c:	bf 92       	push	r11
     55e:	cf 92       	push	r12
     560:	df 92       	push	r13
     562:	ef 92       	push	r14
     564:	ff 92       	push	r15
     566:	0f 93       	push	r16
     568:	1f 93       	push	r17
	B6 = B5 - 4000;
     56a:	80 90 76 01 	lds	r8, 0x0176
     56e:	90 90 77 01 	lds	r9, 0x0177
     572:	a0 90 78 01 	lds	r10, 0x0178
     576:	b0 90 79 01 	lds	r11, 0x0179
     57a:	20 ea       	ldi	r18, 0xA0	; 160
     57c:	82 1a       	sub	r8, r18
     57e:	2f e0       	ldi	r18, 0x0F	; 15
     580:	92 0a       	sbc	r9, r18
     582:	a1 08       	sbc	r10, r1
     584:	b1 08       	sbc	r11, r1
     586:	80 92 6a 01 	sts	0x016A, r8
     58a:	90 92 6b 01 	sts	0x016B, r9
     58e:	a0 92 6c 01 	sts	0x016C, r10
     592:	b0 92 6d 01 	sts	0x016D, r11
	X1 = B6*B6;
     596:	a5 01       	movw	r20, r10
     598:	94 01       	movw	r18, r8
     59a:	c5 01       	movw	r24, r10
     59c:	b4 01       	movw	r22, r8
     59e:	0e 94 37 11 	call	0x226e	; 0x226e <__mulsi3>
	X1 = X1 / 4096;
     5a2:	2b 01       	movw	r4, r22
     5a4:	3c 01       	movw	r6, r24
     5a6:	99 23       	and	r25, r25
     5a8:	34 f4       	brge	.+12     	; 0x5b6 <ConvertUP+0x68>
     5aa:	2f ef       	ldi	r18, 0xFF	; 255
     5ac:	42 0e       	add	r4, r18
     5ae:	2f e0       	ldi	r18, 0x0F	; 15
     5b0:	52 1e       	adc	r5, r18
     5b2:	61 1c       	adc	r6, r1
     5b4:	71 1c       	adc	r7, r1
     5b6:	03 2e       	mov	r0, r19
     5b8:	3c e0       	ldi	r19, 0x0C	; 12
     5ba:	75 94       	asr	r7
     5bc:	67 94       	ror	r6
     5be:	57 94       	ror	r5
     5c0:	47 94       	ror	r4
     5c2:	3a 95       	dec	r19
     5c4:	d1 f7       	brne	.-12     	; 0x5ba <ConvertUP+0x6c>
     5c6:	30 2d       	mov	r19, r0
	X2 = AC2 * B6;
	X2 = X2 / 2048;
	X3 = X1 + X2;
	B3 = AC1 * 4;
	B3 = B3 + X3;
	B3 = B3 << oss;
     5c8:	e0 91 bc 01 	lds	r30, 0x01BC
void ConvertUP(void)
{	
	B6 = B5 - 4000;
	X1 = B6*B6;
	X1 = X1 / 4096;
	X1 = X1 * B2;
     5cc:	60 91 9e 01 	lds	r22, 0x019E
     5d0:	70 91 9f 01 	lds	r23, 0x019F
     5d4:	80 91 a0 01 	lds	r24, 0x01A0
     5d8:	90 91 a1 01 	lds	r25, 0x01A1
     5dc:	a3 01       	movw	r20, r6
     5de:	92 01       	movw	r18, r4
     5e0:	0e 94 37 11 	call	0x226e	; 0x226e <__mulsi3>
	X1 = X1 / 2048;
     5e4:	8b 01       	movw	r16, r22
     5e6:	9c 01       	movw	r18, r24
     5e8:	99 23       	and	r25, r25
     5ea:	24 f4       	brge	.+8      	; 0x5f4 <ConvertUP+0xa6>
     5ec:	01 50       	subi	r16, 0x01	; 1
     5ee:	18 4f       	sbci	r17, 0xF8	; 248
     5f0:	2f 4f       	sbci	r18, 0xFF	; 255
     5f2:	3f 4f       	sbci	r19, 0xFF	; 255
     5f4:	68 01       	movw	r12, r16
     5f6:	79 01       	movw	r14, r18
     5f8:	0b 2e       	mov	r0, r27
     5fa:	bb e0       	ldi	r27, 0x0B	; 11
     5fc:	f5 94       	asr	r15
     5fe:	e7 94       	ror	r14
     600:	d7 94       	ror	r13
     602:	c7 94       	ror	r12
     604:	ba 95       	dec	r27
     606:	d1 f7       	brne	.-12     	; 0x5fc <ConvertUP+0xae>
     608:	b0 2d       	mov	r27, r0
	X2 = AC2 * B6;
     60a:	60 91 96 01 	lds	r22, 0x0196
     60e:	70 91 97 01 	lds	r23, 0x0197
     612:	80 91 98 01 	lds	r24, 0x0198
     616:	90 91 99 01 	lds	r25, 0x0199
     61a:	a5 01       	movw	r20, r10
     61c:	94 01       	movw	r18, r8
     61e:	0e 94 37 11 	call	0x226e	; 0x226e <__mulsi3>
	X2 = X2 / 2048;
     622:	8b 01       	movw	r16, r22
     624:	9c 01       	movw	r18, r24
     626:	99 23       	and	r25, r25
     628:	24 f4       	brge	.+8      	; 0x632 <ConvertUP+0xe4>
     62a:	01 50       	subi	r16, 0x01	; 1
     62c:	18 4f       	sbci	r17, 0xF8	; 248
     62e:	2f 4f       	sbci	r18, 0xFF	; 255
     630:	3f 4f       	sbci	r19, 0xFF	; 255
     632:	d9 01       	movw	r26, r18
     634:	c8 01       	movw	r24, r16
     636:	07 2e       	mov	r0, r23
     638:	7b e0       	ldi	r23, 0x0B	; 11
     63a:	b5 95       	asr	r27
     63c:	a7 95       	ror	r26
     63e:	97 95       	ror	r25
     640:	87 95       	ror	r24
     642:	7a 95       	dec	r23
     644:	d1 f7       	brne	.-12     	; 0x63a <ConvertUP+0xec>
     646:	70 2d       	mov	r23, r0
	X3 = X1 + X2;
     648:	8c 0d       	add	r24, r12
     64a:	9d 1d       	adc	r25, r13
     64c:	ae 1d       	adc	r26, r14
     64e:	bf 1d       	adc	r27, r15
	B3 = AC1 * 4;
     650:	40 91 60 01 	lds	r20, 0x0160
     654:	50 91 61 01 	lds	r21, 0x0161
     658:	60 91 62 01 	lds	r22, 0x0162
     65c:	70 91 63 01 	lds	r23, 0x0163
     660:	44 0f       	add	r20, r20
     662:	55 1f       	adc	r21, r21
     664:	66 1f       	adc	r22, r22
     666:	77 1f       	adc	r23, r23
     668:	44 0f       	add	r20, r20
     66a:	55 1f       	adc	r21, r21
     66c:	66 1f       	adc	r22, r22
     66e:	77 1f       	adc	r23, r23
	B3 = B3 + X3;
     670:	84 0f       	add	r24, r20
     672:	95 1f       	adc	r25, r21
     674:	a6 1f       	adc	r26, r22
     676:	b7 1f       	adc	r27, r23
	B3 = B3 << oss;
     678:	0e 2e       	mov	r0, r30
     67a:	04 c0       	rjmp	.+8      	; 0x684 <ConvertUP+0x136>
     67c:	88 0f       	add	r24, r24
     67e:	99 1f       	adc	r25, r25
     680:	aa 1f       	adc	r26, r26
     682:	bb 1f       	adc	r27, r27
     684:	0a 94       	dec	r0
     686:	d2 f7       	brpl	.-12     	; 0x67c <ConvertUP+0x12e>
	B3 = B3 + 2;
     688:	02 96       	adiw	r24, 0x02	; 2
     68a:	a1 1d       	adc	r26, r1
     68c:	b1 1d       	adc	r27, r1
	B3 = B3 / 4;
     68e:	6c 01       	movw	r12, r24
     690:	7d 01       	movw	r14, r26
     692:	bb 23       	and	r27, r27
     694:	2c f4       	brge	.+10     	; 0x6a0 <ConvertUP+0x152>
     696:	23 e0       	ldi	r18, 0x03	; 3
     698:	c2 0e       	add	r12, r18
     69a:	d1 1c       	adc	r13, r1
     69c:	e1 1c       	adc	r14, r1
     69e:	f1 1c       	adc	r15, r1
     6a0:	f5 94       	asr	r15
     6a2:	e7 94       	ror	r14
     6a4:	d7 94       	ror	r13
     6a6:	c7 94       	ror	r12
     6a8:	f5 94       	asr	r15
     6aa:	e7 94       	ror	r14
     6ac:	d7 94       	ror	r13
     6ae:	c7 94       	ror	r12
     6b0:	c0 92 ca 01 	sts	0x01CA, r12
     6b4:	d0 92 cb 01 	sts	0x01CB, r13
     6b8:	e0 92 cc 01 	sts	0x01CC, r14
     6bc:	f0 92 cd 01 	sts	0x01CD, r15
	X1 = AC3 * B6;
     6c0:	60 91 9a 01 	lds	r22, 0x019A
     6c4:	70 91 9b 01 	lds	r23, 0x019B
     6c8:	80 91 9c 01 	lds	r24, 0x019C
     6cc:	90 91 9d 01 	lds	r25, 0x019D
     6d0:	a5 01       	movw	r20, r10
     6d2:	94 01       	movw	r18, r8
     6d4:	0e 94 37 11 	call	0x226e	; 0x226e <__mulsi3>
	X1 = X1 / 8192;
     6d8:	4b 01       	movw	r8, r22
     6da:	5c 01       	movw	r10, r24
     6dc:	99 23       	and	r25, r25
     6de:	34 f4       	brge	.+12     	; 0x6ec <ConvertUP+0x19e>
     6e0:	2f ef       	ldi	r18, 0xFF	; 255
     6e2:	82 0e       	add	r8, r18
     6e4:	2f e1       	ldi	r18, 0x1F	; 31
     6e6:	92 1e       	adc	r9, r18
     6e8:	a1 1c       	adc	r10, r1
     6ea:	b1 1c       	adc	r11, r1
     6ec:	07 2e       	mov	r0, r23
     6ee:	7d e0       	ldi	r23, 0x0D	; 13
     6f0:	b5 94       	asr	r11
     6f2:	a7 94       	ror	r10
     6f4:	97 94       	ror	r9
     6f6:	87 94       	ror	r8
     6f8:	7a 95       	dec	r23
     6fa:	d1 f7       	brne	.-12     	; 0x6f0 <ConvertUP+0x1a2>
     6fc:	70 2d       	mov	r23, r0
     6fe:	80 92 92 01 	sts	0x0192, r8
     702:	90 92 93 01 	sts	0x0193, r9
     706:	a0 92 94 01 	sts	0x0194, r10
     70a:	b0 92 95 01 	sts	0x0195, r11
	X2 = B6 * B6;
	X2 = X2 / 4096;
	X2 = X2 * B1;
     70e:	60 91 b8 01 	lds	r22, 0x01B8
     712:	70 91 b9 01 	lds	r23, 0x01B9
     716:	80 91 ba 01 	lds	r24, 0x01BA
     71a:	90 91 bb 01 	lds	r25, 0x01BB
     71e:	a3 01       	movw	r20, r6
     720:	92 01       	movw	r18, r4
     722:	0e 94 37 11 	call	0x226e	; 0x226e <__mulsi3>
	X2 = X2 / 65536;
     726:	2b 01       	movw	r4, r22
     728:	3c 01       	movw	r6, r24
     72a:	99 23       	and	r25, r25
     72c:	2c f4       	brge	.+10     	; 0x738 <ConvertUP+0x1ea>
     72e:	2f ef       	ldi	r18, 0xFF	; 255
     730:	42 0e       	add	r4, r18
     732:	52 1e       	adc	r5, r18
     734:	61 1c       	adc	r6, r1
     736:	71 1c       	adc	r7, r1
     738:	c3 01       	movw	r24, r6
     73a:	bb 27       	eor	r27, r27
     73c:	97 fd       	sbrc	r25, 7
     73e:	b0 95       	com	r27
     740:	ab 2f       	mov	r26, r27
     742:	80 93 6e 01 	sts	0x016E, r24
     746:	90 93 6f 01 	sts	0x016F, r25
     74a:	a0 93 70 01 	sts	0x0170, r26
     74e:	b0 93 71 01 	sts	0x0171, r27
	X3 = X1 + X2;
     752:	88 0d       	add	r24, r8
     754:	99 1d       	adc	r25, r9
     756:	aa 1d       	adc	r26, r10
     758:	bb 1d       	adc	r27, r11
	X3 = X3 + 2;
     75a:	02 96       	adiw	r24, 0x02	; 2
     75c:	a1 1d       	adc	r26, r1
     75e:	b1 1d       	adc	r27, r1
	X3 = X3 / 4;
     760:	ac 01       	movw	r20, r24
     762:	bd 01       	movw	r22, r26
     764:	bb 23       	and	r27, r27
     766:	24 f4       	brge	.+8      	; 0x770 <ConvertUP+0x222>
     768:	4d 5f       	subi	r20, 0xFD	; 253
     76a:	5f 4f       	sbci	r21, 0xFF	; 255
     76c:	6f 4f       	sbci	r22, 0xFF	; 255
     76e:	7f 4f       	sbci	r23, 0xFF	; 255
     770:	db 01       	movw	r26, r22
     772:	ca 01       	movw	r24, r20
     774:	b5 95       	asr	r27
     776:	a7 95       	ror	r26
     778:	97 95       	ror	r25
     77a:	87 95       	ror	r24
     77c:	b5 95       	asr	r27
     77e:	a7 95       	ror	r26
     780:	97 95       	ror	r25
     782:	87 95       	ror	r24
     784:	80 93 a6 01 	sts	0x01A6, r24
     788:	90 93 a7 01 	sts	0x01A7, r25
     78c:	a0 93 a8 01 	sts	0x01A8, r26
     790:	b0 93 a9 01 	sts	0x01A9, r27
	B4 = ((unsigned long)(X3 + 32768));
     794:	9c 01       	movw	r18, r24
     796:	ad 01       	movw	r20, r26
     798:	30 58       	subi	r19, 0x80	; 128
     79a:	4f 4f       	sbci	r20, 0xFF	; 255
     79c:	5f 4f       	sbci	r21, 0xFF	; 255
	B4 = B4 * AC4;
     79e:	60 91 7a 01 	lds	r22, 0x017A
     7a2:	70 91 7b 01 	lds	r23, 0x017B
     7a6:	80 91 7c 01 	lds	r24, 0x017C
     7aa:	90 91 7d 01 	lds	r25, 0x017D
     7ae:	0e 94 37 11 	call	0x226e	; 0x226e <__mulsi3>
	B4 = B4 / 32768;
     7b2:	4b 01       	movw	r8, r22
     7b4:	5c 01       	movw	r10, r24
     7b6:	07 2e       	mov	r0, r23
     7b8:	7f e0       	ldi	r23, 0x0F	; 15
     7ba:	b6 94       	lsr	r11
     7bc:	a7 94       	ror	r10
     7be:	97 94       	ror	r9
     7c0:	87 94       	ror	r8
     7c2:	7a 95       	dec	r23
     7c4:	d1 f7       	brne	.-12     	; 0x7ba <ConvertUP+0x26c>
     7c6:	70 2d       	mov	r23, r0
     7c8:	80 92 ae 01 	sts	0x01AE, r8
     7cc:	90 92 af 01 	sts	0x01AF, r9
     7d0:	a0 92 b0 01 	sts	0x01B0, r10
     7d4:	b0 92 b1 01 	sts	0x01B1, r11
	B7 = (unsigned long)UP - B3;
     7d8:	40 90 50 01 	lds	r4, 0x0150
     7dc:	50 90 51 01 	lds	r5, 0x0151
     7e0:	60 90 52 01 	lds	r6, 0x0152
     7e4:	70 90 53 01 	lds	r7, 0x0153
     7e8:	a3 01       	movw	r20, r6
     7ea:	92 01       	movw	r18, r4
     7ec:	2c 19       	sub	r18, r12
     7ee:	3d 09       	sbc	r19, r13
     7f0:	4e 09       	sbc	r20, r14
     7f2:	5f 09       	sbc	r21, r15
	B7 = B7 * (50000 >> oss);
     7f4:	80 e5       	ldi	r24, 0x50	; 80
     7f6:	93 ec       	ldi	r25, 0xC3	; 195
     7f8:	a0 e0       	ldi	r26, 0x00	; 0
     7fa:	b0 e0       	ldi	r27, 0x00	; 0
     7fc:	bc 01       	movw	r22, r24
     7fe:	cd 01       	movw	r24, r26
     800:	04 c0       	rjmp	.+8      	; 0x80a <ConvertUP+0x2bc>
     802:	95 95       	asr	r25
     804:	87 95       	ror	r24
     806:	77 95       	ror	r23
     808:	67 95       	ror	r22
     80a:	ea 95       	dec	r30
     80c:	d2 f7       	brpl	.-12     	; 0x802 <ConvertUP+0x2b4>
     80e:	0e 94 37 11 	call	0x226e	; 0x226e <__mulsi3>
     812:	60 93 b4 01 	sts	0x01B4, r22
     816:	70 93 b5 01 	sts	0x01B5, r23
     81a:	80 93 b6 01 	sts	0x01B6, r24
     81e:	90 93 b7 01 	sts	0x01B7, r25
	if(B7 < 0x80000000) {
     822:	99 23       	and	r25, r25
     824:	8c f0       	brlt	.+34     	; 0x848 <ConvertUP+0x2fa>
		UP = B7 * 2;
     826:	66 0f       	add	r22, r22
     828:	77 1f       	adc	r23, r23
     82a:	88 1f       	adc	r24, r24
     82c:	99 1f       	adc	r25, r25
		UP = UP / B4;
     82e:	a5 01       	movw	r20, r10
     830:	94 01       	movw	r18, r8
     832:	0e 94 47 11 	call	0x228e	; 0x228e <__udivmodsi4>
     836:	20 93 50 01 	sts	0x0150, r18
     83a:	30 93 51 01 	sts	0x0151, r19
     83e:	40 93 52 01 	sts	0x0152, r20
     842:	50 93 53 01 	sts	0x0153, r21
     846:	75 c0       	rjmp	.+234    	; 0x932 <__stack+0x33>
	}
	else {
		X1 = UP/256;
     848:	d3 01       	movw	r26, r6
     84a:	c2 01       	movw	r24, r4
     84c:	77 20       	and	r7, r7
     84e:	24 f4       	brge	.+8      	; 0x858 <ConvertUP+0x30a>
     850:	81 50       	subi	r24, 0x01	; 1
     852:	9f 4f       	sbci	r25, 0xFF	; 255
     854:	af 4f       	sbci	r26, 0xFF	; 255
     856:	bf 4f       	sbci	r27, 0xFF	; 255
     858:	69 2f       	mov	r22, r25
     85a:	7a 2f       	mov	r23, r26
     85c:	8b 2f       	mov	r24, r27
     85e:	99 27       	eor	r25, r25
     860:	87 fd       	sbrc	r24, 7
     862:	9a 95       	dec	r25
		X2 = X1;
		X1 = X1 * X2;
     864:	9b 01       	movw	r18, r22
     866:	ac 01       	movw	r20, r24
     868:	0e 94 37 11 	call	0x226e	; 0x226e <__mulsi3>
     86c:	9b 01       	movw	r18, r22
     86e:	ac 01       	movw	r20, r24
		X1 = X1 * 3038;
     870:	ae ed       	ldi	r26, 0xDE	; 222
     872:	bb e0       	ldi	r27, 0x0B	; 11
     874:	0e 94 88 11 	call	0x2310	; 0x2310 <__muluhisi3>
		X1 = X1 / 65536;
     878:	6b 01       	movw	r12, r22
     87a:	7c 01       	movw	r14, r24
     87c:	99 23       	and	r25, r25
     87e:	2c f4       	brge	.+10     	; 0x88a <ConvertUP+0x33c>
     880:	2f ef       	ldi	r18, 0xFF	; 255
     882:	c2 0e       	add	r12, r18
     884:	d2 1e       	adc	r13, r18
     886:	e1 1c       	adc	r14, r1
     888:	f1 1c       	adc	r15, r1
     88a:	67 01       	movw	r12, r14
     88c:	ff 24       	eor	r15, r15
     88e:	d7 fc       	sbrc	r13, 7
     890:	f0 94       	com	r15
     892:	ef 2c       	mov	r14, r15
     894:	c0 92 92 01 	sts	0x0192, r12
     898:	d0 92 93 01 	sts	0x0193, r13
     89c:	e0 92 94 01 	sts	0x0194, r14
     8a0:	f0 92 95 01 	sts	0x0195, r15
		X2 = (-7357 * UP);
     8a4:	a3 e4       	ldi	r26, 0x43	; 67
     8a6:	b3 ee       	ldi	r27, 0xE3	; 227
     8a8:	a3 01       	movw	r20, r6
     8aa:	92 01       	movw	r18, r4
     8ac:	0e 94 96 11 	call	0x232c	; 0x232c <__mulohisi3>
		X2 = X2 / 65536;
     8b0:	4b 01       	movw	r8, r22
     8b2:	5c 01       	movw	r10, r24
     8b4:	99 23       	and	r25, r25
     8b6:	2c f4       	brge	.+10     	; 0x8c2 <ConvertUP+0x374>
     8b8:	2f ef       	ldi	r18, 0xFF	; 255
     8ba:	82 0e       	add	r8, r18
     8bc:	92 1e       	adc	r9, r18
     8be:	a1 1c       	adc	r10, r1
     8c0:	b1 1c       	adc	r11, r1
     8c2:	c5 01       	movw	r24, r10
     8c4:	bb 27       	eor	r27, r27
     8c6:	97 fd       	sbrc	r25, 7
     8c8:	b0 95       	com	r27
     8ca:	ab 2f       	mov	r26, r27
     8cc:	80 93 6e 01 	sts	0x016E, r24
     8d0:	90 93 6f 01 	sts	0x016F, r25
     8d4:	a0 93 70 01 	sts	0x0170, r26
     8d8:	b0 93 71 01 	sts	0x0171, r27
		X3 = X1 + X2 + 3791;
     8dc:	8c 0d       	add	r24, r12
     8de:	9d 1d       	adc	r25, r13
     8e0:	ae 1d       	adc	r26, r14
     8e2:	bf 1d       	adc	r27, r15
     8e4:	81 53       	subi	r24, 0x31	; 49
     8e6:	91 4f       	sbci	r25, 0xF1	; 241
     8e8:	af 4f       	sbci	r26, 0xFF	; 255
     8ea:	bf 4f       	sbci	r27, 0xFF	; 255
		X3 = X3 / 4;
     8ec:	ac 01       	movw	r20, r24
     8ee:	bd 01       	movw	r22, r26
     8f0:	22 f4       	brpl	.+8      	; 0x8fa <ConvertUP+0x3ac>
     8f2:	4d 5f       	subi	r20, 0xFD	; 253
     8f4:	5f 4f       	sbci	r21, 0xFF	; 255
     8f6:	6f 4f       	sbci	r22, 0xFF	; 255
     8f8:	7f 4f       	sbci	r23, 0xFF	; 255
     8fa:	75 95       	asr	r23
     8fc:	67 95       	ror	r22
     8fe:	57 95       	ror	r21
     900:	47 95       	ror	r20
     902:	75 95       	asr	r23
     904:	67 95       	ror	r22
     906:	57 95       	ror	r21
     908:	47 95       	ror	r20
     90a:	40 93 a6 01 	sts	0x01A6, r20
     90e:	50 93 a7 01 	sts	0x01A7, r21
     912:	60 93 a8 01 	sts	0x01A8, r22
     916:	70 93 a9 01 	sts	0x01A9, r23
		UP = UP + X3;
     91a:	44 0d       	add	r20, r4
     91c:	55 1d       	adc	r21, r5
     91e:	66 1d       	adc	r22, r6
     920:	77 1d       	adc	r23, r7
     922:	40 93 50 01 	sts	0x0150, r20
     926:	50 93 51 01 	sts	0x0151, r21
     92a:	60 93 52 01 	sts	0x0152, r22
     92e:	70 93 53 01 	sts	0x0153, r23
	}
}
     932:	1f 91       	pop	r17
     934:	0f 91       	pop	r16
     936:	ff 90       	pop	r15
     938:	ef 90       	pop	r14
     93a:	df 90       	pop	r13
     93c:	cf 90       	pop	r12
     93e:	bf 90       	pop	r11
     940:	af 90       	pop	r10
     942:	9f 90       	pop	r9
     944:	8f 90       	pop	r8
     946:	7f 90       	pop	r7
     948:	6f 90       	pop	r6
     94a:	5f 90       	pop	r5
     94c:	4f 90       	pop	r4
     94e:	08 95       	ret

00000950 <readBarometerUP>:

// Reads the Raw Barometer Pressure and stores it into UP
void readBarometerUP(void)
{
     950:	1f 93       	push	r17
     952:	cf 93       	push	r28
     954:	df 93       	push	r29
	// Set up for UP Sampling...
	i2c_start();
     956:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <i2c_start>
	i2c_write(0xEE);	// Barometer address + write
     95a:	8e ee       	ldi	r24, 0xEE	; 238
     95c:	0e 94 50 01 	call	0x2a0	; 0x2a0 <i2c_write>
	i2c_write(0xF4);	// Config register for temp/UP
     960:	84 ef       	ldi	r24, 0xF4	; 244
     962:	0e 94 50 01 	call	0x2a0	; 0x2a0 <i2c_write>
	i2c_write(0x34);	// Oversampling Resolution 0 *4.5 ms
     966:	84 e3       	ldi	r24, 0x34	; 52
     968:	0e 94 50 01 	call	0x2a0	; 0x2a0 <i2c_write>
}

//i2c functions
void i2c_stop()
{
	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);
     96c:	cc eb       	ldi	r28, 0xBC	; 188
     96e:	d0 e0       	ldi	r29, 0x00	; 0
     970:	14 e9       	ldi	r17, 0x94	; 148
     972:	18 83       	st	Y, r17
	i2c_write(0xEE);	// Barometer address + write
	i2c_write(0xF4);	// Config register for temp/UP
	i2c_write(0x34);	// Oversampling Resolution 0 *4.5 ms
	i2c_stop();

	oss = 0;
     974:	10 92 bc 01 	sts	0x01BC, r1
     978:	10 92 bd 01 	sts	0x01BD, r1
     97c:	10 92 be 01 	sts	0x01BE, r1
     980:	10 92 bf 01 	sts	0x01BF, r1
     984:	8f e3       	ldi	r24, 0x3F	; 63
     986:	9c e9       	ldi	r25, 0x9C	; 156
     988:	01 97       	sbiw	r24, 0x01	; 1
     98a:	f1 f7       	brne	.-4      	; 0x988 <readBarometerUP+0x38>
     98c:	00 c0       	rjmp	.+0      	; 0x98e <readBarometerUP+0x3e>
     98e:	00 00       	nop
	_delay_ms(10);		// Delay at least 4.5 ms for UP reading
	// Begin Reading...
	i2c_start();
     990:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <i2c_start>
	i2c_write(0xEE);	// Barometer address + write
     994:	8e ee       	ldi	r24, 0xEE	; 238
     996:	0e 94 50 01 	call	0x2a0	; 0x2a0 <i2c_write>
	i2c_write(0xF6);	// MSB of data register
     99a:	86 ef       	ldi	r24, 0xF6	; 246
     99c:	0e 94 50 01 	call	0x2a0	; 0x2a0 <i2c_write>
	i2c_start();		// Restart
     9a0:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <i2c_start>
	i2c_write(0xEF);	// Barometer address + Read
     9a4:	8f ee       	ldi	r24, 0xEF	; 239
     9a6:	0e 94 50 01 	call	0x2a0	; 0x2a0 <i2c_write>
	UP = i2c_ReadACK();
     9aa:	0e 94 6d 01 	call	0x2da	; 0x2da <i2c_ReadACK>
     9ae:	90 e0       	ldi	r25, 0x00	; 0
     9b0:	a0 e0       	ldi	r26, 0x00	; 0
     9b2:	b0 e0       	ldi	r27, 0x00	; 0
	UP = UP << 8;
     9b4:	ba 2f       	mov	r27, r26
     9b6:	a9 2f       	mov	r26, r25
     9b8:	98 2f       	mov	r25, r24
     9ba:	88 27       	eor	r24, r24
     9bc:	80 93 50 01 	sts	0x0150, r24
     9c0:	90 93 51 01 	sts	0x0151, r25
     9c4:	a0 93 52 01 	sts	0x0152, r26
     9c8:	b0 93 53 01 	sts	0x0153, r27
	UP = UP + i2c_ReadACK();
     9cc:	0e 94 6d 01 	call	0x2da	; 0x2da <i2c_ReadACK>
     9d0:	40 91 50 01 	lds	r20, 0x0150
     9d4:	50 91 51 01 	lds	r21, 0x0151
     9d8:	60 91 52 01 	lds	r22, 0x0152
     9dc:	70 91 53 01 	lds	r23, 0x0153
     9e0:	48 0f       	add	r20, r24
     9e2:	51 1d       	adc	r21, r1
     9e4:	61 1d       	adc	r22, r1
     9e6:	71 1d       	adc	r23, r1
	UP = UP << 8;
     9e8:	76 2f       	mov	r23, r22
     9ea:	65 2f       	mov	r22, r21
     9ec:	54 2f       	mov	r21, r20
     9ee:	44 27       	eor	r20, r20
     9f0:	40 93 50 01 	sts	0x0150, r20
     9f4:	50 93 51 01 	sts	0x0151, r21
     9f8:	60 93 52 01 	sts	0x0152, r22
     9fc:	70 93 53 01 	sts	0x0153, r23
	UP = UP + i2c_ReadNACK();
     a00:	0e 94 78 01 	call	0x2f0	; 0x2f0 <i2c_ReadNACK>
     a04:	40 91 50 01 	lds	r20, 0x0150
     a08:	50 91 51 01 	lds	r21, 0x0151
     a0c:	60 91 52 01 	lds	r22, 0x0152
     a10:	70 91 53 01 	lds	r23, 0x0153
     a14:	48 0f       	add	r20, r24
     a16:	51 1d       	adc	r21, r1
     a18:	61 1d       	adc	r22, r1
     a1a:	71 1d       	adc	r23, r1
	UP = UP >> (8 - oss);
     a1c:	20 91 bc 01 	lds	r18, 0x01BC
     a20:	30 91 bd 01 	lds	r19, 0x01BD
     a24:	88 e0       	ldi	r24, 0x08	; 8
     a26:	90 e0       	ldi	r25, 0x00	; 0
     a28:	82 1b       	sub	r24, r18
     a2a:	93 0b       	sbc	r25, r19
     a2c:	04 c0       	rjmp	.+8      	; 0xa36 <readBarometerUP+0xe6>
     a2e:	75 95       	asr	r23
     a30:	67 95       	ror	r22
     a32:	57 95       	ror	r21
     a34:	47 95       	ror	r20
     a36:	8a 95       	dec	r24
     a38:	d2 f7       	brpl	.-12     	; 0xa2e <readBarometerUP+0xde>
     a3a:	40 93 50 01 	sts	0x0150, r20
     a3e:	50 93 51 01 	sts	0x0151, r21
     a42:	60 93 52 01 	sts	0x0152, r22
     a46:	70 93 53 01 	sts	0x0153, r23
}

//i2c functions
void i2c_stop()
{
	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);
     a4a:	18 83       	st	Y, r17
	UP = UP + i2c_ReadACK();
	UP = UP << 8;
	UP = UP + i2c_ReadNACK();
	UP = UP >> (8 - oss);
	i2c_stop();
}
     a4c:	df 91       	pop	r29
     a4e:	cf 91       	pop	r28
     a50:	1f 91       	pop	r17
     a52:	08 95       	ret

00000a54 <getBarometerCalibrations>:

// Obtains all the Calibration values needed for converting the raw
// values.
void getBarometerCalibrations(void)
{
	i2c_start();
     a54:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <i2c_start>
	i2c_write(0xEE);	// Barometer Address + write
     a58:	8e ee       	ldi	r24, 0xEE	; 238
     a5a:	0e 94 50 01 	call	0x2a0	; 0x2a0 <i2c_write>
	i2c_write(0xAA);	// go to MSB of AC1
     a5e:	8a ea       	ldi	r24, 0xAA	; 170
     a60:	0e 94 50 01 	call	0x2a0	; 0x2a0 <i2c_write>
	i2c_start();		// Restart
     a64:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <i2c_start>
	i2c_write(0xEF);	// Barometer Address + Read
     a68:	8f ee       	ldi	r24, 0xEF	; 239
     a6a:	0e 94 50 01 	call	0x2a0	; 0x2a0 <i2c_write>
	AC1 = i2c_ReadACK() << 8;	// MSB
     a6e:	0e 94 6d 01 	call	0x2da	; 0x2da <i2c_ReadACK>
     a72:	90 e0       	ldi	r25, 0x00	; 0
     a74:	98 2f       	mov	r25, r24
     a76:	88 27       	eor	r24, r24
     a78:	09 2e       	mov	r0, r25
     a7a:	00 0c       	add	r0, r0
     a7c:	aa 0b       	sbc	r26, r26
     a7e:	bb 0b       	sbc	r27, r27
     a80:	80 93 60 01 	sts	0x0160, r24
     a84:	90 93 61 01 	sts	0x0161, r25
     a88:	a0 93 62 01 	sts	0x0162, r26
     a8c:	b0 93 63 01 	sts	0x0163, r27
	AC1 |= i2c_ReadACK();		// LSB
     a90:	0e 94 6d 01 	call	0x2da	; 0x2da <i2c_ReadACK>
     a94:	40 91 60 01 	lds	r20, 0x0160
     a98:	50 91 61 01 	lds	r21, 0x0161
     a9c:	60 91 62 01 	lds	r22, 0x0162
     aa0:	70 91 63 01 	lds	r23, 0x0163
     aa4:	48 2b       	or	r20, r24
     aa6:	40 93 60 01 	sts	0x0160, r20
     aaa:	50 93 61 01 	sts	0x0161, r21
     aae:	60 93 62 01 	sts	0x0162, r22
     ab2:	70 93 63 01 	sts	0x0163, r23
	AC2 = i2c_ReadACK() << 8;	// MSB
     ab6:	0e 94 6d 01 	call	0x2da	; 0x2da <i2c_ReadACK>
     aba:	90 e0       	ldi	r25, 0x00	; 0
     abc:	98 2f       	mov	r25, r24
     abe:	88 27       	eor	r24, r24
     ac0:	09 2e       	mov	r0, r25
     ac2:	00 0c       	add	r0, r0
     ac4:	aa 0b       	sbc	r26, r26
     ac6:	bb 0b       	sbc	r27, r27
     ac8:	80 93 96 01 	sts	0x0196, r24
     acc:	90 93 97 01 	sts	0x0197, r25
     ad0:	a0 93 98 01 	sts	0x0198, r26
     ad4:	b0 93 99 01 	sts	0x0199, r27
	AC2 |= i2c_ReadACK();		// LSB
     ad8:	0e 94 6d 01 	call	0x2da	; 0x2da <i2c_ReadACK>
     adc:	40 91 96 01 	lds	r20, 0x0196
     ae0:	50 91 97 01 	lds	r21, 0x0197
     ae4:	60 91 98 01 	lds	r22, 0x0198
     ae8:	70 91 99 01 	lds	r23, 0x0199
     aec:	48 2b       	or	r20, r24
     aee:	40 93 96 01 	sts	0x0196, r20
     af2:	50 93 97 01 	sts	0x0197, r21
     af6:	60 93 98 01 	sts	0x0198, r22
     afa:	70 93 99 01 	sts	0x0199, r23
	AC3 = i2c_ReadACK() << 8;	// MSB
     afe:	0e 94 6d 01 	call	0x2da	; 0x2da <i2c_ReadACK>
     b02:	90 e0       	ldi	r25, 0x00	; 0
     b04:	98 2f       	mov	r25, r24
     b06:	88 27       	eor	r24, r24
     b08:	09 2e       	mov	r0, r25
     b0a:	00 0c       	add	r0, r0
     b0c:	aa 0b       	sbc	r26, r26
     b0e:	bb 0b       	sbc	r27, r27
     b10:	80 93 9a 01 	sts	0x019A, r24
     b14:	90 93 9b 01 	sts	0x019B, r25
     b18:	a0 93 9c 01 	sts	0x019C, r26
     b1c:	b0 93 9d 01 	sts	0x019D, r27
	AC3 |= i2c_ReadACK();		// LSB
     b20:	0e 94 6d 01 	call	0x2da	; 0x2da <i2c_ReadACK>
     b24:	40 91 9a 01 	lds	r20, 0x019A
     b28:	50 91 9b 01 	lds	r21, 0x019B
     b2c:	60 91 9c 01 	lds	r22, 0x019C
     b30:	70 91 9d 01 	lds	r23, 0x019D
     b34:	48 2b       	or	r20, r24
     b36:	40 93 9a 01 	sts	0x019A, r20
     b3a:	50 93 9b 01 	sts	0x019B, r21
     b3e:	60 93 9c 01 	sts	0x019C, r22
     b42:	70 93 9d 01 	sts	0x019D, r23
	AC4 = i2c_ReadACK() << 8;	// MSB
     b46:	0e 94 6d 01 	call	0x2da	; 0x2da <i2c_ReadACK>
     b4a:	90 e0       	ldi	r25, 0x00	; 0
     b4c:	98 2f       	mov	r25, r24
     b4e:	88 27       	eor	r24, r24
     b50:	09 2e       	mov	r0, r25
     b52:	00 0c       	add	r0, r0
     b54:	aa 0b       	sbc	r26, r26
     b56:	bb 0b       	sbc	r27, r27
     b58:	80 93 7a 01 	sts	0x017A, r24
     b5c:	90 93 7b 01 	sts	0x017B, r25
     b60:	a0 93 7c 01 	sts	0x017C, r26
     b64:	b0 93 7d 01 	sts	0x017D, r27
	AC4 |= i2c_ReadACK();		// LSB
     b68:	0e 94 6d 01 	call	0x2da	; 0x2da <i2c_ReadACK>
     b6c:	40 91 7a 01 	lds	r20, 0x017A
     b70:	50 91 7b 01 	lds	r21, 0x017B
     b74:	60 91 7c 01 	lds	r22, 0x017C
     b78:	70 91 7d 01 	lds	r23, 0x017D
     b7c:	48 2b       	or	r20, r24
     b7e:	40 93 7a 01 	sts	0x017A, r20
     b82:	50 93 7b 01 	sts	0x017B, r21
     b86:	60 93 7c 01 	sts	0x017C, r22
     b8a:	70 93 7d 01 	sts	0x017D, r23
	AC5 = i2c_ReadACK() << 8;	// MSB
     b8e:	0e 94 6d 01 	call	0x2da	; 0x2da <i2c_ReadACK>
     b92:	90 e0       	ldi	r25, 0x00	; 0
     b94:	98 2f       	mov	r25, r24
     b96:	88 27       	eor	r24, r24
     b98:	09 2e       	mov	r0, r25
     b9a:	00 0c       	add	r0, r0
     b9c:	aa 0b       	sbc	r26, r26
     b9e:	bb 0b       	sbc	r27, r27
     ba0:	80 93 72 01 	sts	0x0172, r24
     ba4:	90 93 73 01 	sts	0x0173, r25
     ba8:	a0 93 74 01 	sts	0x0174, r26
     bac:	b0 93 75 01 	sts	0x0175, r27
	AC5 |= i2c_ReadACK();		// LSB
     bb0:	0e 94 6d 01 	call	0x2da	; 0x2da <i2c_ReadACK>
     bb4:	40 91 72 01 	lds	r20, 0x0172
     bb8:	50 91 73 01 	lds	r21, 0x0173
     bbc:	60 91 74 01 	lds	r22, 0x0174
     bc0:	70 91 75 01 	lds	r23, 0x0175
     bc4:	48 2b       	or	r20, r24
     bc6:	40 93 72 01 	sts	0x0172, r20
     bca:	50 93 73 01 	sts	0x0173, r21
     bce:	60 93 74 01 	sts	0x0174, r22
     bd2:	70 93 75 01 	sts	0x0175, r23
	AC6 = i2c_ReadACK() << 8;	// MSB
     bd6:	0e 94 6d 01 	call	0x2da	; 0x2da <i2c_ReadACK>
     bda:	90 e0       	ldi	r25, 0x00	; 0
     bdc:	98 2f       	mov	r25, r24
     bde:	88 27       	eor	r24, r24
     be0:	09 2e       	mov	r0, r25
     be2:	00 0c       	add	r0, r0
     be4:	aa 0b       	sbc	r26, r26
     be6:	bb 0b       	sbc	r27, r27
     be8:	80 93 64 01 	sts	0x0164, r24
     bec:	90 93 65 01 	sts	0x0165, r25
     bf0:	a0 93 66 01 	sts	0x0166, r26
     bf4:	b0 93 67 01 	sts	0x0167, r27
	AC6 |= i2c_ReadACK();		// LSB
     bf8:	0e 94 6d 01 	call	0x2da	; 0x2da <i2c_ReadACK>
     bfc:	40 91 64 01 	lds	r20, 0x0164
     c00:	50 91 65 01 	lds	r21, 0x0165
     c04:	60 91 66 01 	lds	r22, 0x0166
     c08:	70 91 67 01 	lds	r23, 0x0167
     c0c:	48 2b       	or	r20, r24
     c0e:	40 93 64 01 	sts	0x0164, r20
     c12:	50 93 65 01 	sts	0x0165, r21
     c16:	60 93 66 01 	sts	0x0166, r22
     c1a:	70 93 67 01 	sts	0x0167, r23
	B1 = i2c_ReadACK() << 8;	// MSB
     c1e:	0e 94 6d 01 	call	0x2da	; 0x2da <i2c_ReadACK>
     c22:	90 e0       	ldi	r25, 0x00	; 0
     c24:	98 2f       	mov	r25, r24
     c26:	88 27       	eor	r24, r24
     c28:	09 2e       	mov	r0, r25
     c2a:	00 0c       	add	r0, r0
     c2c:	aa 0b       	sbc	r26, r26
     c2e:	bb 0b       	sbc	r27, r27
     c30:	80 93 b8 01 	sts	0x01B8, r24
     c34:	90 93 b9 01 	sts	0x01B9, r25
     c38:	a0 93 ba 01 	sts	0x01BA, r26
     c3c:	b0 93 bb 01 	sts	0x01BB, r27
	B1 |= i2c_ReadACK();		// LSB
     c40:	0e 94 6d 01 	call	0x2da	; 0x2da <i2c_ReadACK>
     c44:	40 91 b8 01 	lds	r20, 0x01B8
     c48:	50 91 b9 01 	lds	r21, 0x01B9
     c4c:	60 91 ba 01 	lds	r22, 0x01BA
     c50:	70 91 bb 01 	lds	r23, 0x01BB
     c54:	48 2b       	or	r20, r24
     c56:	40 93 b8 01 	sts	0x01B8, r20
     c5a:	50 93 b9 01 	sts	0x01B9, r21
     c5e:	60 93 ba 01 	sts	0x01BA, r22
     c62:	70 93 bb 01 	sts	0x01BB, r23
	B2 = i2c_ReadACK() << 8;	// MSB
     c66:	0e 94 6d 01 	call	0x2da	; 0x2da <i2c_ReadACK>
     c6a:	90 e0       	ldi	r25, 0x00	; 0
     c6c:	98 2f       	mov	r25, r24
     c6e:	88 27       	eor	r24, r24
     c70:	09 2e       	mov	r0, r25
     c72:	00 0c       	add	r0, r0
     c74:	aa 0b       	sbc	r26, r26
     c76:	bb 0b       	sbc	r27, r27
     c78:	80 93 9e 01 	sts	0x019E, r24
     c7c:	90 93 9f 01 	sts	0x019F, r25
     c80:	a0 93 a0 01 	sts	0x01A0, r26
     c84:	b0 93 a1 01 	sts	0x01A1, r27
	B2 |= i2c_ReadACK();		// LSB
     c88:	0e 94 6d 01 	call	0x2da	; 0x2da <i2c_ReadACK>
     c8c:	40 91 9e 01 	lds	r20, 0x019E
     c90:	50 91 9f 01 	lds	r21, 0x019F
     c94:	60 91 a0 01 	lds	r22, 0x01A0
     c98:	70 91 a1 01 	lds	r23, 0x01A1
     c9c:	48 2b       	or	r20, r24
     c9e:	40 93 9e 01 	sts	0x019E, r20
     ca2:	50 93 9f 01 	sts	0x019F, r21
     ca6:	60 93 a0 01 	sts	0x01A0, r22
     caa:	70 93 a1 01 	sts	0x01A1, r23
	MB = i2c_ReadACK() << 8;	// MSB
     cae:	0e 94 6d 01 	call	0x2da	; 0x2da <i2c_ReadACK>
     cb2:	90 e0       	ldi	r25, 0x00	; 0
     cb4:	98 2f       	mov	r25, r24
     cb6:	88 27       	eor	r24, r24
     cb8:	09 2e       	mov	r0, r25
     cba:	00 0c       	add	r0, r0
     cbc:	aa 0b       	sbc	r26, r26
     cbe:	bb 0b       	sbc	r27, r27
     cc0:	80 93 8e 01 	sts	0x018E, r24
     cc4:	90 93 8f 01 	sts	0x018F, r25
     cc8:	a0 93 90 01 	sts	0x0190, r26
     ccc:	b0 93 91 01 	sts	0x0191, r27
	MB |= i2c_ReadACK();		// LSB
     cd0:	0e 94 6d 01 	call	0x2da	; 0x2da <i2c_ReadACK>
     cd4:	40 91 8e 01 	lds	r20, 0x018E
     cd8:	50 91 8f 01 	lds	r21, 0x018F
     cdc:	60 91 90 01 	lds	r22, 0x0190
     ce0:	70 91 91 01 	lds	r23, 0x0191
     ce4:	48 2b       	or	r20, r24
     ce6:	40 93 8e 01 	sts	0x018E, r20
     cea:	50 93 8f 01 	sts	0x018F, r21
     cee:	60 93 90 01 	sts	0x0190, r22
     cf2:	70 93 91 01 	sts	0x0191, r23
	MC = i2c_ReadACK() << 8;	// MSB
     cf6:	0e 94 6d 01 	call	0x2da	; 0x2da <i2c_ReadACK>
     cfa:	90 e0       	ldi	r25, 0x00	; 0
     cfc:	98 2f       	mov	r25, r24
     cfe:	88 27       	eor	r24, r24
     d00:	09 2e       	mov	r0, r25
     d02:	00 0c       	add	r0, r0
     d04:	aa 0b       	sbc	r26, r26
     d06:	bb 0b       	sbc	r27, r27
     d08:	80 93 c0 01 	sts	0x01C0, r24
     d0c:	90 93 c1 01 	sts	0x01C1, r25
     d10:	a0 93 c2 01 	sts	0x01C2, r26
     d14:	b0 93 c3 01 	sts	0x01C3, r27
	MC |= i2c_ReadACK();		// LSB
     d18:	0e 94 6d 01 	call	0x2da	; 0x2da <i2c_ReadACK>
     d1c:	40 91 c0 01 	lds	r20, 0x01C0
     d20:	50 91 c1 01 	lds	r21, 0x01C1
     d24:	60 91 c2 01 	lds	r22, 0x01C2
     d28:	70 91 c3 01 	lds	r23, 0x01C3
     d2c:	48 2b       	or	r20, r24
     d2e:	40 93 c0 01 	sts	0x01C0, r20
     d32:	50 93 c1 01 	sts	0x01C1, r21
     d36:	60 93 c2 01 	sts	0x01C2, r22
     d3a:	70 93 c3 01 	sts	0x01C3, r23
	MD = i2c_ReadACK() << 8;	// MSB
     d3e:	0e 94 6d 01 	call	0x2da	; 0x2da <i2c_ReadACK>
     d42:	90 e0       	ldi	r25, 0x00	; 0
     d44:	98 2f       	mov	r25, r24
     d46:	88 27       	eor	r24, r24
     d48:	09 2e       	mov	r0, r25
     d4a:	00 0c       	add	r0, r0
     d4c:	aa 0b       	sbc	r26, r26
     d4e:	bb 0b       	sbc	r27, r27
     d50:	80 93 5a 01 	sts	0x015A, r24
     d54:	90 93 5b 01 	sts	0x015B, r25
     d58:	a0 93 5c 01 	sts	0x015C, r26
     d5c:	b0 93 5d 01 	sts	0x015D, r27
	MD |= i2c_ReadNACK();		// LSB
     d60:	0e 94 78 01 	call	0x2f0	; 0x2f0 <i2c_ReadNACK>
     d64:	40 91 5a 01 	lds	r20, 0x015A
     d68:	50 91 5b 01 	lds	r21, 0x015B
     d6c:	60 91 5c 01 	lds	r22, 0x015C
     d70:	70 91 5d 01 	lds	r23, 0x015D
     d74:	48 2b       	or	r20, r24
     d76:	40 93 5a 01 	sts	0x015A, r20
     d7a:	50 93 5b 01 	sts	0x015B, r21
     d7e:	60 93 5c 01 	sts	0x015C, r22
     d82:	70 93 5d 01 	sts	0x015D, r23
}

//i2c functions
void i2c_stop()
{
	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);
     d86:	84 e9       	ldi	r24, 0x94	; 148
     d88:	80 93 bc 00 	sts	0x00BC, r24
     d8c:	08 95       	ret

00000d8e <readBarometerTemp>:
	i2c_stop();
}

// Reads temperature
void readBarometerTemp(void)
{
     d8e:	1f 93       	push	r17
     d90:	cf 93       	push	r28
     d92:	df 93       	push	r29
	// Set up for UP Sampling...
	i2c_start();
     d94:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <i2c_start>
	i2c_write(0xEE);	// Barometer address + write
     d98:	8e ee       	ldi	r24, 0xEE	; 238
     d9a:	0e 94 50 01 	call	0x2a0	; 0x2a0 <i2c_write>
	i2c_write(0xF4);	// Config register for temp/UP
     d9e:	84 ef       	ldi	r24, 0xF4	; 244
     da0:	0e 94 50 01 	call	0x2a0	; 0x2a0 <i2c_write>
	i2c_write(0x2E);	// Temperature *4.5ms time
     da4:	8e e2       	ldi	r24, 0x2E	; 46
     da6:	0e 94 50 01 	call	0x2a0	; 0x2a0 <i2c_write>
}

//i2c functions
void i2c_stop()
{
	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);
     daa:	cc eb       	ldi	r28, 0xBC	; 188
     dac:	d0 e0       	ldi	r29, 0x00	; 0
     dae:	14 e9       	ldi	r17, 0x94	; 148
     db0:	18 83       	st	Y, r17
     db2:	8f e5       	ldi	r24, 0x5F	; 95
     db4:	9d e6       	ldi	r25, 0x6D	; 109
     db6:	01 97       	sbiw	r24, 0x01	; 1
     db8:	f1 f7       	brne	.-4      	; 0xdb6 <readBarometerTemp+0x28>
     dba:	00 c0       	rjmp	.+0      	; 0xdbc <readBarometerTemp+0x2e>
     dbc:	00 00       	nop
	i2c_write(0x2E);	// Temperature *4.5ms time
	i2c_stop();

	_delay_ms(7);		// Delay at least 4.5ms for temp reading...
	// Begin Reading...
	i2c_start();
     dbe:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <i2c_start>
	i2c_write(0xEE);	// Barometer address + write
     dc2:	8e ee       	ldi	r24, 0xEE	; 238
     dc4:	0e 94 50 01 	call	0x2a0	; 0x2a0 <i2c_write>
	i2c_write(0xF6);	// MSB of data register
     dc8:	86 ef       	ldi	r24, 0xF6	; 246
     dca:	0e 94 50 01 	call	0x2a0	; 0x2a0 <i2c_write>
	i2c_start();		// Restart
     dce:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <i2c_start>
	i2c_write(0xEF);	// Barometer address + Read
     dd2:	8f ee       	ldi	r24, 0xEF	; 239
     dd4:	0e 94 50 01 	call	0x2a0	; 0x2a0 <i2c_write>
	BaroTemp = i2c_ReadACK() << 8; // MSB
     dd8:	0e 94 6d 01 	call	0x2da	; 0x2da <i2c_ReadACK>
     ddc:	90 e0       	ldi	r25, 0x00	; 0
     dde:	98 2f       	mov	r25, r24
     de0:	88 27       	eor	r24, r24
     de2:	09 2e       	mov	r0, r25
     de4:	00 0c       	add	r0, r0
     de6:	aa 0b       	sbc	r26, r26
     de8:	bb 0b       	sbc	r27, r27
     dea:	80 93 4c 01 	sts	0x014C, r24
     dee:	90 93 4d 01 	sts	0x014D, r25
     df2:	a0 93 4e 01 	sts	0x014E, r26
     df6:	b0 93 4f 01 	sts	0x014F, r27
	BaroTemp|= i2c_ReadNACK(); // LSB
     dfa:	0e 94 78 01 	call	0x2f0	; 0x2f0 <i2c_ReadNACK>
     dfe:	40 91 4c 01 	lds	r20, 0x014C
     e02:	50 91 4d 01 	lds	r21, 0x014D
     e06:	60 91 4e 01 	lds	r22, 0x014E
     e0a:	70 91 4f 01 	lds	r23, 0x014F
     e0e:	48 2b       	or	r20, r24
     e10:	40 93 4c 01 	sts	0x014C, r20
     e14:	50 93 4d 01 	sts	0x014D, r21
     e18:	60 93 4e 01 	sts	0x014E, r22
     e1c:	70 93 4f 01 	sts	0x014F, r23
}

//i2c functions
void i2c_stop()
{
	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);
     e20:	18 83       	st	Y, r17
	i2c_start();		// Restart
	i2c_write(0xEF);	// Barometer address + Read
	BaroTemp = i2c_ReadACK() << 8; // MSB
	BaroTemp|= i2c_ReadNACK(); // LSB
	i2c_stop();
}
     e22:	df 91       	pop	r29
     e24:	cf 91       	pop	r28
     e26:	1f 91       	pop	r17
     e28:	08 95       	ret

00000e2a <convertTemp>:

// This function converts the raw temperature read from the barometer
// into a temperature displayed in degrees Celsius.  This conversion was 
// obtained from the datasheet for the barometer.
void convertTemp(void)
{
     e2a:	cf 92       	push	r12
     e2c:	df 92       	push	r13
     e2e:	ef 92       	push	r14
     e30:	ff 92       	push	r15
     e32:	0f 93       	push	r16
     e34:	1f 93       	push	r17
	X1 = (BaroTemp - AC6);
     e36:	40 91 4c 01 	lds	r20, 0x014C
     e3a:	50 91 4d 01 	lds	r21, 0x014D
     e3e:	60 91 4e 01 	lds	r22, 0x014E
     e42:	70 91 4f 01 	lds	r23, 0x014F
     e46:	80 91 64 01 	lds	r24, 0x0164
     e4a:	90 91 65 01 	lds	r25, 0x0165
     e4e:	a0 91 66 01 	lds	r26, 0x0166
     e52:	b0 91 67 01 	lds	r27, 0x0167
     e56:	9a 01       	movw	r18, r20
     e58:	ab 01       	movw	r20, r22
     e5a:	28 1b       	sub	r18, r24
     e5c:	39 0b       	sbc	r19, r25
     e5e:	4a 0b       	sbc	r20, r26
     e60:	5b 0b       	sbc	r21, r27
	X1 = X1 * AC5;
     e62:	60 91 72 01 	lds	r22, 0x0172
     e66:	70 91 73 01 	lds	r23, 0x0173
     e6a:	80 91 74 01 	lds	r24, 0x0174
     e6e:	90 91 75 01 	lds	r25, 0x0175
     e72:	0e 94 37 11 	call	0x226e	; 0x226e <__mulsi3>
	X1 = X1 / 32768;
     e76:	8b 01       	movw	r16, r22
     e78:	9c 01       	movw	r18, r24
     e7a:	99 23       	and	r25, r25
     e7c:	24 f4       	brge	.+8      	; 0xe86 <convertTemp+0x5c>
     e7e:	01 50       	subi	r16, 0x01	; 1
     e80:	10 48       	sbci	r17, 0x80	; 128
     e82:	2f 4f       	sbci	r18, 0xFF	; 255
     e84:	3f 4f       	sbci	r19, 0xFF	; 255
     e86:	68 01       	movw	r12, r16
     e88:	79 01       	movw	r14, r18
     e8a:	0b 2e       	mov	r0, r27
     e8c:	bf e0       	ldi	r27, 0x0F	; 15
     e8e:	f5 94       	asr	r15
     e90:	e7 94       	ror	r14
     e92:	d7 94       	ror	r13
     e94:	c7 94       	ror	r12
     e96:	ba 95       	dec	r27
     e98:	d1 f7       	brne	.-12     	; 0xe8e <convertTemp+0x64>
     e9a:	b0 2d       	mov	r27, r0
     e9c:	c0 92 92 01 	sts	0x0192, r12
     ea0:	d0 92 93 01 	sts	0x0193, r13
     ea4:	e0 92 94 01 	sts	0x0194, r14
     ea8:	f0 92 95 01 	sts	0x0195, r15
	X2 = MC * 2048;
     eac:	80 91 c0 01 	lds	r24, 0x01C0
     eb0:	90 91 c1 01 	lds	r25, 0x01C1
     eb4:	a0 91 c2 01 	lds	r26, 0x01C2
     eb8:	b0 91 c3 01 	lds	r27, 0x01C3
     ebc:	bc 01       	movw	r22, r24
     ebe:	cd 01       	movw	r24, r26
     ec0:	05 2e       	mov	r0, r21
     ec2:	5b e0       	ldi	r21, 0x0B	; 11
     ec4:	66 0f       	add	r22, r22
     ec6:	77 1f       	adc	r23, r23
     ec8:	88 1f       	adc	r24, r24
     eca:	99 1f       	adc	r25, r25
     ecc:	5a 95       	dec	r21
     ece:	d1 f7       	brne	.-12     	; 0xec4 <convertTemp+0x9a>
     ed0:	50 2d       	mov	r21, r0
	X3 = X1 + MD;
     ed2:	00 91 5a 01 	lds	r16, 0x015A
     ed6:	10 91 5b 01 	lds	r17, 0x015B
     eda:	20 91 5c 01 	lds	r18, 0x015C
     ede:	30 91 5d 01 	lds	r19, 0x015D
     ee2:	a9 01       	movw	r20, r18
     ee4:	98 01       	movw	r18, r16
     ee6:	2c 0d       	add	r18, r12
     ee8:	3d 1d       	adc	r19, r13
     eea:	4e 1d       	adc	r20, r14
     eec:	5f 1d       	adc	r21, r15
     eee:	20 93 a6 01 	sts	0x01A6, r18
     ef2:	30 93 a7 01 	sts	0x01A7, r19
     ef6:	40 93 a8 01 	sts	0x01A8, r20
     efa:	50 93 a9 01 	sts	0x01A9, r21
	X2 = X2 / X3;
     efe:	0e 94 69 11 	call	0x22d2	; 0x22d2 <__divmodsi4>
     f02:	20 93 6e 01 	sts	0x016E, r18
     f06:	30 93 6f 01 	sts	0x016F, r19
     f0a:	40 93 70 01 	sts	0x0170, r20
     f0e:	50 93 71 01 	sts	0x0171, r21
	B5 = X1 + X2;
     f12:	d7 01       	movw	r26, r14
     f14:	c6 01       	movw	r24, r12
     f16:	82 0f       	add	r24, r18
     f18:	93 1f       	adc	r25, r19
     f1a:	a4 1f       	adc	r26, r20
     f1c:	b5 1f       	adc	r27, r21
     f1e:	80 93 76 01 	sts	0x0176, r24
     f22:	90 93 77 01 	sts	0x0177, r25
     f26:	a0 93 78 01 	sts	0x0178, r26
     f2a:	b0 93 79 01 	sts	0x0179, r27
	BaroTemp = (B5 + 8);
     f2e:	ac 01       	movw	r20, r24
     f30:	bd 01       	movw	r22, r26
     f32:	48 5f       	subi	r20, 0xF8	; 248
     f34:	5f 4f       	sbci	r21, 0xFF	; 255
     f36:	6f 4f       	sbci	r22, 0xFF	; 255
     f38:	7f 4f       	sbci	r23, 0xFF	; 255
	BaroTemp = BaroTemp/16;
     f3a:	db 01       	movw	r26, r22
     f3c:	ca 01       	movw	r24, r20
     f3e:	1a f4       	brpl	.+6      	; 0xf46 <convertTemp+0x11c>
     f40:	0f 96       	adiw	r24, 0x0f	; 15
     f42:	a1 1d       	adc	r26, r1
     f44:	b1 1d       	adc	r27, r1
     f46:	68 94       	set
     f48:	13 f8       	bld	r1, 3
     f4a:	b5 95       	asr	r27
     f4c:	a7 95       	ror	r26
     f4e:	97 95       	ror	r25
     f50:	87 95       	ror	r24
     f52:	16 94       	lsr	r1
     f54:	d1 f7       	brne	.-12     	; 0xf4a <convertTemp+0x120>
     f56:	80 93 4c 01 	sts	0x014C, r24
     f5a:	90 93 4d 01 	sts	0x014D, r25
     f5e:	a0 93 4e 01 	sts	0x014E, r26
     f62:	b0 93 4f 01 	sts	0x014F, r27
}
     f66:	1f 91       	pop	r17
     f68:	0f 91       	pop	r16
     f6a:	ff 90       	pop	r15
     f6c:	ef 90       	pop	r14
     f6e:	df 90       	pop	r13
     f70:	cf 90       	pop	r12
     f72:	08 95       	ret

00000f74 <Gyro_init>:

// Initializes the Gyro to sample data.
// The range of values sampled is +- 2000 degrees
void Gyro_init(void)
{
	i2c_start();
     f74:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <i2c_start>
	i2c_write(0xD0); // +- 2000 degrees/sec
     f78:	80 ed       	ldi	r24, 0xD0	; 208
     f7a:	0e 94 50 01 	call	0x2a0	; 0x2a0 <i2c_write>
	i2c_write(0x16);
     f7e:	86 e1       	ldi	r24, 0x16	; 22
     f80:	0e 94 50 01 	call	0x2a0	; 0x2a0 <i2c_write>
	i2c_write(0x18);
     f84:	88 e1       	ldi	r24, 0x18	; 24
     f86:	0e 94 50 01 	call	0x2a0	; 0x2a0 <i2c_write>
}

//i2c functions
void i2c_stop()
{
	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);
     f8a:	84 e9       	ldi	r24, 0x94	; 148
     f8c:	80 93 bc 00 	sts	0x00BC, r24
     f90:	08 95       	ret

00000f92 <Gyro_read>:
	i2c_stop();
}

void Gyro_read(void)
{
	i2c_start();
     f92:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <i2c_start>
	i2c_write(0xD0);	// Write
     f96:	80 ed       	ldi	r24, 0xD0	; 208
     f98:	0e 94 50 01 	call	0x2a0	; 0x2a0 <i2c_write>
	i2c_write(0x1D);	// Address of X MSB
     f9c:	8d e1       	ldi	r24, 0x1D	; 29
     f9e:	0e 94 50 01 	call	0x2a0	; 0x2a0 <i2c_write>
	i2c_start();
     fa2:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <i2c_start>
	i2c_write(0xD1);
     fa6:	81 ed       	ldi	r24, 0xD1	; 209
     fa8:	0e 94 50 01 	call	0x2a0	; 0x2a0 <i2c_write>
	// Read the raw values into their respective variables
	// The address pointer increments automatically after
	// each read.
	X_Gyro_Raw = i2c_ReadACK() << 8;
     fac:	0e 94 6d 01 	call	0x2da	; 0x2da <i2c_ReadACK>
     fb0:	10 92 b2 01 	sts	0x01B2, r1
     fb4:	80 93 b3 01 	sts	0x01B3, r24
	X_Gyro_Raw |= i2c_ReadACK();
     fb8:	0e 94 6d 01 	call	0x2da	; 0x2da <i2c_ReadACK>
     fbc:	20 91 b2 01 	lds	r18, 0x01B2
     fc0:	30 91 b3 01 	lds	r19, 0x01B3
     fc4:	28 2b       	or	r18, r24
     fc6:	30 93 b3 01 	sts	0x01B3, r19
     fca:	20 93 b2 01 	sts	0x01B2, r18
	Y_Gyro_Raw = i2c_ReadACK() << 8;
     fce:	0e 94 6d 01 	call	0x2da	; 0x2da <i2c_ReadACK>
     fd2:	10 92 5e 01 	sts	0x015E, r1
     fd6:	80 93 5f 01 	sts	0x015F, r24
	Y_Gyro_Raw |= i2c_ReadACK();
     fda:	0e 94 6d 01 	call	0x2da	; 0x2da <i2c_ReadACK>
     fde:	20 91 5e 01 	lds	r18, 0x015E
     fe2:	30 91 5f 01 	lds	r19, 0x015F
     fe6:	28 2b       	or	r18, r24
     fe8:	30 93 5f 01 	sts	0x015F, r19
     fec:	20 93 5e 01 	sts	0x015E, r18
	Z_Gyro_Raw = i2c_ReadACK() << 8;
     ff0:	0e 94 6d 01 	call	0x2da	; 0x2da <i2c_ReadACK>
     ff4:	10 92 c4 01 	sts	0x01C4, r1
     ff8:	80 93 c5 01 	sts	0x01C5, r24
	Z_Gyro_Raw |= i2c_ReadNACK();
     ffc:	0e 94 78 01 	call	0x2f0	; 0x2f0 <i2c_ReadNACK>
    1000:	20 91 c4 01 	lds	r18, 0x01C4
    1004:	30 91 c5 01 	lds	r19, 0x01C5
    1008:	28 2b       	or	r18, r24
    100a:	30 93 c5 01 	sts	0x01C5, r19
    100e:	20 93 c4 01 	sts	0x01C4, r18
}

//i2c functions
void i2c_stop()
{
	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);
    1012:	84 e9       	ldi	r24, 0x94	; 148
    1014:	80 93 bc 00 	sts	0x00BC, r24
    1018:	08 95       	ret

0000101a <readBarometer>:
// Function to read the values from the barometer
// The values must be read in this order since some of the
// temperature values are used in the barometer conversion.
void readBarometer(void)
{
	readBarometerTemp();
    101a:	0e 94 c7 06 	call	0xd8e	; 0xd8e <readBarometerTemp>
	readBarometerUP();
    101e:	0e 94 a8 04 	call	0x950	; 0x950 <readBarometerUP>
    1022:	08 95       	ret

00001024 <ConvertValues>:
}


// Converts all the raw values into tangible data that can be used.
void ConvertValues(void)
{
    1024:	cf 92       	push	r12
    1026:	df 92       	push	r13
    1028:	ef 92       	push	r14
    102a:	ff 92       	push	r15
	// Heading from compass
	heading = atan2((double)Yval, (double)Xval); // Returns a value in radians
    102c:	60 91 58 01 	lds	r22, 0x0158
    1030:	70 91 59 01 	lds	r23, 0x0159
    1034:	07 2e       	mov	r0, r23
    1036:	00 0c       	add	r0, r0
    1038:	88 0b       	sbc	r24, r24
    103a:	99 0b       	sbc	r25, r25
    103c:	0e 94 39 0b 	call	0x1672	; 0x1672 <__floatsisf>
    1040:	6b 01       	movw	r12, r22
    1042:	7c 01       	movw	r14, r24
    1044:	80 91 56 01 	lds	r24, 0x0156
    1048:	90 91 57 01 	lds	r25, 0x0157
    104c:	bc 01       	movw	r22, r24
    104e:	99 0f       	add	r25, r25
    1050:	88 0b       	sbc	r24, r24
    1052:	99 0b       	sbc	r25, r25
    1054:	0e 94 39 0b 	call	0x1672	; 0x1672 <__floatsisf>
    1058:	a7 01       	movw	r20, r14
    105a:	96 01       	movw	r18, r12
    105c:	0e 94 66 0a 	call	0x14cc	; 0x14cc <atan2>
	// Next three lines convert that radian value to a degree value more
	// commonly seen on a compass
	heading = heading * 180;
    1060:	20 e0       	ldi	r18, 0x00	; 0
    1062:	30 e0       	ldi	r19, 0x00	; 0
    1064:	44 e3       	ldi	r20, 0x34	; 52
    1066:	53 e4       	ldi	r21, 0x43	; 67
    1068:	0e 94 f4 0b 	call	0x17e8	; 0x17e8 <__mulsf3>
	heading = heading /3.14159;
    106c:	20 ed       	ldi	r18, 0xD0	; 208
    106e:	3f e0       	ldi	r19, 0x0F	; 15
    1070:	49 e4       	ldi	r20, 0x49	; 73
    1072:	50 e4       	ldi	r21, 0x40	; 64
    1074:	0e 94 c5 0a 	call	0x158a	; 0x158a <__divsf3>
	heading += 180;
    1078:	20 e0       	ldi	r18, 0x00	; 0
    107a:	30 e0       	ldi	r19, 0x00	; 0
    107c:	44 e3       	ldi	r20, 0x34	; 52
    107e:	53 e4       	ldi	r21, 0x43	; 67
    1080:	0e 94 e7 09 	call	0x13ce	; 0x13ce <__addsf3>
    1084:	60 93 ce 01 	sts	0x01CE, r22
    1088:	70 93 cf 01 	sts	0x01CF, r23
    108c:	80 93 d0 01 	sts	0x01D0, r24
    1090:	90 93 d1 01 	sts	0x01D1, r25
	// G force from accelerometer
	// 0.004 is used since that is the value provided by the datasheet
	// Each bit represents 0.004g
	X_accel = X_accel_Raw * 0.004;
    1094:	60 91 7e 01 	lds	r22, 0x017E
    1098:	70 91 7f 01 	lds	r23, 0x017F
    109c:	07 2e       	mov	r0, r23
    109e:	00 0c       	add	r0, r0
    10a0:	88 0b       	sbc	r24, r24
    10a2:	99 0b       	sbc	r25, r25
    10a4:	0e 94 39 0b 	call	0x1672	; 0x1672 <__floatsisf>
    10a8:	2f e6       	ldi	r18, 0x6F	; 111
    10aa:	32 e1       	ldi	r19, 0x12	; 18
    10ac:	43 e8       	ldi	r20, 0x83	; 131
    10ae:	5b e3       	ldi	r21, 0x3B	; 59
    10b0:	0e 94 f4 0b 	call	0x17e8	; 0x17e8 <__mulsf3>
    10b4:	60 93 c6 01 	sts	0x01C6, r22
    10b8:	70 93 c7 01 	sts	0x01C7, r23
    10bc:	80 93 c8 01 	sts	0x01C8, r24
    10c0:	90 93 c9 01 	sts	0x01C9, r25
	Y_accel = Y_accel_Raw * 0.004;
    10c4:	60 91 68 01 	lds	r22, 0x0168
    10c8:	70 91 69 01 	lds	r23, 0x0169
    10cc:	07 2e       	mov	r0, r23
    10ce:	00 0c       	add	r0, r0
    10d0:	88 0b       	sbc	r24, r24
    10d2:	99 0b       	sbc	r25, r25
    10d4:	0e 94 39 0b 	call	0x1672	; 0x1672 <__floatsisf>
    10d8:	2f e6       	ldi	r18, 0x6F	; 111
    10da:	32 e1       	ldi	r19, 0x12	; 18
    10dc:	43 e8       	ldi	r20, 0x83	; 131
    10de:	5b e3       	ldi	r21, 0x3B	; 59
    10e0:	0e 94 f4 0b 	call	0x17e8	; 0x17e8 <__mulsf3>
    10e4:	60 93 8a 01 	sts	0x018A, r22
    10e8:	70 93 8b 01 	sts	0x018B, r23
    10ec:	80 93 8c 01 	sts	0x018C, r24
    10f0:	90 93 8d 01 	sts	0x018D, r25
	Z_accel = Z_accel_Raw * 0.004;
    10f4:	60 91 88 01 	lds	r22, 0x0188
    10f8:	70 91 89 01 	lds	r23, 0x0189
    10fc:	07 2e       	mov	r0, r23
    10fe:	00 0c       	add	r0, r0
    1100:	88 0b       	sbc	r24, r24
    1102:	99 0b       	sbc	r25, r25
    1104:	0e 94 39 0b 	call	0x1672	; 0x1672 <__floatsisf>
    1108:	2f e6       	ldi	r18, 0x6F	; 111
    110a:	32 e1       	ldi	r19, 0x12	; 18
    110c:	43 e8       	ldi	r20, 0x83	; 131
    110e:	5b e3       	ldi	r21, 0x3B	; 59
    1110:	0e 94 f4 0b 	call	0x17e8	; 0x17e8 <__mulsf3>
    1114:	60 93 aa 01 	sts	0x01AA, r22
    1118:	70 93 ab 01 	sts	0x01AB, r23
    111c:	80 93 ac 01 	sts	0x01AC, r24
    1120:	90 93 ad 01 	sts	0x01AD, r25
	// Convert Barometer Values
	// Values must be converted in this order since the pressure relies
	// on a few temperature variables.
	convertTemp();
    1124:	0e 94 15 07 	call	0xe2a	; 0xe2a <convertTemp>
	ConvertUP();
    1128:	0e 94 a7 02 	call	0x54e	; 0x54e <ConvertUP>
	// BaroTemp is 10x larger than actual Celsius value
	TempC = BaroTemp / 10.0;
    112c:	60 91 4c 01 	lds	r22, 0x014C
    1130:	70 91 4d 01 	lds	r23, 0x014D
    1134:	80 91 4e 01 	lds	r24, 0x014E
    1138:	90 91 4f 01 	lds	r25, 0x014F
    113c:	0e 94 39 0b 	call	0x1672	; 0x1672 <__floatsisf>
    1140:	20 e0       	ldi	r18, 0x00	; 0
    1142:	30 e0       	ldi	r19, 0x00	; 0
    1144:	40 e2       	ldi	r20, 0x20	; 32
    1146:	51 e4       	ldi	r21, 0x41	; 65
    1148:	0e 94 c5 0a 	call	0x158a	; 0x158a <__divsf3>
    114c:	60 93 44 01 	sts	0x0144, r22
    1150:	70 93 45 01 	sts	0x0145, r23
    1154:	80 93 46 01 	sts	0x0146, r24
    1158:	90 93 47 01 	sts	0x0147, r25
	// Altitude formula
	altitude = pow(UP/ Std_Pressure, 0.190284);
    115c:	60 91 50 01 	lds	r22, 0x0150
    1160:	70 91 51 01 	lds	r23, 0x0151
    1164:	80 91 52 01 	lds	r24, 0x0152
    1168:	90 91 53 01 	lds	r25, 0x0153
    116c:	0e 94 39 0b 	call	0x1672	; 0x1672 <__floatsisf>
    1170:	20 91 00 01 	lds	r18, 0x0100
    1174:	30 91 01 01 	lds	r19, 0x0101
    1178:	40 91 02 01 	lds	r20, 0x0102
    117c:	50 91 03 01 	lds	r21, 0x0103
    1180:	0e 94 c5 0a 	call	0x158a	; 0x158a <__divsf3>
    1184:	2f ec       	ldi	r18, 0xCF	; 207
    1186:	39 ed       	ldi	r19, 0xD9	; 217
    1188:	42 e4       	ldi	r20, 0x42	; 66
    118a:	5e e3       	ldi	r21, 0x3E	; 62
    118c:	0e 94 61 0c 	call	0x18c2	; 0x18c2 <pow>
    1190:	9b 01       	movw	r18, r22
    1192:	ac 01       	movw	r20, r24
	altitude = 1 - altitude;
    1194:	60 e0       	ldi	r22, 0x00	; 0
    1196:	70 e0       	ldi	r23, 0x00	; 0
    1198:	80 e8       	ldi	r24, 0x80	; 128
    119a:	9f e3       	ldi	r25, 0x3F	; 63
    119c:	0e 94 e6 09 	call	0x13cc	; 0x13cc <__subsf3>
	altitude = altitude * 44330;
    11a0:	20 e0       	ldi	r18, 0x00	; 0
    11a2:	3a e2       	ldi	r19, 0x2A	; 42
    11a4:	4d e2       	ldi	r20, 0x2D	; 45
    11a6:	57 e4       	ldi	r21, 0x47	; 71
    11a8:	0e 94 f4 0b 	call	0x17e8	; 0x17e8 <__mulsf3>
	altitude = altitude * 3.28084;
    11ac:	28 e4       	ldi	r18, 0x48	; 72
    11ae:	39 ef       	ldi	r19, 0xF9	; 249
    11b0:	41 e5       	ldi	r20, 0x51	; 81
    11b2:	50 e4       	ldi	r21, 0x40	; 64
    11b4:	0e 94 f4 0b 	call	0x17e8	; 0x17e8 <__mulsf3>
    11b8:	60 93 48 01 	sts	0x0148, r22
    11bc:	70 93 49 01 	sts	0x0149, r23
    11c0:	80 93 4a 01 	sts	0x014A, r24
    11c4:	90 93 4b 01 	sts	0x014B, r25
	// Gyro Values
	// Value to divide by is given in the datsheet for the conversion
	X_Gyro = X_Gyro_Raw / 14.375;
    11c8:	60 91 b2 01 	lds	r22, 0x01B2
    11cc:	70 91 b3 01 	lds	r23, 0x01B3
    11d0:	07 2e       	mov	r0, r23
    11d2:	00 0c       	add	r0, r0
    11d4:	88 0b       	sbc	r24, r24
    11d6:	99 0b       	sbc	r25, r25
    11d8:	0e 94 39 0b 	call	0x1672	; 0x1672 <__floatsisf>
    11dc:	20 e0       	ldi	r18, 0x00	; 0
    11de:	30 e0       	ldi	r19, 0x00	; 0
    11e0:	46 e6       	ldi	r20, 0x66	; 102
    11e2:	51 e4       	ldi	r21, 0x41	; 65
    11e4:	0e 94 c5 0a 	call	0x158a	; 0x158a <__divsf3>
    11e8:	60 93 84 01 	sts	0x0184, r22
    11ec:	70 93 85 01 	sts	0x0185, r23
    11f0:	80 93 86 01 	sts	0x0186, r24
    11f4:	90 93 87 01 	sts	0x0187, r25
	Y_Gyro = Y_Gyro_Raw / 14.375;
    11f8:	60 91 5e 01 	lds	r22, 0x015E
    11fc:	70 91 5f 01 	lds	r23, 0x015F
    1200:	07 2e       	mov	r0, r23
    1202:	00 0c       	add	r0, r0
    1204:	88 0b       	sbc	r24, r24
    1206:	99 0b       	sbc	r25, r25
    1208:	0e 94 39 0b 	call	0x1672	; 0x1672 <__floatsisf>
    120c:	20 e0       	ldi	r18, 0x00	; 0
    120e:	30 e0       	ldi	r19, 0x00	; 0
    1210:	46 e6       	ldi	r20, 0x66	; 102
    1212:	51 e4       	ldi	r21, 0x41	; 65
    1214:	0e 94 c5 0a 	call	0x158a	; 0x158a <__divsf3>
    1218:	60 93 a2 01 	sts	0x01A2, r22
    121c:	70 93 a3 01 	sts	0x01A3, r23
    1220:	80 93 a4 01 	sts	0x01A4, r24
    1224:	90 93 a5 01 	sts	0x01A5, r25
	Z_Gyro = Z_Gyro_Raw / 14.375;
    1228:	60 91 c4 01 	lds	r22, 0x01C4
    122c:	70 91 c5 01 	lds	r23, 0x01C5
    1230:	07 2e       	mov	r0, r23
    1232:	00 0c       	add	r0, r0
    1234:	88 0b       	sbc	r24, r24
    1236:	99 0b       	sbc	r25, r25
    1238:	0e 94 39 0b 	call	0x1672	; 0x1672 <__floatsisf>
    123c:	20 e0       	ldi	r18, 0x00	; 0
    123e:	30 e0       	ldi	r19, 0x00	; 0
    1240:	46 e6       	ldi	r20, 0x66	; 102
    1242:	51 e4       	ldi	r21, 0x41	; 65
    1244:	0e 94 c5 0a 	call	0x158a	; 0x158a <__divsf3>
    1248:	60 93 80 01 	sts	0x0180, r22
    124c:	70 93 81 01 	sts	0x0181, r23
    1250:	80 93 82 01 	sts	0x0182, r24
    1254:	90 93 83 01 	sts	0x0183, r25
    1258:	ff 90       	pop	r15
    125a:	ef 90       	pop	r14
    125c:	df 90       	pop	r13
    125e:	cf 90       	pop	r12
    1260:	08 95       	ret

00001262 <main>:
void ConvertValues(void); // Converts raw values to usable real values


int main(void)
{
	USART0init(); // Enable the USART
    1262:	0e 94 fa 01 	call	0x3f4	; 0x3f4 <USART0init>
	stdin=stdout=&usart0_str;
    1266:	e2 ed       	ldi	r30, 0xD2	; 210
    1268:	f1 e0       	ldi	r31, 0x01	; 1
    126a:	84 e0       	ldi	r24, 0x04	; 4
    126c:	91 e0       	ldi	r25, 0x01	; 1
    126e:	93 83       	std	Z+3, r25	; 0x03
    1270:	82 83       	std	Z+2, r24	; 0x02
    1272:	91 83       	std	Z+1, r25	; 0x01
    1274:	80 83       	st	Z, r24

	i2c_init();
    1276:	0e 94 64 01 	call	0x2c8	; 0x2c8 <i2c_init>
	delay();
    127a:	0e 94 08 02 	call	0x410	; 0x410 <delay>
    127e:	2f ef       	ldi	r18, 0xFF	; 255
    1280:	81 ee       	ldi	r24, 0xE1	; 225
    1282:	94 e0       	ldi	r25, 0x04	; 4
    1284:	21 50       	subi	r18, 0x01	; 1
    1286:	80 40       	sbci	r24, 0x00	; 0
    1288:	90 40       	sbci	r25, 0x00	; 0
    128a:	e1 f7       	brne	.-8      	; 0x1284 <main+0x22>
    128c:	00 c0       	rjmp	.+0      	; 0x128e <main+0x2c>
    128e:	00 00       	nop
	_delay_ms(100);		// Allow the sensor to boot
	// Initialize all the sensors
	i2c_CompassSetUp();
    1290:	0e 94 83 01 	call	0x306	; 0x306 <i2c_CompassSetUp>
	i2c_AccelSetUp();
    1294:	0e 94 98 02 	call	0x530	; 0x530 <i2c_AccelSetUp>
	Gyro_init();
    1298:	0e 94 ba 07 	call	0xf74	; 0xf74 <Gyro_init>
    129c:	2f ef       	ldi	r18, 0xFF	; 255
    129e:	81 ee       	ldi	r24, 0xE1	; 225
    12a0:	94 e0       	ldi	r25, 0x04	; 4
    12a2:	21 50       	subi	r18, 0x01	; 1
    12a4:	80 40       	sbci	r24, 0x00	; 0
    12a6:	90 40       	sbci	r25, 0x00	; 0
    12a8:	e1 f7       	brne	.-8      	; 0x12a2 <main+0x40>
    12aa:	00 c0       	rjmp	.+0      	; 0x12ac <main+0x4a>
    12ac:	00 00       	nop
		getBarometerCalibrations(); // This must be done every time since values may change
		readBarometer();		
		Gyro_read();
		ConvertValues();
		// Send the values to the ESP8266
		printf("%.2f %.2f %.2f %.2f %.2f %.2f %.2f %.2f %.2f %d\n",
    12ae:	c2 e1       	ldi	r28, 0x12	; 18
    12b0:	d1 e0       	ldi	r29, 0x01	; 1
	Gyro_init();
	
	_delay_ms(100);  // Allow for modules to boot	
	while (1)
	{
		i2c_ReadCompass();
    12b2:	0e 94 a5 01 	call	0x34a	; 0x34a <i2c_ReadCompass>
		i2c_ReadAccel();
    12b6:	0e 94 13 02 	call	0x426	; 0x426 <i2c_ReadAccel>
		getBarometerCalibrations(); // This must be done every time since values may change
    12ba:	0e 94 2a 05 	call	0xa54	; 0xa54 <getBarometerCalibrations>
		readBarometer();		
    12be:	0e 94 0d 08 	call	0x101a	; 0x101a <readBarometer>
		Gyro_read();
    12c2:	0e 94 c9 07 	call	0xf92	; 0xf92 <Gyro_read>
		ConvertValues();
    12c6:	0e 94 12 08 	call	0x1024	; 0x1024 <ConvertValues>
		// Send the values to the ESP8266
		printf("%.2f %.2f %.2f %.2f %.2f %.2f %.2f %.2f %.2f %d\n",
    12ca:	80 91 55 01 	lds	r24, 0x0155
    12ce:	8f 93       	push	r24
    12d0:	80 91 54 01 	lds	r24, 0x0154
    12d4:	8f 93       	push	r24
    12d6:	80 91 d1 01 	lds	r24, 0x01D1
    12da:	8f 93       	push	r24
    12dc:	80 91 d0 01 	lds	r24, 0x01D0
    12e0:	8f 93       	push	r24
    12e2:	80 91 cf 01 	lds	r24, 0x01CF
    12e6:	8f 93       	push	r24
    12e8:	80 91 ce 01 	lds	r24, 0x01CE
    12ec:	8f 93       	push	r24
    12ee:	80 91 83 01 	lds	r24, 0x0183
    12f2:	8f 93       	push	r24
    12f4:	80 91 82 01 	lds	r24, 0x0182
    12f8:	8f 93       	push	r24
    12fa:	80 91 81 01 	lds	r24, 0x0181
    12fe:	8f 93       	push	r24
    1300:	80 91 80 01 	lds	r24, 0x0180
    1304:	8f 93       	push	r24
    1306:	80 91 a5 01 	lds	r24, 0x01A5
    130a:	8f 93       	push	r24
    130c:	80 91 a4 01 	lds	r24, 0x01A4
    1310:	8f 93       	push	r24
    1312:	80 91 a3 01 	lds	r24, 0x01A3
    1316:	8f 93       	push	r24
    1318:	80 91 a2 01 	lds	r24, 0x01A2
    131c:	8f 93       	push	r24
    131e:	80 91 87 01 	lds	r24, 0x0187
    1322:	8f 93       	push	r24
    1324:	80 91 86 01 	lds	r24, 0x0186
    1328:	8f 93       	push	r24
    132a:	80 91 85 01 	lds	r24, 0x0185
    132e:	8f 93       	push	r24
    1330:	80 91 84 01 	lds	r24, 0x0184
    1334:	8f 93       	push	r24
    1336:	80 91 47 01 	lds	r24, 0x0147
    133a:	8f 93       	push	r24
    133c:	80 91 46 01 	lds	r24, 0x0146
    1340:	8f 93       	push	r24
    1342:	80 91 45 01 	lds	r24, 0x0145
    1346:	8f 93       	push	r24
    1348:	80 91 44 01 	lds	r24, 0x0144
    134c:	8f 93       	push	r24
    134e:	80 91 4b 01 	lds	r24, 0x014B
    1352:	8f 93       	push	r24
    1354:	80 91 4a 01 	lds	r24, 0x014A
    1358:	8f 93       	push	r24
    135a:	80 91 49 01 	lds	r24, 0x0149
    135e:	8f 93       	push	r24
    1360:	80 91 48 01 	lds	r24, 0x0148
    1364:	8f 93       	push	r24
    1366:	80 91 ad 01 	lds	r24, 0x01AD
    136a:	8f 93       	push	r24
    136c:	80 91 ac 01 	lds	r24, 0x01AC
    1370:	8f 93       	push	r24
    1372:	80 91 ab 01 	lds	r24, 0x01AB
    1376:	8f 93       	push	r24
    1378:	80 91 aa 01 	lds	r24, 0x01AA
    137c:	8f 93       	push	r24
    137e:	80 91 8d 01 	lds	r24, 0x018D
    1382:	8f 93       	push	r24
    1384:	80 91 8c 01 	lds	r24, 0x018C
    1388:	8f 93       	push	r24
    138a:	80 91 8b 01 	lds	r24, 0x018B
    138e:	8f 93       	push	r24
    1390:	80 91 8a 01 	lds	r24, 0x018A
    1394:	8f 93       	push	r24
    1396:	80 91 c9 01 	lds	r24, 0x01C9
    139a:	8f 93       	push	r24
    139c:	80 91 c8 01 	lds	r24, 0x01C8
    13a0:	8f 93       	push	r24
    13a2:	80 91 c7 01 	lds	r24, 0x01C7
    13a6:	8f 93       	push	r24
    13a8:	80 91 c6 01 	lds	r24, 0x01C6
    13ac:	8f 93       	push	r24
    13ae:	df 93       	push	r29
    13b0:	cf 93       	push	r28
    13b2:	0e 94 07 13 	call	0x260e	; 0x260e <printf>
		X_accel, Y_accel, Z_accel, altitude, TempC, X_Gyro, Y_Gyro, Z_Gyro, heading, Zval);
		// Wait one second before reading new values
		delay();
    13b6:	8d b7       	in	r24, 0x3d	; 61
    13b8:	9e b7       	in	r25, 0x3e	; 62
    13ba:	88 96       	adiw	r24, 0x28	; 40
    13bc:	0f b6       	in	r0, 0x3f	; 63
    13be:	f8 94       	cli
    13c0:	9e bf       	out	0x3e, r25	; 62
    13c2:	0f be       	out	0x3f, r0	; 63
    13c4:	8d bf       	out	0x3d, r24	; 61
    13c6:	0e 94 08 02 	call	0x410	; 0x410 <delay>
	}
    13ca:	73 cf       	rjmp	.-282    	; 0x12b2 <main+0x50>

000013cc <__subsf3>:
    13cc:	50 58       	subi	r21, 0x80	; 128

000013ce <__addsf3>:
    13ce:	bb 27       	eor	r27, r27
    13d0:	aa 27       	eor	r26, r26
    13d2:	0e 94 fe 09 	call	0x13fc	; 0x13fc <__addsf3x>
    13d6:	0c 94 b2 0b 	jmp	0x1764	; 0x1764 <__fp_round>
    13da:	0e 94 a4 0b 	call	0x1748	; 0x1748 <__fp_pscA>
    13de:	38 f0       	brcs	.+14     	; 0x13ee <__addsf3+0x20>
    13e0:	0e 94 ab 0b 	call	0x1756	; 0x1756 <__fp_pscB>
    13e4:	20 f0       	brcs	.+8      	; 0x13ee <__addsf3+0x20>
    13e6:	39 f4       	brne	.+14     	; 0x13f6 <__addsf3+0x28>
    13e8:	9f 3f       	cpi	r25, 0xFF	; 255
    13ea:	19 f4       	brne	.+6      	; 0x13f2 <__addsf3+0x24>
    13ec:	26 f4       	brtc	.+8      	; 0x13f6 <__addsf3+0x28>
    13ee:	0c 94 7a 0b 	jmp	0x16f4	; 0x16f4 <__fp_nan>
    13f2:	0e f4       	brtc	.+2      	; 0x13f6 <__addsf3+0x28>
    13f4:	e0 95       	com	r30
    13f6:	e7 fb       	bst	r30, 7
    13f8:	0c 94 74 0b 	jmp	0x16e8	; 0x16e8 <__fp_inf>

000013fc <__addsf3x>:
    13fc:	e9 2f       	mov	r30, r25
    13fe:	0e 94 c3 0b 	call	0x1786	; 0x1786 <__fp_split3>
    1402:	58 f3       	brcs	.-42     	; 0x13da <__addsf3+0xc>
    1404:	ba 17       	cp	r27, r26
    1406:	62 07       	cpc	r22, r18
    1408:	73 07       	cpc	r23, r19
    140a:	84 07       	cpc	r24, r20
    140c:	95 07       	cpc	r25, r21
    140e:	20 f0       	brcs	.+8      	; 0x1418 <__addsf3x+0x1c>
    1410:	79 f4       	brne	.+30     	; 0x1430 <__addsf3x+0x34>
    1412:	a6 f5       	brtc	.+104    	; 0x147c <__addsf3x+0x80>
    1414:	0c 94 e5 0b 	jmp	0x17ca	; 0x17ca <__fp_zero>
    1418:	0e f4       	brtc	.+2      	; 0x141c <__addsf3x+0x20>
    141a:	e0 95       	com	r30
    141c:	0b 2e       	mov	r0, r27
    141e:	ba 2f       	mov	r27, r26
    1420:	a0 2d       	mov	r26, r0
    1422:	0b 01       	movw	r0, r22
    1424:	b9 01       	movw	r22, r18
    1426:	90 01       	movw	r18, r0
    1428:	0c 01       	movw	r0, r24
    142a:	ca 01       	movw	r24, r20
    142c:	a0 01       	movw	r20, r0
    142e:	11 24       	eor	r1, r1
    1430:	ff 27       	eor	r31, r31
    1432:	59 1b       	sub	r21, r25
    1434:	99 f0       	breq	.+38     	; 0x145c <__addsf3x+0x60>
    1436:	59 3f       	cpi	r21, 0xF9	; 249
    1438:	50 f4       	brcc	.+20     	; 0x144e <__addsf3x+0x52>
    143a:	50 3e       	cpi	r21, 0xE0	; 224
    143c:	68 f1       	brcs	.+90     	; 0x1498 <__addsf3x+0x9c>
    143e:	1a 16       	cp	r1, r26
    1440:	f0 40       	sbci	r31, 0x00	; 0
    1442:	a2 2f       	mov	r26, r18
    1444:	23 2f       	mov	r18, r19
    1446:	34 2f       	mov	r19, r20
    1448:	44 27       	eor	r20, r20
    144a:	58 5f       	subi	r21, 0xF8	; 248
    144c:	f3 cf       	rjmp	.-26     	; 0x1434 <__addsf3x+0x38>
    144e:	46 95       	lsr	r20
    1450:	37 95       	ror	r19
    1452:	27 95       	ror	r18
    1454:	a7 95       	ror	r26
    1456:	f0 40       	sbci	r31, 0x00	; 0
    1458:	53 95       	inc	r21
    145a:	c9 f7       	brne	.-14     	; 0x144e <__addsf3x+0x52>
    145c:	7e f4       	brtc	.+30     	; 0x147c <__addsf3x+0x80>
    145e:	1f 16       	cp	r1, r31
    1460:	ba 0b       	sbc	r27, r26
    1462:	62 0b       	sbc	r22, r18
    1464:	73 0b       	sbc	r23, r19
    1466:	84 0b       	sbc	r24, r20
    1468:	ba f0       	brmi	.+46     	; 0x1498 <__addsf3x+0x9c>
    146a:	91 50       	subi	r25, 0x01	; 1
    146c:	a1 f0       	breq	.+40     	; 0x1496 <__addsf3x+0x9a>
    146e:	ff 0f       	add	r31, r31
    1470:	bb 1f       	adc	r27, r27
    1472:	66 1f       	adc	r22, r22
    1474:	77 1f       	adc	r23, r23
    1476:	88 1f       	adc	r24, r24
    1478:	c2 f7       	brpl	.-16     	; 0x146a <__addsf3x+0x6e>
    147a:	0e c0       	rjmp	.+28     	; 0x1498 <__addsf3x+0x9c>
    147c:	ba 0f       	add	r27, r26
    147e:	62 1f       	adc	r22, r18
    1480:	73 1f       	adc	r23, r19
    1482:	84 1f       	adc	r24, r20
    1484:	48 f4       	brcc	.+18     	; 0x1498 <__addsf3x+0x9c>
    1486:	87 95       	ror	r24
    1488:	77 95       	ror	r23
    148a:	67 95       	ror	r22
    148c:	b7 95       	ror	r27
    148e:	f7 95       	ror	r31
    1490:	9e 3f       	cpi	r25, 0xFE	; 254
    1492:	08 f0       	brcs	.+2      	; 0x1496 <__addsf3x+0x9a>
    1494:	b0 cf       	rjmp	.-160    	; 0x13f6 <__addsf3+0x28>
    1496:	93 95       	inc	r25
    1498:	88 0f       	add	r24, r24
    149a:	08 f0       	brcs	.+2      	; 0x149e <__addsf3x+0xa2>
    149c:	99 27       	eor	r25, r25
    149e:	ee 0f       	add	r30, r30
    14a0:	97 95       	ror	r25
    14a2:	87 95       	ror	r24
    14a4:	08 95       	ret
    14a6:	0e 94 a4 0b 	call	0x1748	; 0x1748 <__fp_pscA>
    14aa:	60 f0       	brcs	.+24     	; 0x14c4 <__addsf3x+0xc8>
    14ac:	80 e8       	ldi	r24, 0x80	; 128
    14ae:	91 e0       	ldi	r25, 0x01	; 1
    14b0:	09 f4       	brne	.+2      	; 0x14b4 <__addsf3x+0xb8>
    14b2:	9e ef       	ldi	r25, 0xFE	; 254
    14b4:	0e 94 ab 0b 	call	0x1756	; 0x1756 <__fp_pscB>
    14b8:	28 f0       	brcs	.+10     	; 0x14c4 <__addsf3x+0xc8>
    14ba:	40 e8       	ldi	r20, 0x80	; 128
    14bc:	51 e0       	ldi	r21, 0x01	; 1
    14be:	71 f4       	brne	.+28     	; 0x14dc <atan2+0x10>
    14c0:	5e ef       	ldi	r21, 0xFE	; 254
    14c2:	0c c0       	rjmp	.+24     	; 0x14dc <atan2+0x10>
    14c4:	0c 94 7a 0b 	jmp	0x16f4	; 0x16f4 <__fp_nan>
    14c8:	0c 94 e5 0b 	jmp	0x17ca	; 0x17ca <__fp_zero>

000014cc <atan2>:
    14cc:	e9 2f       	mov	r30, r25
    14ce:	e0 78       	andi	r30, 0x80	; 128
    14d0:	0e 94 c3 0b 	call	0x1786	; 0x1786 <__fp_split3>
    14d4:	40 f3       	brcs	.-48     	; 0x14a6 <__addsf3x+0xaa>
    14d6:	09 2e       	mov	r0, r25
    14d8:	05 2a       	or	r0, r21
    14da:	b1 f3       	breq	.-20     	; 0x14c8 <__addsf3x+0xcc>
    14dc:	26 17       	cp	r18, r22
    14de:	37 07       	cpc	r19, r23
    14e0:	48 07       	cpc	r20, r24
    14e2:	59 07       	cpc	r21, r25
    14e4:	38 f0       	brcs	.+14     	; 0x14f4 <atan2+0x28>
    14e6:	0e 2e       	mov	r0, r30
    14e8:	07 f8       	bld	r0, 7
    14ea:	e0 25       	eor	r30, r0
    14ec:	69 f0       	breq	.+26     	; 0x1508 <atan2+0x3c>
    14ee:	e0 25       	eor	r30, r0
    14f0:	e0 64       	ori	r30, 0x40	; 64
    14f2:	0a c0       	rjmp	.+20     	; 0x1508 <atan2+0x3c>
    14f4:	ef 63       	ori	r30, 0x3F	; 63
    14f6:	07 f8       	bld	r0, 7
    14f8:	00 94       	com	r0
    14fa:	07 fa       	bst	r0, 7
    14fc:	db 01       	movw	r26, r22
    14fe:	b9 01       	movw	r22, r18
    1500:	9d 01       	movw	r18, r26
    1502:	dc 01       	movw	r26, r24
    1504:	ca 01       	movw	r24, r20
    1506:	ad 01       	movw	r20, r26
    1508:	ef 93       	push	r30
    150a:	0e 94 dc 0a 	call	0x15b8	; 0x15b8 <__divsf3_pse>
    150e:	0e 94 b2 0b 	call	0x1764	; 0x1764 <__fp_round>
    1512:	0e 94 96 0a 	call	0x152c	; 0x152c <atan>
    1516:	5f 91       	pop	r21
    1518:	55 23       	and	r21, r21
    151a:	39 f0       	breq	.+14     	; 0x152a <atan2+0x5e>
    151c:	2b ed       	ldi	r18, 0xDB	; 219
    151e:	3f e0       	ldi	r19, 0x0F	; 15
    1520:	49 e4       	ldi	r20, 0x49	; 73
    1522:	50 fd       	sbrc	r21, 0
    1524:	49 ec       	ldi	r20, 0xC9	; 201
    1526:	0c 94 e7 09 	jmp	0x13ce	; 0x13ce <__addsf3>
    152a:	08 95       	ret

0000152c <atan>:
    152c:	df 93       	push	r29
    152e:	dd 27       	eor	r29, r29
    1530:	b9 2f       	mov	r27, r25
    1532:	bf 77       	andi	r27, 0x7F	; 127
    1534:	40 e8       	ldi	r20, 0x80	; 128
    1536:	5f e3       	ldi	r21, 0x3F	; 63
    1538:	16 16       	cp	r1, r22
    153a:	17 06       	cpc	r1, r23
    153c:	48 07       	cpc	r20, r24
    153e:	5b 07       	cpc	r21, r27
    1540:	18 f4       	brcc	.+6      	; 0x1548 <atan+0x1c>
    1542:	d9 2f       	mov	r29, r25
    1544:	0e 94 ec 0b 	call	0x17d8	; 0x17d8 <inverse>
    1548:	9f 93       	push	r25
    154a:	8f 93       	push	r24
    154c:	7f 93       	push	r23
    154e:	6f 93       	push	r22
    1550:	0e 94 b1 0c 	call	0x1962	; 0x1962 <square>
    1554:	e8 e6       	ldi	r30, 0x68	; 104
    1556:	f0 e0       	ldi	r31, 0x00	; 0
    1558:	0e 94 7d 0b 	call	0x16fa	; 0x16fa <__fp_powser>
    155c:	0e 94 b2 0b 	call	0x1764	; 0x1764 <__fp_round>
    1560:	2f 91       	pop	r18
    1562:	3f 91       	pop	r19
    1564:	4f 91       	pop	r20
    1566:	5f 91       	pop	r21
    1568:	0e 94 07 0c 	call	0x180e	; 0x180e <__mulsf3x>
    156c:	dd 23       	and	r29, r29
    156e:	51 f0       	breq	.+20     	; 0x1584 <atan+0x58>
    1570:	90 58       	subi	r25, 0x80	; 128
    1572:	a2 ea       	ldi	r26, 0xA2	; 162
    1574:	2a ed       	ldi	r18, 0xDA	; 218
    1576:	3f e0       	ldi	r19, 0x0F	; 15
    1578:	49 ec       	ldi	r20, 0xC9	; 201
    157a:	5f e3       	ldi	r21, 0x3F	; 63
    157c:	d0 78       	andi	r29, 0x80	; 128
    157e:	5d 27       	eor	r21, r29
    1580:	0e 94 fe 09 	call	0x13fc	; 0x13fc <__addsf3x>
    1584:	df 91       	pop	r29
    1586:	0c 94 b2 0b 	jmp	0x1764	; 0x1764 <__fp_round>

0000158a <__divsf3>:
    158a:	0e 94 d9 0a 	call	0x15b2	; 0x15b2 <__divsf3x>
    158e:	0c 94 b2 0b 	jmp	0x1764	; 0x1764 <__fp_round>
    1592:	0e 94 ab 0b 	call	0x1756	; 0x1756 <__fp_pscB>
    1596:	58 f0       	brcs	.+22     	; 0x15ae <__divsf3+0x24>
    1598:	0e 94 a4 0b 	call	0x1748	; 0x1748 <__fp_pscA>
    159c:	40 f0       	brcs	.+16     	; 0x15ae <__divsf3+0x24>
    159e:	29 f4       	brne	.+10     	; 0x15aa <__divsf3+0x20>
    15a0:	5f 3f       	cpi	r21, 0xFF	; 255
    15a2:	29 f0       	breq	.+10     	; 0x15ae <__divsf3+0x24>
    15a4:	0c 94 74 0b 	jmp	0x16e8	; 0x16e8 <__fp_inf>
    15a8:	51 11       	cpse	r21, r1
    15aa:	0c 94 e6 0b 	jmp	0x17cc	; 0x17cc <__fp_szero>
    15ae:	0c 94 7a 0b 	jmp	0x16f4	; 0x16f4 <__fp_nan>

000015b2 <__divsf3x>:
    15b2:	0e 94 c3 0b 	call	0x1786	; 0x1786 <__fp_split3>
    15b6:	68 f3       	brcs	.-38     	; 0x1592 <__divsf3+0x8>

000015b8 <__divsf3_pse>:
    15b8:	99 23       	and	r25, r25
    15ba:	b1 f3       	breq	.-20     	; 0x15a8 <__divsf3+0x1e>
    15bc:	55 23       	and	r21, r21
    15be:	91 f3       	breq	.-28     	; 0x15a4 <__divsf3+0x1a>
    15c0:	95 1b       	sub	r25, r21
    15c2:	55 0b       	sbc	r21, r21
    15c4:	bb 27       	eor	r27, r27
    15c6:	aa 27       	eor	r26, r26
    15c8:	62 17       	cp	r22, r18
    15ca:	73 07       	cpc	r23, r19
    15cc:	84 07       	cpc	r24, r20
    15ce:	38 f0       	brcs	.+14     	; 0x15de <__divsf3_pse+0x26>
    15d0:	9f 5f       	subi	r25, 0xFF	; 255
    15d2:	5f 4f       	sbci	r21, 0xFF	; 255
    15d4:	22 0f       	add	r18, r18
    15d6:	33 1f       	adc	r19, r19
    15d8:	44 1f       	adc	r20, r20
    15da:	aa 1f       	adc	r26, r26
    15dc:	a9 f3       	breq	.-22     	; 0x15c8 <__divsf3_pse+0x10>
    15de:	35 d0       	rcall	.+106    	; 0x164a <__divsf3_pse+0x92>
    15e0:	0e 2e       	mov	r0, r30
    15e2:	3a f0       	brmi	.+14     	; 0x15f2 <__divsf3_pse+0x3a>
    15e4:	e0 e8       	ldi	r30, 0x80	; 128
    15e6:	32 d0       	rcall	.+100    	; 0x164c <__divsf3_pse+0x94>
    15e8:	91 50       	subi	r25, 0x01	; 1
    15ea:	50 40       	sbci	r21, 0x00	; 0
    15ec:	e6 95       	lsr	r30
    15ee:	00 1c       	adc	r0, r0
    15f0:	ca f7       	brpl	.-14     	; 0x15e4 <__divsf3_pse+0x2c>
    15f2:	2b d0       	rcall	.+86     	; 0x164a <__divsf3_pse+0x92>
    15f4:	fe 2f       	mov	r31, r30
    15f6:	29 d0       	rcall	.+82     	; 0x164a <__divsf3_pse+0x92>
    15f8:	66 0f       	add	r22, r22
    15fa:	77 1f       	adc	r23, r23
    15fc:	88 1f       	adc	r24, r24
    15fe:	bb 1f       	adc	r27, r27
    1600:	26 17       	cp	r18, r22
    1602:	37 07       	cpc	r19, r23
    1604:	48 07       	cpc	r20, r24
    1606:	ab 07       	cpc	r26, r27
    1608:	b0 e8       	ldi	r27, 0x80	; 128
    160a:	09 f0       	breq	.+2      	; 0x160e <__divsf3_pse+0x56>
    160c:	bb 0b       	sbc	r27, r27
    160e:	80 2d       	mov	r24, r0
    1610:	bf 01       	movw	r22, r30
    1612:	ff 27       	eor	r31, r31
    1614:	93 58       	subi	r25, 0x83	; 131
    1616:	5f 4f       	sbci	r21, 0xFF	; 255
    1618:	3a f0       	brmi	.+14     	; 0x1628 <__divsf3_pse+0x70>
    161a:	9e 3f       	cpi	r25, 0xFE	; 254
    161c:	51 05       	cpc	r21, r1
    161e:	78 f0       	brcs	.+30     	; 0x163e <__divsf3_pse+0x86>
    1620:	0c 94 74 0b 	jmp	0x16e8	; 0x16e8 <__fp_inf>
    1624:	0c 94 e6 0b 	jmp	0x17cc	; 0x17cc <__fp_szero>
    1628:	5f 3f       	cpi	r21, 0xFF	; 255
    162a:	e4 f3       	brlt	.-8      	; 0x1624 <__divsf3_pse+0x6c>
    162c:	98 3e       	cpi	r25, 0xE8	; 232
    162e:	d4 f3       	brlt	.-12     	; 0x1624 <__divsf3_pse+0x6c>
    1630:	86 95       	lsr	r24
    1632:	77 95       	ror	r23
    1634:	67 95       	ror	r22
    1636:	b7 95       	ror	r27
    1638:	f7 95       	ror	r31
    163a:	9f 5f       	subi	r25, 0xFF	; 255
    163c:	c9 f7       	brne	.-14     	; 0x1630 <__divsf3_pse+0x78>
    163e:	88 0f       	add	r24, r24
    1640:	91 1d       	adc	r25, r1
    1642:	96 95       	lsr	r25
    1644:	87 95       	ror	r24
    1646:	97 f9       	bld	r25, 7
    1648:	08 95       	ret
    164a:	e1 e0       	ldi	r30, 0x01	; 1
    164c:	66 0f       	add	r22, r22
    164e:	77 1f       	adc	r23, r23
    1650:	88 1f       	adc	r24, r24
    1652:	bb 1f       	adc	r27, r27
    1654:	62 17       	cp	r22, r18
    1656:	73 07       	cpc	r23, r19
    1658:	84 07       	cpc	r24, r20
    165a:	ba 07       	cpc	r27, r26
    165c:	20 f0       	brcs	.+8      	; 0x1666 <__divsf3_pse+0xae>
    165e:	62 1b       	sub	r22, r18
    1660:	73 0b       	sbc	r23, r19
    1662:	84 0b       	sbc	r24, r20
    1664:	ba 0b       	sbc	r27, r26
    1666:	ee 1f       	adc	r30, r30
    1668:	88 f7       	brcc	.-30     	; 0x164c <__divsf3_pse+0x94>
    166a:	e0 95       	com	r30
    166c:	08 95       	ret

0000166e <__floatunsisf>:
    166e:	e8 94       	clt
    1670:	09 c0       	rjmp	.+18     	; 0x1684 <__floatsisf+0x12>

00001672 <__floatsisf>:
    1672:	97 fb       	bst	r25, 7
    1674:	3e f4       	brtc	.+14     	; 0x1684 <__floatsisf+0x12>
    1676:	90 95       	com	r25
    1678:	80 95       	com	r24
    167a:	70 95       	com	r23
    167c:	61 95       	neg	r22
    167e:	7f 4f       	sbci	r23, 0xFF	; 255
    1680:	8f 4f       	sbci	r24, 0xFF	; 255
    1682:	9f 4f       	sbci	r25, 0xFF	; 255
    1684:	99 23       	and	r25, r25
    1686:	a9 f0       	breq	.+42     	; 0x16b2 <__floatsisf+0x40>
    1688:	f9 2f       	mov	r31, r25
    168a:	96 e9       	ldi	r25, 0x96	; 150
    168c:	bb 27       	eor	r27, r27
    168e:	93 95       	inc	r25
    1690:	f6 95       	lsr	r31
    1692:	87 95       	ror	r24
    1694:	77 95       	ror	r23
    1696:	67 95       	ror	r22
    1698:	b7 95       	ror	r27
    169a:	f1 11       	cpse	r31, r1
    169c:	f8 cf       	rjmp	.-16     	; 0x168e <__floatsisf+0x1c>
    169e:	fa f4       	brpl	.+62     	; 0x16de <__floatsisf+0x6c>
    16a0:	bb 0f       	add	r27, r27
    16a2:	11 f4       	brne	.+4      	; 0x16a8 <__floatsisf+0x36>
    16a4:	60 ff       	sbrs	r22, 0
    16a6:	1b c0       	rjmp	.+54     	; 0x16de <__floatsisf+0x6c>
    16a8:	6f 5f       	subi	r22, 0xFF	; 255
    16aa:	7f 4f       	sbci	r23, 0xFF	; 255
    16ac:	8f 4f       	sbci	r24, 0xFF	; 255
    16ae:	9f 4f       	sbci	r25, 0xFF	; 255
    16b0:	16 c0       	rjmp	.+44     	; 0x16de <__floatsisf+0x6c>
    16b2:	88 23       	and	r24, r24
    16b4:	11 f0       	breq	.+4      	; 0x16ba <__floatsisf+0x48>
    16b6:	96 e9       	ldi	r25, 0x96	; 150
    16b8:	11 c0       	rjmp	.+34     	; 0x16dc <__floatsisf+0x6a>
    16ba:	77 23       	and	r23, r23
    16bc:	21 f0       	breq	.+8      	; 0x16c6 <__floatsisf+0x54>
    16be:	9e e8       	ldi	r25, 0x8E	; 142
    16c0:	87 2f       	mov	r24, r23
    16c2:	76 2f       	mov	r23, r22
    16c4:	05 c0       	rjmp	.+10     	; 0x16d0 <__floatsisf+0x5e>
    16c6:	66 23       	and	r22, r22
    16c8:	71 f0       	breq	.+28     	; 0x16e6 <__floatsisf+0x74>
    16ca:	96 e8       	ldi	r25, 0x86	; 134
    16cc:	86 2f       	mov	r24, r22
    16ce:	70 e0       	ldi	r23, 0x00	; 0
    16d0:	60 e0       	ldi	r22, 0x00	; 0
    16d2:	2a f0       	brmi	.+10     	; 0x16de <__floatsisf+0x6c>
    16d4:	9a 95       	dec	r25
    16d6:	66 0f       	add	r22, r22
    16d8:	77 1f       	adc	r23, r23
    16da:	88 1f       	adc	r24, r24
    16dc:	da f7       	brpl	.-10     	; 0x16d4 <__floatsisf+0x62>
    16de:	88 0f       	add	r24, r24
    16e0:	96 95       	lsr	r25
    16e2:	87 95       	ror	r24
    16e4:	97 f9       	bld	r25, 7
    16e6:	08 95       	ret

000016e8 <__fp_inf>:
    16e8:	97 f9       	bld	r25, 7
    16ea:	9f 67       	ori	r25, 0x7F	; 127
    16ec:	80 e8       	ldi	r24, 0x80	; 128
    16ee:	70 e0       	ldi	r23, 0x00	; 0
    16f0:	60 e0       	ldi	r22, 0x00	; 0
    16f2:	08 95       	ret

000016f4 <__fp_nan>:
    16f4:	9f ef       	ldi	r25, 0xFF	; 255
    16f6:	80 ec       	ldi	r24, 0xC0	; 192
    16f8:	08 95       	ret

000016fa <__fp_powser>:
    16fa:	df 93       	push	r29
    16fc:	cf 93       	push	r28
    16fe:	1f 93       	push	r17
    1700:	0f 93       	push	r16
    1702:	ff 92       	push	r15
    1704:	ef 92       	push	r14
    1706:	df 92       	push	r13
    1708:	7b 01       	movw	r14, r22
    170a:	8c 01       	movw	r16, r24
    170c:	68 94       	set
    170e:	06 c0       	rjmp	.+12     	; 0x171c <__fp_powser+0x22>
    1710:	da 2e       	mov	r13, r26
    1712:	ef 01       	movw	r28, r30
    1714:	0e 94 07 0c 	call	0x180e	; 0x180e <__mulsf3x>
    1718:	fe 01       	movw	r30, r28
    171a:	e8 94       	clt
    171c:	a5 91       	lpm	r26, Z+
    171e:	25 91       	lpm	r18, Z+
    1720:	35 91       	lpm	r19, Z+
    1722:	45 91       	lpm	r20, Z+
    1724:	55 91       	lpm	r21, Z+
    1726:	a6 f3       	brts	.-24     	; 0x1710 <__fp_powser+0x16>
    1728:	ef 01       	movw	r28, r30
    172a:	0e 94 fe 09 	call	0x13fc	; 0x13fc <__addsf3x>
    172e:	fe 01       	movw	r30, r28
    1730:	97 01       	movw	r18, r14
    1732:	a8 01       	movw	r20, r16
    1734:	da 94       	dec	r13
    1736:	69 f7       	brne	.-38     	; 0x1712 <__fp_powser+0x18>
    1738:	df 90       	pop	r13
    173a:	ef 90       	pop	r14
    173c:	ff 90       	pop	r15
    173e:	0f 91       	pop	r16
    1740:	1f 91       	pop	r17
    1742:	cf 91       	pop	r28
    1744:	df 91       	pop	r29
    1746:	08 95       	ret

00001748 <__fp_pscA>:
    1748:	00 24       	eor	r0, r0
    174a:	0a 94       	dec	r0
    174c:	16 16       	cp	r1, r22
    174e:	17 06       	cpc	r1, r23
    1750:	18 06       	cpc	r1, r24
    1752:	09 06       	cpc	r0, r25
    1754:	08 95       	ret

00001756 <__fp_pscB>:
    1756:	00 24       	eor	r0, r0
    1758:	0a 94       	dec	r0
    175a:	12 16       	cp	r1, r18
    175c:	13 06       	cpc	r1, r19
    175e:	14 06       	cpc	r1, r20
    1760:	05 06       	cpc	r0, r21
    1762:	08 95       	ret

00001764 <__fp_round>:
    1764:	09 2e       	mov	r0, r25
    1766:	03 94       	inc	r0
    1768:	00 0c       	add	r0, r0
    176a:	11 f4       	brne	.+4      	; 0x1770 <__fp_round+0xc>
    176c:	88 23       	and	r24, r24
    176e:	52 f0       	brmi	.+20     	; 0x1784 <__fp_round+0x20>
    1770:	bb 0f       	add	r27, r27
    1772:	40 f4       	brcc	.+16     	; 0x1784 <__fp_round+0x20>
    1774:	bf 2b       	or	r27, r31
    1776:	11 f4       	brne	.+4      	; 0x177c <__fp_round+0x18>
    1778:	60 ff       	sbrs	r22, 0
    177a:	04 c0       	rjmp	.+8      	; 0x1784 <__fp_round+0x20>
    177c:	6f 5f       	subi	r22, 0xFF	; 255
    177e:	7f 4f       	sbci	r23, 0xFF	; 255
    1780:	8f 4f       	sbci	r24, 0xFF	; 255
    1782:	9f 4f       	sbci	r25, 0xFF	; 255
    1784:	08 95       	ret

00001786 <__fp_split3>:
    1786:	57 fd       	sbrc	r21, 7
    1788:	90 58       	subi	r25, 0x80	; 128
    178a:	44 0f       	add	r20, r20
    178c:	55 1f       	adc	r21, r21
    178e:	59 f0       	breq	.+22     	; 0x17a6 <__fp_splitA+0x10>
    1790:	5f 3f       	cpi	r21, 0xFF	; 255
    1792:	71 f0       	breq	.+28     	; 0x17b0 <__fp_splitA+0x1a>
    1794:	47 95       	ror	r20

00001796 <__fp_splitA>:
    1796:	88 0f       	add	r24, r24
    1798:	97 fb       	bst	r25, 7
    179a:	99 1f       	adc	r25, r25
    179c:	61 f0       	breq	.+24     	; 0x17b6 <__fp_splitA+0x20>
    179e:	9f 3f       	cpi	r25, 0xFF	; 255
    17a0:	79 f0       	breq	.+30     	; 0x17c0 <__fp_splitA+0x2a>
    17a2:	87 95       	ror	r24
    17a4:	08 95       	ret
    17a6:	12 16       	cp	r1, r18
    17a8:	13 06       	cpc	r1, r19
    17aa:	14 06       	cpc	r1, r20
    17ac:	55 1f       	adc	r21, r21
    17ae:	f2 cf       	rjmp	.-28     	; 0x1794 <__fp_split3+0xe>
    17b0:	46 95       	lsr	r20
    17b2:	f1 df       	rcall	.-30     	; 0x1796 <__fp_splitA>
    17b4:	08 c0       	rjmp	.+16     	; 0x17c6 <__fp_splitA+0x30>
    17b6:	16 16       	cp	r1, r22
    17b8:	17 06       	cpc	r1, r23
    17ba:	18 06       	cpc	r1, r24
    17bc:	99 1f       	adc	r25, r25
    17be:	f1 cf       	rjmp	.-30     	; 0x17a2 <__fp_splitA+0xc>
    17c0:	86 95       	lsr	r24
    17c2:	71 05       	cpc	r23, r1
    17c4:	61 05       	cpc	r22, r1
    17c6:	08 94       	sec
    17c8:	08 95       	ret

000017ca <__fp_zero>:
    17ca:	e8 94       	clt

000017cc <__fp_szero>:
    17cc:	bb 27       	eor	r27, r27
    17ce:	66 27       	eor	r22, r22
    17d0:	77 27       	eor	r23, r23
    17d2:	cb 01       	movw	r24, r22
    17d4:	97 f9       	bld	r25, 7
    17d6:	08 95       	ret

000017d8 <inverse>:
    17d8:	9b 01       	movw	r18, r22
    17da:	ac 01       	movw	r20, r24
    17dc:	60 e0       	ldi	r22, 0x00	; 0
    17de:	70 e0       	ldi	r23, 0x00	; 0
    17e0:	80 e8       	ldi	r24, 0x80	; 128
    17e2:	9f e3       	ldi	r25, 0x3F	; 63
    17e4:	0c 94 c5 0a 	jmp	0x158a	; 0x158a <__divsf3>

000017e8 <__mulsf3>:
    17e8:	0e 94 07 0c 	call	0x180e	; 0x180e <__mulsf3x>
    17ec:	0c 94 b2 0b 	jmp	0x1764	; 0x1764 <__fp_round>
    17f0:	0e 94 a4 0b 	call	0x1748	; 0x1748 <__fp_pscA>
    17f4:	38 f0       	brcs	.+14     	; 0x1804 <__mulsf3+0x1c>
    17f6:	0e 94 ab 0b 	call	0x1756	; 0x1756 <__fp_pscB>
    17fa:	20 f0       	brcs	.+8      	; 0x1804 <__mulsf3+0x1c>
    17fc:	95 23       	and	r25, r21
    17fe:	11 f0       	breq	.+4      	; 0x1804 <__mulsf3+0x1c>
    1800:	0c 94 74 0b 	jmp	0x16e8	; 0x16e8 <__fp_inf>
    1804:	0c 94 7a 0b 	jmp	0x16f4	; 0x16f4 <__fp_nan>
    1808:	11 24       	eor	r1, r1
    180a:	0c 94 e6 0b 	jmp	0x17cc	; 0x17cc <__fp_szero>

0000180e <__mulsf3x>:
    180e:	0e 94 c3 0b 	call	0x1786	; 0x1786 <__fp_split3>
    1812:	70 f3       	brcs	.-36     	; 0x17f0 <__mulsf3+0x8>

00001814 <__mulsf3_pse>:
    1814:	95 9f       	mul	r25, r21
    1816:	c1 f3       	breq	.-16     	; 0x1808 <__mulsf3+0x20>
    1818:	95 0f       	add	r25, r21
    181a:	50 e0       	ldi	r21, 0x00	; 0
    181c:	55 1f       	adc	r21, r21
    181e:	62 9f       	mul	r22, r18
    1820:	f0 01       	movw	r30, r0
    1822:	72 9f       	mul	r23, r18
    1824:	bb 27       	eor	r27, r27
    1826:	f0 0d       	add	r31, r0
    1828:	b1 1d       	adc	r27, r1
    182a:	63 9f       	mul	r22, r19
    182c:	aa 27       	eor	r26, r26
    182e:	f0 0d       	add	r31, r0
    1830:	b1 1d       	adc	r27, r1
    1832:	aa 1f       	adc	r26, r26
    1834:	64 9f       	mul	r22, r20
    1836:	66 27       	eor	r22, r22
    1838:	b0 0d       	add	r27, r0
    183a:	a1 1d       	adc	r26, r1
    183c:	66 1f       	adc	r22, r22
    183e:	82 9f       	mul	r24, r18
    1840:	22 27       	eor	r18, r18
    1842:	b0 0d       	add	r27, r0
    1844:	a1 1d       	adc	r26, r1
    1846:	62 1f       	adc	r22, r18
    1848:	73 9f       	mul	r23, r19
    184a:	b0 0d       	add	r27, r0
    184c:	a1 1d       	adc	r26, r1
    184e:	62 1f       	adc	r22, r18
    1850:	83 9f       	mul	r24, r19
    1852:	a0 0d       	add	r26, r0
    1854:	61 1d       	adc	r22, r1
    1856:	22 1f       	adc	r18, r18
    1858:	74 9f       	mul	r23, r20
    185a:	33 27       	eor	r19, r19
    185c:	a0 0d       	add	r26, r0
    185e:	61 1d       	adc	r22, r1
    1860:	23 1f       	adc	r18, r19
    1862:	84 9f       	mul	r24, r20
    1864:	60 0d       	add	r22, r0
    1866:	21 1d       	adc	r18, r1
    1868:	82 2f       	mov	r24, r18
    186a:	76 2f       	mov	r23, r22
    186c:	6a 2f       	mov	r22, r26
    186e:	11 24       	eor	r1, r1
    1870:	9f 57       	subi	r25, 0x7F	; 127
    1872:	50 40       	sbci	r21, 0x00	; 0
    1874:	9a f0       	brmi	.+38     	; 0x189c <__mulsf3_pse+0x88>
    1876:	f1 f0       	breq	.+60     	; 0x18b4 <__mulsf3_pse+0xa0>
    1878:	88 23       	and	r24, r24
    187a:	4a f0       	brmi	.+18     	; 0x188e <__mulsf3_pse+0x7a>
    187c:	ee 0f       	add	r30, r30
    187e:	ff 1f       	adc	r31, r31
    1880:	bb 1f       	adc	r27, r27
    1882:	66 1f       	adc	r22, r22
    1884:	77 1f       	adc	r23, r23
    1886:	88 1f       	adc	r24, r24
    1888:	91 50       	subi	r25, 0x01	; 1
    188a:	50 40       	sbci	r21, 0x00	; 0
    188c:	a9 f7       	brne	.-22     	; 0x1878 <__mulsf3_pse+0x64>
    188e:	9e 3f       	cpi	r25, 0xFE	; 254
    1890:	51 05       	cpc	r21, r1
    1892:	80 f0       	brcs	.+32     	; 0x18b4 <__mulsf3_pse+0xa0>
    1894:	0c 94 74 0b 	jmp	0x16e8	; 0x16e8 <__fp_inf>
    1898:	0c 94 e6 0b 	jmp	0x17cc	; 0x17cc <__fp_szero>
    189c:	5f 3f       	cpi	r21, 0xFF	; 255
    189e:	e4 f3       	brlt	.-8      	; 0x1898 <__mulsf3_pse+0x84>
    18a0:	98 3e       	cpi	r25, 0xE8	; 232
    18a2:	d4 f3       	brlt	.-12     	; 0x1898 <__mulsf3_pse+0x84>
    18a4:	86 95       	lsr	r24
    18a6:	77 95       	ror	r23
    18a8:	67 95       	ror	r22
    18aa:	b7 95       	ror	r27
    18ac:	f7 95       	ror	r31
    18ae:	e7 95       	ror	r30
    18b0:	9f 5f       	subi	r25, 0xFF	; 255
    18b2:	c1 f7       	brne	.-16     	; 0x18a4 <__mulsf3_pse+0x90>
    18b4:	fe 2b       	or	r31, r30
    18b6:	88 0f       	add	r24, r24
    18b8:	91 1d       	adc	r25, r1
    18ba:	96 95       	lsr	r25
    18bc:	87 95       	ror	r24
    18be:	97 f9       	bld	r25, 7
    18c0:	08 95       	ret

000018c2 <pow>:
    18c2:	fa 01       	movw	r30, r20
    18c4:	ee 0f       	add	r30, r30
    18c6:	ff 1f       	adc	r31, r31
    18c8:	30 96       	adiw	r30, 0x00	; 0
    18ca:	21 05       	cpc	r18, r1
    18cc:	31 05       	cpc	r19, r1
    18ce:	a1 f1       	breq	.+104    	; 0x1938 <pow+0x76>
    18d0:	61 15       	cp	r22, r1
    18d2:	71 05       	cpc	r23, r1
    18d4:	61 f4       	brne	.+24     	; 0x18ee <pow+0x2c>
    18d6:	80 38       	cpi	r24, 0x80	; 128
    18d8:	bf e3       	ldi	r27, 0x3F	; 63
    18da:	9b 07       	cpc	r25, r27
    18dc:	49 f1       	breq	.+82     	; 0x1930 <pow+0x6e>
    18de:	68 94       	set
    18e0:	90 38       	cpi	r25, 0x80	; 128
    18e2:	81 05       	cpc	r24, r1
    18e4:	61 f0       	breq	.+24     	; 0x18fe <pow+0x3c>
    18e6:	80 38       	cpi	r24, 0x80	; 128
    18e8:	bf ef       	ldi	r27, 0xFF	; 255
    18ea:	9b 07       	cpc	r25, r27
    18ec:	41 f0       	breq	.+16     	; 0x18fe <pow+0x3c>
    18ee:	99 23       	and	r25, r25
    18f0:	4a f5       	brpl	.+82     	; 0x1944 <pow+0x82>
    18f2:	ff 3f       	cpi	r31, 0xFF	; 255
    18f4:	e1 05       	cpc	r30, r1
    18f6:	31 05       	cpc	r19, r1
    18f8:	21 05       	cpc	r18, r1
    18fa:	19 f1       	breq	.+70     	; 0x1942 <pow+0x80>
    18fc:	e8 94       	clt
    18fe:	08 94       	sec
    1900:	e7 95       	ror	r30
    1902:	d9 01       	movw	r26, r18
    1904:	aa 23       	and	r26, r26
    1906:	29 f4       	brne	.+10     	; 0x1912 <pow+0x50>
    1908:	ab 2f       	mov	r26, r27
    190a:	be 2f       	mov	r27, r30
    190c:	f8 5f       	subi	r31, 0xF8	; 248
    190e:	d0 f3       	brcs	.-12     	; 0x1904 <pow+0x42>
    1910:	10 c0       	rjmp	.+32     	; 0x1932 <pow+0x70>
    1912:	ff 5f       	subi	r31, 0xFF	; 255
    1914:	70 f4       	brcc	.+28     	; 0x1932 <pow+0x70>
    1916:	a6 95       	lsr	r26
    1918:	e0 f7       	brcc	.-8      	; 0x1912 <pow+0x50>
    191a:	f7 39       	cpi	r31, 0x97	; 151
    191c:	50 f0       	brcs	.+20     	; 0x1932 <pow+0x70>
    191e:	19 f0       	breq	.+6      	; 0x1926 <pow+0x64>
    1920:	ff 3a       	cpi	r31, 0xAF	; 175
    1922:	38 f4       	brcc	.+14     	; 0x1932 <pow+0x70>
    1924:	9f 77       	andi	r25, 0x7F	; 127
    1926:	9f 93       	push	r25
    1928:	0d d0       	rcall	.+26     	; 0x1944 <pow+0x82>
    192a:	0f 90       	pop	r0
    192c:	07 fc       	sbrc	r0, 7
    192e:	90 58       	subi	r25, 0x80	; 128
    1930:	08 95       	ret
    1932:	46 f0       	brts	.+16     	; 0x1944 <pow+0x82>
    1934:	0c 94 7a 0b 	jmp	0x16f4	; 0x16f4 <__fp_nan>
    1938:	60 e0       	ldi	r22, 0x00	; 0
    193a:	70 e0       	ldi	r23, 0x00	; 0
    193c:	80 e8       	ldi	r24, 0x80	; 128
    193e:	9f e3       	ldi	r25, 0x3F	; 63
    1940:	08 95       	ret
    1942:	4f e7       	ldi	r20, 0x7F	; 127
    1944:	9f 77       	andi	r25, 0x7F	; 127
    1946:	5f 93       	push	r21
    1948:	4f 93       	push	r20
    194a:	3f 93       	push	r19
    194c:	2f 93       	push	r18
    194e:	0e 94 31 0d 	call	0x1a62	; 0x1a62 <log>
    1952:	2f 91       	pop	r18
    1954:	3f 91       	pop	r19
    1956:	4f 91       	pop	r20
    1958:	5f 91       	pop	r21
    195a:	0e 94 f4 0b 	call	0x17e8	; 0x17e8 <__mulsf3>
    195e:	0c 94 bd 0c 	jmp	0x197a	; 0x197a <exp>

00001962 <square>:
    1962:	9b 01       	movw	r18, r22
    1964:	ac 01       	movw	r20, r24
    1966:	0c 94 f4 0b 	jmp	0x17e8	; 0x17e8 <__mulsf3>
    196a:	29 f4       	brne	.+10     	; 0x1976 <square+0x14>
    196c:	16 f0       	brts	.+4      	; 0x1972 <square+0x10>
    196e:	0c 94 74 0b 	jmp	0x16e8	; 0x16e8 <__fp_inf>
    1972:	0c 94 e5 0b 	jmp	0x17ca	; 0x17ca <__fp_zero>
    1976:	0c 94 7a 0b 	jmp	0x16f4	; 0x16f4 <__fp_nan>

0000197a <exp>:
    197a:	0e 94 cb 0b 	call	0x1796	; 0x1796 <__fp_splitA>
    197e:	a8 f3       	brcs	.-22     	; 0x196a <square+0x8>
    1980:	96 38       	cpi	r25, 0x86	; 134
    1982:	a0 f7       	brcc	.-24     	; 0x196c <square+0xa>
    1984:	07 f8       	bld	r0, 7
    1986:	0f 92       	push	r0
    1988:	e8 94       	clt
    198a:	2b e3       	ldi	r18, 0x3B	; 59
    198c:	3a ea       	ldi	r19, 0xAA	; 170
    198e:	48 eb       	ldi	r20, 0xB8	; 184
    1990:	5f e7       	ldi	r21, 0x7F	; 127
    1992:	0e 94 0a 0c 	call	0x1814	; 0x1814 <__mulsf3_pse>
    1996:	0f 92       	push	r0
    1998:	0f 92       	push	r0
    199a:	0f 92       	push	r0
    199c:	4d b7       	in	r20, 0x3d	; 61
    199e:	5e b7       	in	r21, 0x3e	; 62
    19a0:	0f 92       	push	r0
    19a2:	0e 94 79 0d 	call	0x1af2	; 0x1af2 <modf>
    19a6:	e5 e9       	ldi	r30, 0x95	; 149
    19a8:	f0 e0       	ldi	r31, 0x00	; 0
    19aa:	0e 94 7d 0b 	call	0x16fa	; 0x16fa <__fp_powser>
    19ae:	4f 91       	pop	r20
    19b0:	5f 91       	pop	r21
    19b2:	ef 91       	pop	r30
    19b4:	ff 91       	pop	r31
    19b6:	e5 95       	asr	r30
    19b8:	ee 1f       	adc	r30, r30
    19ba:	ff 1f       	adc	r31, r31
    19bc:	49 f0       	breq	.+18     	; 0x19d0 <exp+0x56>
    19be:	fe 57       	subi	r31, 0x7E	; 126
    19c0:	e0 68       	ori	r30, 0x80	; 128
    19c2:	44 27       	eor	r20, r20
    19c4:	ee 0f       	add	r30, r30
    19c6:	44 1f       	adc	r20, r20
    19c8:	fa 95       	dec	r31
    19ca:	e1 f7       	brne	.-8      	; 0x19c4 <exp+0x4a>
    19cc:	41 95       	neg	r20
    19ce:	55 0b       	sbc	r21, r21
    19d0:	0e 94 f3 0c 	call	0x19e6	; 0x19e6 <ldexp>
    19d4:	0f 90       	pop	r0
    19d6:	07 fe       	sbrs	r0, 7
    19d8:	0c 94 ec 0b 	jmp	0x17d8	; 0x17d8 <inverse>
    19dc:	08 95       	ret
    19de:	0c 94 74 0b 	jmp	0x16e8	; 0x16e8 <__fp_inf>
    19e2:	0c 94 ad 0d 	jmp	0x1b5a	; 0x1b5a <__fp_mpack>

000019e6 <ldexp>:
    19e6:	0e 94 cb 0b 	call	0x1796	; 0x1796 <__fp_splitA>
    19ea:	d8 f3       	brcs	.-10     	; 0x19e2 <exp+0x68>
    19ec:	99 23       	and	r25, r25
    19ee:	c9 f3       	breq	.-14     	; 0x19e2 <exp+0x68>
    19f0:	94 0f       	add	r25, r20
    19f2:	51 1d       	adc	r21, r1
    19f4:	a3 f3       	brvs	.-24     	; 0x19de <exp+0x64>
    19f6:	91 50       	subi	r25, 0x01	; 1
    19f8:	50 40       	sbci	r21, 0x00	; 0
    19fa:	94 f0       	brlt	.+36     	; 0x1a20 <ldexp+0x3a>
    19fc:	59 f0       	breq	.+22     	; 0x1a14 <ldexp+0x2e>
    19fe:	88 23       	and	r24, r24
    1a00:	32 f0       	brmi	.+12     	; 0x1a0e <ldexp+0x28>
    1a02:	66 0f       	add	r22, r22
    1a04:	77 1f       	adc	r23, r23
    1a06:	88 1f       	adc	r24, r24
    1a08:	91 50       	subi	r25, 0x01	; 1
    1a0a:	50 40       	sbci	r21, 0x00	; 0
    1a0c:	c1 f7       	brne	.-16     	; 0x19fe <ldexp+0x18>
    1a0e:	9e 3f       	cpi	r25, 0xFE	; 254
    1a10:	51 05       	cpc	r21, r1
    1a12:	2c f7       	brge	.-54     	; 0x19de <exp+0x64>
    1a14:	88 0f       	add	r24, r24
    1a16:	91 1d       	adc	r25, r1
    1a18:	96 95       	lsr	r25
    1a1a:	87 95       	ror	r24
    1a1c:	97 f9       	bld	r25, 7
    1a1e:	08 95       	ret
    1a20:	5f 3f       	cpi	r21, 0xFF	; 255
    1a22:	ac f0       	brlt	.+42     	; 0x1a4e <ldexp+0x68>
    1a24:	98 3e       	cpi	r25, 0xE8	; 232
    1a26:	9c f0       	brlt	.+38     	; 0x1a4e <ldexp+0x68>
    1a28:	bb 27       	eor	r27, r27
    1a2a:	86 95       	lsr	r24
    1a2c:	77 95       	ror	r23
    1a2e:	67 95       	ror	r22
    1a30:	b7 95       	ror	r27
    1a32:	08 f4       	brcc	.+2      	; 0x1a36 <ldexp+0x50>
    1a34:	b1 60       	ori	r27, 0x01	; 1
    1a36:	93 95       	inc	r25
    1a38:	c1 f7       	brne	.-16     	; 0x1a2a <ldexp+0x44>
    1a3a:	bb 0f       	add	r27, r27
    1a3c:	58 f7       	brcc	.-42     	; 0x1a14 <ldexp+0x2e>
    1a3e:	11 f4       	brne	.+4      	; 0x1a44 <ldexp+0x5e>
    1a40:	60 ff       	sbrs	r22, 0
    1a42:	e8 cf       	rjmp	.-48     	; 0x1a14 <ldexp+0x2e>
    1a44:	6f 5f       	subi	r22, 0xFF	; 255
    1a46:	7f 4f       	sbci	r23, 0xFF	; 255
    1a48:	8f 4f       	sbci	r24, 0xFF	; 255
    1a4a:	9f 4f       	sbci	r25, 0xFF	; 255
    1a4c:	e3 cf       	rjmp	.-58     	; 0x1a14 <ldexp+0x2e>
    1a4e:	0c 94 e6 0b 	jmp	0x17cc	; 0x17cc <__fp_szero>
    1a52:	16 f0       	brts	.+4      	; 0x1a58 <ldexp+0x72>
    1a54:	0c 94 ad 0d 	jmp	0x1b5a	; 0x1b5a <__fp_mpack>
    1a58:	0c 94 7a 0b 	jmp	0x16f4	; 0x16f4 <__fp_nan>
    1a5c:	68 94       	set
    1a5e:	0c 94 74 0b 	jmp	0x16e8	; 0x16e8 <__fp_inf>

00001a62 <log>:
    1a62:	0e 94 cb 0b 	call	0x1796	; 0x1796 <__fp_splitA>
    1a66:	a8 f3       	brcs	.-22     	; 0x1a52 <ldexp+0x6c>
    1a68:	99 23       	and	r25, r25
    1a6a:	c1 f3       	breq	.-16     	; 0x1a5c <ldexp+0x76>
    1a6c:	ae f3       	brts	.-22     	; 0x1a58 <ldexp+0x72>
    1a6e:	df 93       	push	r29
    1a70:	cf 93       	push	r28
    1a72:	1f 93       	push	r17
    1a74:	0f 93       	push	r16
    1a76:	ff 92       	push	r15
    1a78:	c9 2f       	mov	r28, r25
    1a7a:	dd 27       	eor	r29, r29
    1a7c:	88 23       	and	r24, r24
    1a7e:	2a f0       	brmi	.+10     	; 0x1a8a <log+0x28>
    1a80:	21 97       	sbiw	r28, 0x01	; 1
    1a82:	66 0f       	add	r22, r22
    1a84:	77 1f       	adc	r23, r23
    1a86:	88 1f       	adc	r24, r24
    1a88:	da f7       	brpl	.-10     	; 0x1a80 <log+0x1e>
    1a8a:	20 e0       	ldi	r18, 0x00	; 0
    1a8c:	30 e0       	ldi	r19, 0x00	; 0
    1a8e:	40 e8       	ldi	r20, 0x80	; 128
    1a90:	5f eb       	ldi	r21, 0xBF	; 191
    1a92:	9f e3       	ldi	r25, 0x3F	; 63
    1a94:	88 39       	cpi	r24, 0x98	; 152
    1a96:	20 f0       	brcs	.+8      	; 0x1aa0 <log+0x3e>
    1a98:	80 3e       	cpi	r24, 0xE0	; 224
    1a9a:	38 f0       	brcs	.+14     	; 0x1aaa <log+0x48>
    1a9c:	21 96       	adiw	r28, 0x01	; 1
    1a9e:	8f 77       	andi	r24, 0x7F	; 127
    1aa0:	0e 94 e7 09 	call	0x13ce	; 0x13ce <__addsf3>
    1aa4:	ed eb       	ldi	r30, 0xBD	; 189
    1aa6:	f0 e0       	ldi	r31, 0x00	; 0
    1aa8:	04 c0       	rjmp	.+8      	; 0x1ab2 <log+0x50>
    1aaa:	0e 94 e7 09 	call	0x13ce	; 0x13ce <__addsf3>
    1aae:	ea ee       	ldi	r30, 0xEA	; 234
    1ab0:	f0 e0       	ldi	r31, 0x00	; 0
    1ab2:	0e 94 7d 0b 	call	0x16fa	; 0x16fa <__fp_powser>
    1ab6:	8b 01       	movw	r16, r22
    1ab8:	be 01       	movw	r22, r28
    1aba:	ec 01       	movw	r28, r24
    1abc:	fb 2e       	mov	r15, r27
    1abe:	6f 57       	subi	r22, 0x7F	; 127
    1ac0:	71 09       	sbc	r23, r1
    1ac2:	75 95       	asr	r23
    1ac4:	77 1f       	adc	r23, r23
    1ac6:	88 0b       	sbc	r24, r24
    1ac8:	99 0b       	sbc	r25, r25
    1aca:	0e 94 39 0b 	call	0x1672	; 0x1672 <__floatsisf>
    1ace:	28 e1       	ldi	r18, 0x18	; 24
    1ad0:	32 e7       	ldi	r19, 0x72	; 114
    1ad2:	41 e3       	ldi	r20, 0x31	; 49
    1ad4:	5f e3       	ldi	r21, 0x3F	; 63
    1ad6:	0e 94 07 0c 	call	0x180e	; 0x180e <__mulsf3x>
    1ada:	af 2d       	mov	r26, r15
    1adc:	98 01       	movw	r18, r16
    1ade:	ae 01       	movw	r20, r28
    1ae0:	ff 90       	pop	r15
    1ae2:	0f 91       	pop	r16
    1ae4:	1f 91       	pop	r17
    1ae6:	cf 91       	pop	r28
    1ae8:	df 91       	pop	r29
    1aea:	0e 94 fe 09 	call	0x13fc	; 0x13fc <__addsf3x>
    1aee:	0c 94 b2 0b 	jmp	0x1764	; 0x1764 <__fp_round>

00001af2 <modf>:
    1af2:	fa 01       	movw	r30, r20
    1af4:	dc 01       	movw	r26, r24
    1af6:	aa 0f       	add	r26, r26
    1af8:	bb 1f       	adc	r27, r27
    1afa:	9b 01       	movw	r18, r22
    1afc:	ac 01       	movw	r20, r24
    1afe:	bf 57       	subi	r27, 0x7F	; 127
    1b00:	28 f4       	brcc	.+10     	; 0x1b0c <modf+0x1a>
    1b02:	22 27       	eor	r18, r18
    1b04:	33 27       	eor	r19, r19
    1b06:	44 27       	eor	r20, r20
    1b08:	50 78       	andi	r21, 0x80	; 128
    1b0a:	20 c0       	rjmp	.+64     	; 0x1b4c <modf+0x5a>
    1b0c:	b7 51       	subi	r27, 0x17	; 23
    1b0e:	90 f4       	brcc	.+36     	; 0x1b34 <modf+0x42>
    1b10:	ab 2f       	mov	r26, r27
    1b12:	00 24       	eor	r0, r0
    1b14:	46 95       	lsr	r20
    1b16:	37 95       	ror	r19
    1b18:	27 95       	ror	r18
    1b1a:	01 1c       	adc	r0, r1
    1b1c:	a3 95       	inc	r26
    1b1e:	d2 f3       	brmi	.-12     	; 0x1b14 <modf+0x22>
    1b20:	00 20       	and	r0, r0
    1b22:	71 f0       	breq	.+28     	; 0x1b40 <modf+0x4e>
    1b24:	22 0f       	add	r18, r18
    1b26:	33 1f       	adc	r19, r19
    1b28:	44 1f       	adc	r20, r20
    1b2a:	b3 95       	inc	r27
    1b2c:	da f3       	brmi	.-10     	; 0x1b24 <modf+0x32>
    1b2e:	0e d0       	rcall	.+28     	; 0x1b4c <modf+0x5a>
    1b30:	0c 94 e6 09 	jmp	0x13cc	; 0x13cc <__subsf3>
    1b34:	61 30       	cpi	r22, 0x01	; 1
    1b36:	71 05       	cpc	r23, r1
    1b38:	a0 e8       	ldi	r26, 0x80	; 128
    1b3a:	8a 07       	cpc	r24, r26
    1b3c:	b9 46       	sbci	r27, 0x69	; 105
    1b3e:	30 f4       	brcc	.+12     	; 0x1b4c <modf+0x5a>
    1b40:	9b 01       	movw	r18, r22
    1b42:	ac 01       	movw	r20, r24
    1b44:	66 27       	eor	r22, r22
    1b46:	77 27       	eor	r23, r23
    1b48:	88 27       	eor	r24, r24
    1b4a:	90 78       	andi	r25, 0x80	; 128
    1b4c:	30 96       	adiw	r30, 0x00	; 0
    1b4e:	21 f0       	breq	.+8      	; 0x1b58 <modf+0x66>
    1b50:	20 83       	st	Z, r18
    1b52:	31 83       	std	Z+1, r19	; 0x01
    1b54:	42 83       	std	Z+2, r20	; 0x02
    1b56:	53 83       	std	Z+3, r21	; 0x03
    1b58:	08 95       	ret

00001b5a <__fp_mpack>:
    1b5a:	9f 3f       	cpi	r25, 0xFF	; 255
    1b5c:	31 f0       	breq	.+12     	; 0x1b6a <__fp_mpack_finite+0xc>

00001b5e <__fp_mpack_finite>:
    1b5e:	91 50       	subi	r25, 0x01	; 1
    1b60:	20 f4       	brcc	.+8      	; 0x1b6a <__fp_mpack_finite+0xc>
    1b62:	87 95       	ror	r24
    1b64:	77 95       	ror	r23
    1b66:	67 95       	ror	r22
    1b68:	b7 95       	ror	r27
    1b6a:	88 0f       	add	r24, r24
    1b6c:	91 1d       	adc	r25, r1
    1b6e:	96 95       	lsr	r25
    1b70:	87 95       	ror	r24
    1b72:	97 f9       	bld	r25, 7
    1b74:	08 95       	ret

00001b76 <vfprintf>:
    1b76:	a3 e1       	ldi	r26, 0x13	; 19
    1b78:	b0 e0       	ldi	r27, 0x00	; 0
    1b7a:	e1 ec       	ldi	r30, 0xC1	; 193
    1b7c:	fd e0       	ldi	r31, 0x0D	; 13
    1b7e:	0c 94 9b 11 	jmp	0x2336	; 0x2336 <__prologue_saves__>
    1b82:	6c 01       	movw	r12, r24
    1b84:	4b 01       	movw	r8, r22
    1b86:	2a 01       	movw	r4, r20
    1b88:	fc 01       	movw	r30, r24
    1b8a:	17 82       	std	Z+7, r1	; 0x07
    1b8c:	16 82       	std	Z+6, r1	; 0x06
    1b8e:	83 81       	ldd	r24, Z+3	; 0x03
    1b90:	81 ff       	sbrs	r24, 1
    1b92:	43 c3       	rjmp	.+1670   	; 0x221a <vfprintf+0x6a4>
    1b94:	ae 01       	movw	r20, r28
    1b96:	4f 5f       	subi	r20, 0xFF	; 255
    1b98:	5f 4f       	sbci	r21, 0xFF	; 255
    1b9a:	3a 01       	movw	r6, r20
    1b9c:	f6 01       	movw	r30, r12
    1b9e:	93 81       	ldd	r25, Z+3	; 0x03
    1ba0:	f4 01       	movw	r30, r8
    1ba2:	93 fd       	sbrc	r25, 3
    1ba4:	85 91       	lpm	r24, Z+
    1ba6:	93 ff       	sbrs	r25, 3
    1ba8:	81 91       	ld	r24, Z+
    1baa:	4f 01       	movw	r8, r30
    1bac:	88 23       	and	r24, r24
    1bae:	09 f4       	brne	.+2      	; 0x1bb2 <vfprintf+0x3c>
    1bb0:	30 c3       	rjmp	.+1632   	; 0x2212 <vfprintf+0x69c>
    1bb2:	85 32       	cpi	r24, 0x25	; 37
    1bb4:	39 f4       	brne	.+14     	; 0x1bc4 <vfprintf+0x4e>
    1bb6:	93 fd       	sbrc	r25, 3
    1bb8:	85 91       	lpm	r24, Z+
    1bba:	93 ff       	sbrs	r25, 3
    1bbc:	81 91       	ld	r24, Z+
    1bbe:	4f 01       	movw	r8, r30
    1bc0:	85 32       	cpi	r24, 0x25	; 37
    1bc2:	39 f4       	brne	.+14     	; 0x1bd2 <vfprintf+0x5c>
    1bc4:	b6 01       	movw	r22, r12
    1bc6:	90 e0       	ldi	r25, 0x00	; 0
    1bc8:	0e 94 cf 12 	call	0x259e	; 0x259e <fputc>
    1bcc:	52 01       	movw	r10, r4
    1bce:	25 01       	movw	r4, r10
    1bd0:	e5 cf       	rjmp	.-54     	; 0x1b9c <vfprintf+0x26>
    1bd2:	10 e0       	ldi	r17, 0x00	; 0
    1bd4:	f1 2c       	mov	r15, r1
    1bd6:	20 e0       	ldi	r18, 0x00	; 0
    1bd8:	20 32       	cpi	r18, 0x20	; 32
    1bda:	a0 f4       	brcc	.+40     	; 0x1c04 <vfprintf+0x8e>
    1bdc:	8b 32       	cpi	r24, 0x2B	; 43
    1bde:	69 f0       	breq	.+26     	; 0x1bfa <vfprintf+0x84>
    1be0:	30 f4       	brcc	.+12     	; 0x1bee <vfprintf+0x78>
    1be2:	80 32       	cpi	r24, 0x20	; 32
    1be4:	59 f0       	breq	.+22     	; 0x1bfc <vfprintf+0x86>
    1be6:	83 32       	cpi	r24, 0x23	; 35
    1be8:	69 f4       	brne	.+26     	; 0x1c04 <vfprintf+0x8e>
    1bea:	20 61       	ori	r18, 0x10	; 16
    1bec:	2c c0       	rjmp	.+88     	; 0x1c46 <vfprintf+0xd0>
    1bee:	8d 32       	cpi	r24, 0x2D	; 45
    1bf0:	39 f0       	breq	.+14     	; 0x1c00 <vfprintf+0x8a>
    1bf2:	80 33       	cpi	r24, 0x30	; 48
    1bf4:	39 f4       	brne	.+14     	; 0x1c04 <vfprintf+0x8e>
    1bf6:	21 60       	ori	r18, 0x01	; 1
    1bf8:	26 c0       	rjmp	.+76     	; 0x1c46 <vfprintf+0xd0>
    1bfa:	22 60       	ori	r18, 0x02	; 2
    1bfc:	24 60       	ori	r18, 0x04	; 4
    1bfe:	23 c0       	rjmp	.+70     	; 0x1c46 <vfprintf+0xd0>
    1c00:	28 60       	ori	r18, 0x08	; 8
    1c02:	21 c0       	rjmp	.+66     	; 0x1c46 <vfprintf+0xd0>
    1c04:	27 fd       	sbrc	r18, 7
    1c06:	27 c0       	rjmp	.+78     	; 0x1c56 <vfprintf+0xe0>
    1c08:	30 ed       	ldi	r19, 0xD0	; 208
    1c0a:	38 0f       	add	r19, r24
    1c0c:	3a 30       	cpi	r19, 0x0A	; 10
    1c0e:	78 f4       	brcc	.+30     	; 0x1c2e <vfprintf+0xb8>
    1c10:	26 ff       	sbrs	r18, 6
    1c12:	06 c0       	rjmp	.+12     	; 0x1c20 <vfprintf+0xaa>
    1c14:	fa e0       	ldi	r31, 0x0A	; 10
    1c16:	1f 9f       	mul	r17, r31
    1c18:	30 0d       	add	r19, r0
    1c1a:	11 24       	eor	r1, r1
    1c1c:	13 2f       	mov	r17, r19
    1c1e:	13 c0       	rjmp	.+38     	; 0x1c46 <vfprintf+0xd0>
    1c20:	4a e0       	ldi	r20, 0x0A	; 10
    1c22:	f4 9e       	mul	r15, r20
    1c24:	30 0d       	add	r19, r0
    1c26:	11 24       	eor	r1, r1
    1c28:	f3 2e       	mov	r15, r19
    1c2a:	20 62       	ori	r18, 0x20	; 32
    1c2c:	0c c0       	rjmp	.+24     	; 0x1c46 <vfprintf+0xd0>
    1c2e:	8e 32       	cpi	r24, 0x2E	; 46
    1c30:	21 f4       	brne	.+8      	; 0x1c3a <vfprintf+0xc4>
    1c32:	26 fd       	sbrc	r18, 6
    1c34:	ee c2       	rjmp	.+1500   	; 0x2212 <vfprintf+0x69c>
    1c36:	20 64       	ori	r18, 0x40	; 64
    1c38:	06 c0       	rjmp	.+12     	; 0x1c46 <vfprintf+0xd0>
    1c3a:	8c 36       	cpi	r24, 0x6C	; 108
    1c3c:	11 f4       	brne	.+4      	; 0x1c42 <vfprintf+0xcc>
    1c3e:	20 68       	ori	r18, 0x80	; 128
    1c40:	02 c0       	rjmp	.+4      	; 0x1c46 <vfprintf+0xd0>
    1c42:	88 36       	cpi	r24, 0x68	; 104
    1c44:	41 f4       	brne	.+16     	; 0x1c56 <vfprintf+0xe0>
    1c46:	f4 01       	movw	r30, r8
    1c48:	93 fd       	sbrc	r25, 3
    1c4a:	85 91       	lpm	r24, Z+
    1c4c:	93 ff       	sbrs	r25, 3
    1c4e:	81 91       	ld	r24, Z+
    1c50:	4f 01       	movw	r8, r30
    1c52:	81 11       	cpse	r24, r1
    1c54:	c1 cf       	rjmp	.-126    	; 0x1bd8 <vfprintf+0x62>
    1c56:	9b eb       	ldi	r25, 0xBB	; 187
    1c58:	98 0f       	add	r25, r24
    1c5a:	93 30       	cpi	r25, 0x03	; 3
    1c5c:	18 f4       	brcc	.+6      	; 0x1c64 <vfprintf+0xee>
    1c5e:	20 61       	ori	r18, 0x10	; 16
    1c60:	80 5e       	subi	r24, 0xE0	; 224
    1c62:	06 c0       	rjmp	.+12     	; 0x1c70 <vfprintf+0xfa>
    1c64:	9b e9       	ldi	r25, 0x9B	; 155
    1c66:	98 0f       	add	r25, r24
    1c68:	93 30       	cpi	r25, 0x03	; 3
    1c6a:	08 f0       	brcs	.+2      	; 0x1c6e <vfprintf+0xf8>
    1c6c:	71 c1       	rjmp	.+738    	; 0x1f50 <vfprintf+0x3da>
    1c6e:	2f 7e       	andi	r18, 0xEF	; 239
    1c70:	26 ff       	sbrs	r18, 6
    1c72:	16 e0       	ldi	r17, 0x06	; 6
    1c74:	2f 73       	andi	r18, 0x3F	; 63
    1c76:	32 2e       	mov	r3, r18
    1c78:	85 36       	cpi	r24, 0x65	; 101
    1c7a:	19 f4       	brne	.+6      	; 0x1c82 <vfprintf+0x10c>
    1c7c:	20 64       	ori	r18, 0x40	; 64
    1c7e:	32 2e       	mov	r3, r18
    1c80:	08 c0       	rjmp	.+16     	; 0x1c92 <vfprintf+0x11c>
    1c82:	86 36       	cpi	r24, 0x66	; 102
    1c84:	21 f4       	brne	.+8      	; 0x1c8e <vfprintf+0x118>
    1c86:	f2 2f       	mov	r31, r18
    1c88:	f0 68       	ori	r31, 0x80	; 128
    1c8a:	3f 2e       	mov	r3, r31
    1c8c:	02 c0       	rjmp	.+4      	; 0x1c92 <vfprintf+0x11c>
    1c8e:	11 11       	cpse	r17, r1
    1c90:	11 50       	subi	r17, 0x01	; 1
    1c92:	37 fe       	sbrs	r3, 7
    1c94:	07 c0       	rjmp	.+14     	; 0x1ca4 <vfprintf+0x12e>
    1c96:	1c 33       	cpi	r17, 0x3C	; 60
    1c98:	50 f4       	brcc	.+20     	; 0x1cae <vfprintf+0x138>
    1c9a:	ee 24       	eor	r14, r14
    1c9c:	e3 94       	inc	r14
    1c9e:	e1 0e       	add	r14, r17
    1ca0:	27 e0       	ldi	r18, 0x07	; 7
    1ca2:	0b c0       	rjmp	.+22     	; 0x1cba <vfprintf+0x144>
    1ca4:	18 30       	cpi	r17, 0x08	; 8
    1ca6:	38 f0       	brcs	.+14     	; 0x1cb6 <vfprintf+0x140>
    1ca8:	27 e0       	ldi	r18, 0x07	; 7
    1caa:	17 e0       	ldi	r17, 0x07	; 7
    1cac:	05 c0       	rjmp	.+10     	; 0x1cb8 <vfprintf+0x142>
    1cae:	27 e0       	ldi	r18, 0x07	; 7
    1cb0:	4c e3       	ldi	r20, 0x3C	; 60
    1cb2:	e4 2e       	mov	r14, r20
    1cb4:	02 c0       	rjmp	.+4      	; 0x1cba <vfprintf+0x144>
    1cb6:	21 2f       	mov	r18, r17
    1cb8:	e1 2c       	mov	r14, r1
    1cba:	52 01       	movw	r10, r4
    1cbc:	44 e0       	ldi	r20, 0x04	; 4
    1cbe:	a4 0e       	add	r10, r20
    1cc0:	b1 1c       	adc	r11, r1
    1cc2:	f2 01       	movw	r30, r4
    1cc4:	60 81       	ld	r22, Z
    1cc6:	71 81       	ldd	r23, Z+1	; 0x01
    1cc8:	82 81       	ldd	r24, Z+2	; 0x02
    1cca:	93 81       	ldd	r25, Z+3	; 0x03
    1ccc:	0e 2d       	mov	r16, r14
    1cce:	a3 01       	movw	r20, r6
    1cd0:	0e 94 e1 11 	call	0x23c2	; 0x23c2 <__ftoa_engine>
    1cd4:	2c 01       	movw	r4, r24
    1cd6:	09 81       	ldd	r16, Y+1	; 0x01
    1cd8:	00 ff       	sbrs	r16, 0
    1cda:	02 c0       	rjmp	.+4      	; 0x1ce0 <vfprintf+0x16a>
    1cdc:	03 ff       	sbrs	r16, 3
    1cde:	07 c0       	rjmp	.+14     	; 0x1cee <vfprintf+0x178>
    1ce0:	31 fc       	sbrc	r3, 1
    1ce2:	08 c0       	rjmp	.+16     	; 0x1cf4 <vfprintf+0x17e>
    1ce4:	32 fe       	sbrs	r3, 2
    1ce6:	09 c0       	rjmp	.+18     	; 0x1cfa <vfprintf+0x184>
    1ce8:	30 e2       	ldi	r19, 0x20	; 32
    1cea:	23 2e       	mov	r2, r19
    1cec:	07 c0       	rjmp	.+14     	; 0x1cfc <vfprintf+0x186>
    1cee:	2d e2       	ldi	r18, 0x2D	; 45
    1cf0:	22 2e       	mov	r2, r18
    1cf2:	04 c0       	rjmp	.+8      	; 0x1cfc <vfprintf+0x186>
    1cf4:	9b e2       	ldi	r25, 0x2B	; 43
    1cf6:	29 2e       	mov	r2, r25
    1cf8:	01 c0       	rjmp	.+2      	; 0x1cfc <vfprintf+0x186>
    1cfa:	21 2c       	mov	r2, r1
    1cfc:	80 2f       	mov	r24, r16
    1cfe:	8c 70       	andi	r24, 0x0C	; 12
    1d00:	19 f0       	breq	.+6      	; 0x1d08 <vfprintf+0x192>
    1d02:	21 10       	cpse	r2, r1
    1d04:	68 c2       	rjmp	.+1232   	; 0x21d6 <vfprintf+0x660>
    1d06:	a8 c2       	rjmp	.+1360   	; 0x2258 <vfprintf+0x6e2>
    1d08:	37 fe       	sbrs	r3, 7
    1d0a:	0f c0       	rjmp	.+30     	; 0x1d2a <vfprintf+0x1b4>
    1d0c:	e4 0c       	add	r14, r4
    1d0e:	04 ff       	sbrs	r16, 4
    1d10:	04 c0       	rjmp	.+8      	; 0x1d1a <vfprintf+0x1a4>
    1d12:	8a 81       	ldd	r24, Y+2	; 0x02
    1d14:	81 33       	cpi	r24, 0x31	; 49
    1d16:	09 f4       	brne	.+2      	; 0x1d1a <vfprintf+0x1a4>
    1d18:	ea 94       	dec	r14
    1d1a:	1e 14       	cp	r1, r14
    1d1c:	74 f5       	brge	.+92     	; 0x1d7a <vfprintf+0x204>
    1d1e:	f8 e0       	ldi	r31, 0x08	; 8
    1d20:	fe 15       	cp	r31, r14
    1d22:	78 f5       	brcc	.+94     	; 0x1d82 <vfprintf+0x20c>
    1d24:	88 e0       	ldi	r24, 0x08	; 8
    1d26:	e8 2e       	mov	r14, r24
    1d28:	2c c0       	rjmp	.+88     	; 0x1d82 <vfprintf+0x20c>
    1d2a:	36 fc       	sbrc	r3, 6
    1d2c:	2a c0       	rjmp	.+84     	; 0x1d82 <vfprintf+0x20c>
    1d2e:	81 2f       	mov	r24, r17
    1d30:	90 e0       	ldi	r25, 0x00	; 0
    1d32:	84 15       	cp	r24, r4
    1d34:	95 05       	cpc	r25, r5
    1d36:	9c f0       	brlt	.+38     	; 0x1d5e <vfprintf+0x1e8>
    1d38:	2c ef       	ldi	r18, 0xFC	; 252
    1d3a:	42 16       	cp	r4, r18
    1d3c:	2f ef       	ldi	r18, 0xFF	; 255
    1d3e:	52 06       	cpc	r5, r18
    1d40:	74 f0       	brlt	.+28     	; 0x1d5e <vfprintf+0x1e8>
    1d42:	43 2d       	mov	r20, r3
    1d44:	40 68       	ori	r20, 0x80	; 128
    1d46:	34 2e       	mov	r3, r20
    1d48:	0a c0       	rjmp	.+20     	; 0x1d5e <vfprintf+0x1e8>
    1d4a:	e2 e0       	ldi	r30, 0x02	; 2
    1d4c:	f0 e0       	ldi	r31, 0x00	; 0
    1d4e:	ec 0f       	add	r30, r28
    1d50:	fd 1f       	adc	r31, r29
    1d52:	e1 0f       	add	r30, r17
    1d54:	f1 1d       	adc	r31, r1
    1d56:	80 81       	ld	r24, Z
    1d58:	80 33       	cpi	r24, 0x30	; 48
    1d5a:	19 f4       	brne	.+6      	; 0x1d62 <vfprintf+0x1ec>
    1d5c:	11 50       	subi	r17, 0x01	; 1
    1d5e:	11 11       	cpse	r17, r1
    1d60:	f4 cf       	rjmp	.-24     	; 0x1d4a <vfprintf+0x1d4>
    1d62:	37 fe       	sbrs	r3, 7
    1d64:	0e c0       	rjmp	.+28     	; 0x1d82 <vfprintf+0x20c>
    1d66:	ee 24       	eor	r14, r14
    1d68:	e3 94       	inc	r14
    1d6a:	e1 0e       	add	r14, r17
    1d6c:	81 2f       	mov	r24, r17
    1d6e:	90 e0       	ldi	r25, 0x00	; 0
    1d70:	48 16       	cp	r4, r24
    1d72:	59 06       	cpc	r5, r25
    1d74:	2c f4       	brge	.+10     	; 0x1d80 <vfprintf+0x20a>
    1d76:	14 19       	sub	r17, r4
    1d78:	04 c0       	rjmp	.+8      	; 0x1d82 <vfprintf+0x20c>
    1d7a:	ee 24       	eor	r14, r14
    1d7c:	e3 94       	inc	r14
    1d7e:	01 c0       	rjmp	.+2      	; 0x1d82 <vfprintf+0x20c>
    1d80:	10 e0       	ldi	r17, 0x00	; 0
    1d82:	37 fe       	sbrs	r3, 7
    1d84:	06 c0       	rjmp	.+12     	; 0x1d92 <vfprintf+0x21c>
    1d86:	14 14       	cp	r1, r4
    1d88:	15 04       	cpc	r1, r5
    1d8a:	34 f4       	brge	.+12     	; 0x1d98 <vfprintf+0x222>
    1d8c:	c2 01       	movw	r24, r4
    1d8e:	01 96       	adiw	r24, 0x01	; 1
    1d90:	05 c0       	rjmp	.+10     	; 0x1d9c <vfprintf+0x226>
    1d92:	85 e0       	ldi	r24, 0x05	; 5
    1d94:	90 e0       	ldi	r25, 0x00	; 0
    1d96:	02 c0       	rjmp	.+4      	; 0x1d9c <vfprintf+0x226>
    1d98:	81 e0       	ldi	r24, 0x01	; 1
    1d9a:	90 e0       	ldi	r25, 0x00	; 0
    1d9c:	21 10       	cpse	r2, r1
    1d9e:	01 96       	adiw	r24, 0x01	; 1
    1da0:	11 23       	and	r17, r17
    1da2:	31 f0       	breq	.+12     	; 0x1db0 <vfprintf+0x23a>
    1da4:	21 2f       	mov	r18, r17
    1da6:	30 e0       	ldi	r19, 0x00	; 0
    1da8:	2f 5f       	subi	r18, 0xFF	; 255
    1daa:	3f 4f       	sbci	r19, 0xFF	; 255
    1dac:	82 0f       	add	r24, r18
    1dae:	93 1f       	adc	r25, r19
    1db0:	2f 2d       	mov	r18, r15
    1db2:	30 e0       	ldi	r19, 0x00	; 0
    1db4:	82 17       	cp	r24, r18
    1db6:	93 07       	cpc	r25, r19
    1db8:	14 f4       	brge	.+4      	; 0x1dbe <vfprintf+0x248>
    1dba:	f8 1a       	sub	r15, r24
    1dbc:	01 c0       	rjmp	.+2      	; 0x1dc0 <vfprintf+0x24a>
    1dbe:	f1 2c       	mov	r15, r1
    1dc0:	83 2d       	mov	r24, r3
    1dc2:	89 70       	andi	r24, 0x09	; 9
    1dc4:	49 f4       	brne	.+18     	; 0x1dd8 <vfprintf+0x262>
    1dc6:	ff 20       	and	r15, r15
    1dc8:	39 f0       	breq	.+14     	; 0x1dd8 <vfprintf+0x262>
    1dca:	b6 01       	movw	r22, r12
    1dcc:	80 e2       	ldi	r24, 0x20	; 32
    1dce:	90 e0       	ldi	r25, 0x00	; 0
    1dd0:	0e 94 cf 12 	call	0x259e	; 0x259e <fputc>
    1dd4:	fa 94       	dec	r15
    1dd6:	f7 cf       	rjmp	.-18     	; 0x1dc6 <vfprintf+0x250>
    1dd8:	22 20       	and	r2, r2
    1dda:	29 f0       	breq	.+10     	; 0x1de6 <vfprintf+0x270>
    1ddc:	b6 01       	movw	r22, r12
    1dde:	82 2d       	mov	r24, r2
    1de0:	90 e0       	ldi	r25, 0x00	; 0
    1de2:	0e 94 cf 12 	call	0x259e	; 0x259e <fputc>
    1de6:	33 fc       	sbrc	r3, 3
    1de8:	09 c0       	rjmp	.+18     	; 0x1dfc <vfprintf+0x286>
    1dea:	ff 20       	and	r15, r15
    1dec:	39 f0       	breq	.+14     	; 0x1dfc <vfprintf+0x286>
    1dee:	b6 01       	movw	r22, r12
    1df0:	80 e3       	ldi	r24, 0x30	; 48
    1df2:	90 e0       	ldi	r25, 0x00	; 0
    1df4:	0e 94 cf 12 	call	0x259e	; 0x259e <fputc>
    1df8:	fa 94       	dec	r15
    1dfa:	f7 cf       	rjmp	.-18     	; 0x1dea <vfprintf+0x274>
    1dfc:	37 fe       	sbrs	r3, 7
    1dfe:	5a c0       	rjmp	.+180    	; 0x1eb4 <vfprintf+0x33e>
    1e00:	94 2d       	mov	r25, r4
    1e02:	85 2d       	mov	r24, r5
    1e04:	57 fe       	sbrs	r5, 7
    1e06:	02 c0       	rjmp	.+4      	; 0x1e0c <vfprintf+0x296>
    1e08:	90 e0       	ldi	r25, 0x00	; 0
    1e0a:	80 e0       	ldi	r24, 0x00	; 0
    1e0c:	29 2e       	mov	r2, r25
    1e0e:	38 2e       	mov	r3, r24
    1e10:	20 e0       	ldi	r18, 0x00	; 0
    1e12:	30 e0       	ldi	r19, 0x00	; 0
    1e14:	a2 01       	movw	r20, r4
    1e16:	4e 19       	sub	r20, r14
    1e18:	51 09       	sbc	r21, r1
    1e1a:	5d 87       	std	Y+13, r21	; 0x0d
    1e1c:	4c 87       	std	Y+12, r20	; 0x0c
    1e1e:	a2 01       	movw	r20, r4
    1e20:	42 19       	sub	r20, r2
    1e22:	53 09       	sbc	r21, r3
    1e24:	5f 87       	std	Y+15, r21	; 0x0f
    1e26:	4e 87       	std	Y+14, r20	; 0x0e
    1e28:	61 2f       	mov	r22, r17
    1e2a:	70 e0       	ldi	r23, 0x00	; 0
    1e2c:	44 27       	eor	r20, r20
    1e2e:	55 27       	eor	r21, r21
    1e30:	46 1b       	sub	r20, r22
    1e32:	57 0b       	sbc	r21, r23
    1e34:	59 8b       	std	Y+17, r21	; 0x11
    1e36:	48 8b       	std	Y+16, r20	; 0x10
    1e38:	5f ef       	ldi	r21, 0xFF	; 255
    1e3a:	25 16       	cp	r2, r21
    1e3c:	35 06       	cpc	r3, r21
    1e3e:	49 f4       	brne	.+18     	; 0x1e52 <vfprintf+0x2dc>
    1e40:	b6 01       	movw	r22, r12
    1e42:	8e e2       	ldi	r24, 0x2E	; 46
    1e44:	90 e0       	ldi	r25, 0x00	; 0
    1e46:	2a 8b       	std	Y+18, r18	; 0x12
    1e48:	3b 8b       	std	Y+19, r19	; 0x13
    1e4a:	0e 94 cf 12 	call	0x259e	; 0x259e <fputc>
    1e4e:	3b 89       	ldd	r19, Y+19	; 0x13
    1e50:	2a 89       	ldd	r18, Y+18	; 0x12
    1e52:	42 14       	cp	r4, r2
    1e54:	53 04       	cpc	r5, r3
    1e56:	6c f0       	brlt	.+26     	; 0x1e72 <vfprintf+0x2fc>
    1e58:	4c 85       	ldd	r20, Y+12	; 0x0c
    1e5a:	5d 85       	ldd	r21, Y+13	; 0x0d
    1e5c:	42 15       	cp	r20, r2
    1e5e:	53 05       	cpc	r21, r3
    1e60:	44 f4       	brge	.+16     	; 0x1e72 <vfprintf+0x2fc>
    1e62:	ee 85       	ldd	r30, Y+14	; 0x0e
    1e64:	ff 85       	ldd	r31, Y+15	; 0x0f
    1e66:	e2 0f       	add	r30, r18
    1e68:	f3 1f       	adc	r31, r19
    1e6a:	e6 0d       	add	r30, r6
    1e6c:	f7 1d       	adc	r31, r7
    1e6e:	81 81       	ldd	r24, Z+1	; 0x01
    1e70:	01 c0       	rjmp	.+2      	; 0x1e74 <vfprintf+0x2fe>
    1e72:	80 e3       	ldi	r24, 0x30	; 48
    1e74:	51 e0       	ldi	r21, 0x01	; 1
    1e76:	25 1a       	sub	r2, r21
    1e78:	31 08       	sbc	r3, r1
    1e7a:	2f 5f       	subi	r18, 0xFF	; 255
    1e7c:	3f 4f       	sbci	r19, 0xFF	; 255
    1e7e:	48 89       	ldd	r20, Y+16	; 0x10
    1e80:	59 89       	ldd	r21, Y+17	; 0x11
    1e82:	24 16       	cp	r2, r20
    1e84:	35 06       	cpc	r3, r21
    1e86:	4c f0       	brlt	.+18     	; 0x1e9a <vfprintf+0x324>
    1e88:	b6 01       	movw	r22, r12
    1e8a:	90 e0       	ldi	r25, 0x00	; 0
    1e8c:	2a 8b       	std	Y+18, r18	; 0x12
    1e8e:	3b 8b       	std	Y+19, r19	; 0x13
    1e90:	0e 94 cf 12 	call	0x259e	; 0x259e <fputc>
    1e94:	2a 89       	ldd	r18, Y+18	; 0x12
    1e96:	3b 89       	ldd	r19, Y+19	; 0x13
    1e98:	cf cf       	rjmp	.-98     	; 0x1e38 <vfprintf+0x2c2>
    1e9a:	24 14       	cp	r2, r4
    1e9c:	35 04       	cpc	r3, r5
    1e9e:	39 f4       	brne	.+14     	; 0x1eae <vfprintf+0x338>
    1ea0:	9a 81       	ldd	r25, Y+2	; 0x02
    1ea2:	96 33       	cpi	r25, 0x36	; 54
    1ea4:	18 f4       	brcc	.+6      	; 0x1eac <vfprintf+0x336>
    1ea6:	95 33       	cpi	r25, 0x35	; 53
    1ea8:	11 f4       	brne	.+4      	; 0x1eae <vfprintf+0x338>
    1eaa:	04 ff       	sbrs	r16, 4
    1eac:	81 e3       	ldi	r24, 0x31	; 49
    1eae:	b6 01       	movw	r22, r12
    1eb0:	90 e0       	ldi	r25, 0x00	; 0
    1eb2:	4b c0       	rjmp	.+150    	; 0x1f4a <vfprintf+0x3d4>
    1eb4:	8a 81       	ldd	r24, Y+2	; 0x02
    1eb6:	81 33       	cpi	r24, 0x31	; 49
    1eb8:	09 f0       	breq	.+2      	; 0x1ebc <vfprintf+0x346>
    1eba:	0f 7e       	andi	r16, 0xEF	; 239
    1ebc:	b6 01       	movw	r22, r12
    1ebe:	90 e0       	ldi	r25, 0x00	; 0
    1ec0:	0e 94 cf 12 	call	0x259e	; 0x259e <fputc>
    1ec4:	11 11       	cpse	r17, r1
    1ec6:	05 c0       	rjmp	.+10     	; 0x1ed2 <vfprintf+0x35c>
    1ec8:	34 fc       	sbrc	r3, 4
    1eca:	18 c0       	rjmp	.+48     	; 0x1efc <vfprintf+0x386>
    1ecc:	85 e6       	ldi	r24, 0x65	; 101
    1ece:	90 e0       	ldi	r25, 0x00	; 0
    1ed0:	17 c0       	rjmp	.+46     	; 0x1f00 <vfprintf+0x38a>
    1ed2:	b6 01       	movw	r22, r12
    1ed4:	8e e2       	ldi	r24, 0x2E	; 46
    1ed6:	90 e0       	ldi	r25, 0x00	; 0
    1ed8:	0e 94 cf 12 	call	0x259e	; 0x259e <fputc>
    1edc:	82 e0       	ldi	r24, 0x02	; 2
    1ede:	ee 24       	eor	r14, r14
    1ee0:	e3 94       	inc	r14
    1ee2:	e8 0e       	add	r14, r24
    1ee4:	f3 01       	movw	r30, r6
    1ee6:	e8 0f       	add	r30, r24
    1ee8:	f1 1d       	adc	r31, r1
    1eea:	80 81       	ld	r24, Z
    1eec:	b6 01       	movw	r22, r12
    1eee:	90 e0       	ldi	r25, 0x00	; 0
    1ef0:	0e 94 cf 12 	call	0x259e	; 0x259e <fputc>
    1ef4:	11 50       	subi	r17, 0x01	; 1
    1ef6:	8e 2d       	mov	r24, r14
    1ef8:	91 f7       	brne	.-28     	; 0x1ede <vfprintf+0x368>
    1efa:	e6 cf       	rjmp	.-52     	; 0x1ec8 <vfprintf+0x352>
    1efc:	85 e4       	ldi	r24, 0x45	; 69
    1efe:	90 e0       	ldi	r25, 0x00	; 0
    1f00:	b6 01       	movw	r22, r12
    1f02:	0e 94 cf 12 	call	0x259e	; 0x259e <fputc>
    1f06:	57 fc       	sbrc	r5, 7
    1f08:	05 c0       	rjmp	.+10     	; 0x1f14 <vfprintf+0x39e>
    1f0a:	41 14       	cp	r4, r1
    1f0c:	51 04       	cpc	r5, r1
    1f0e:	39 f4       	brne	.+14     	; 0x1f1e <vfprintf+0x3a8>
    1f10:	04 ff       	sbrs	r16, 4
    1f12:	05 c0       	rjmp	.+10     	; 0x1f1e <vfprintf+0x3a8>
    1f14:	51 94       	neg	r5
    1f16:	41 94       	neg	r4
    1f18:	51 08       	sbc	r5, r1
    1f1a:	8d e2       	ldi	r24, 0x2D	; 45
    1f1c:	01 c0       	rjmp	.+2      	; 0x1f20 <vfprintf+0x3aa>
    1f1e:	8b e2       	ldi	r24, 0x2B	; 43
    1f20:	b6 01       	movw	r22, r12
    1f22:	90 e0       	ldi	r25, 0x00	; 0
    1f24:	0e 94 cf 12 	call	0x259e	; 0x259e <fputc>
    1f28:	80 e3       	ldi	r24, 0x30	; 48
    1f2a:	9a e0       	ldi	r25, 0x0A	; 10
    1f2c:	49 16       	cp	r4, r25
    1f2e:	51 04       	cpc	r5, r1
    1f30:	2c f0       	brlt	.+10     	; 0x1f3c <vfprintf+0x3c6>
    1f32:	8f 5f       	subi	r24, 0xFF	; 255
    1f34:	5a e0       	ldi	r21, 0x0A	; 10
    1f36:	45 1a       	sub	r4, r21
    1f38:	51 08       	sbc	r5, r1
    1f3a:	f7 cf       	rjmp	.-18     	; 0x1f2a <vfprintf+0x3b4>
    1f3c:	b6 01       	movw	r22, r12
    1f3e:	90 e0       	ldi	r25, 0x00	; 0
    1f40:	0e 94 cf 12 	call	0x259e	; 0x259e <fputc>
    1f44:	b6 01       	movw	r22, r12
    1f46:	c2 01       	movw	r24, r4
    1f48:	c0 96       	adiw	r24, 0x30	; 48
    1f4a:	0e 94 cf 12 	call	0x259e	; 0x259e <fputc>
    1f4e:	57 c1       	rjmp	.+686    	; 0x21fe <vfprintf+0x688>
    1f50:	83 36       	cpi	r24, 0x63	; 99
    1f52:	31 f0       	breq	.+12     	; 0x1f60 <vfprintf+0x3ea>
    1f54:	83 37       	cpi	r24, 0x73	; 115
    1f56:	79 f0       	breq	.+30     	; 0x1f76 <vfprintf+0x400>
    1f58:	83 35       	cpi	r24, 0x53	; 83
    1f5a:	09 f0       	breq	.+2      	; 0x1f5e <vfprintf+0x3e8>
    1f5c:	58 c0       	rjmp	.+176    	; 0x200e <vfprintf+0x498>
    1f5e:	21 c0       	rjmp	.+66     	; 0x1fa2 <vfprintf+0x42c>
    1f60:	52 01       	movw	r10, r4
    1f62:	e2 e0       	ldi	r30, 0x02	; 2
    1f64:	ae 0e       	add	r10, r30
    1f66:	b1 1c       	adc	r11, r1
    1f68:	f2 01       	movw	r30, r4
    1f6a:	80 81       	ld	r24, Z
    1f6c:	89 83       	std	Y+1, r24	; 0x01
    1f6e:	01 e0       	ldi	r16, 0x01	; 1
    1f70:	10 e0       	ldi	r17, 0x00	; 0
    1f72:	23 01       	movw	r4, r6
    1f74:	14 c0       	rjmp	.+40     	; 0x1f9e <vfprintf+0x428>
    1f76:	52 01       	movw	r10, r4
    1f78:	f2 e0       	ldi	r31, 0x02	; 2
    1f7a:	af 0e       	add	r10, r31
    1f7c:	b1 1c       	adc	r11, r1
    1f7e:	f2 01       	movw	r30, r4
    1f80:	40 80       	ld	r4, Z
    1f82:	51 80       	ldd	r5, Z+1	; 0x01
    1f84:	26 ff       	sbrs	r18, 6
    1f86:	03 c0       	rjmp	.+6      	; 0x1f8e <vfprintf+0x418>
    1f88:	61 2f       	mov	r22, r17
    1f8a:	70 e0       	ldi	r23, 0x00	; 0
    1f8c:	02 c0       	rjmp	.+4      	; 0x1f92 <vfprintf+0x41c>
    1f8e:	6f ef       	ldi	r22, 0xFF	; 255
    1f90:	7f ef       	ldi	r23, 0xFF	; 255
    1f92:	c2 01       	movw	r24, r4
    1f94:	2a 8b       	std	Y+18, r18	; 0x12
    1f96:	0e 94 c4 12 	call	0x2588	; 0x2588 <strnlen>
    1f9a:	8c 01       	movw	r16, r24
    1f9c:	2a 89       	ldd	r18, Y+18	; 0x12
    1f9e:	2f 77       	andi	r18, 0x7F	; 127
    1fa0:	15 c0       	rjmp	.+42     	; 0x1fcc <vfprintf+0x456>
    1fa2:	52 01       	movw	r10, r4
    1fa4:	f2 e0       	ldi	r31, 0x02	; 2
    1fa6:	af 0e       	add	r10, r31
    1fa8:	b1 1c       	adc	r11, r1
    1faa:	f2 01       	movw	r30, r4
    1fac:	40 80       	ld	r4, Z
    1fae:	51 80       	ldd	r5, Z+1	; 0x01
    1fb0:	26 ff       	sbrs	r18, 6
    1fb2:	03 c0       	rjmp	.+6      	; 0x1fba <vfprintf+0x444>
    1fb4:	61 2f       	mov	r22, r17
    1fb6:	70 e0       	ldi	r23, 0x00	; 0
    1fb8:	02 c0       	rjmp	.+4      	; 0x1fbe <vfprintf+0x448>
    1fba:	6f ef       	ldi	r22, 0xFF	; 255
    1fbc:	7f ef       	ldi	r23, 0xFF	; 255
    1fbe:	c2 01       	movw	r24, r4
    1fc0:	2a 8b       	std	Y+18, r18	; 0x12
    1fc2:	0e 94 b9 12 	call	0x2572	; 0x2572 <strnlen_P>
    1fc6:	8c 01       	movw	r16, r24
    1fc8:	2a 89       	ldd	r18, Y+18	; 0x12
    1fca:	20 68       	ori	r18, 0x80	; 128
    1fcc:	32 2e       	mov	r3, r18
    1fce:	23 fd       	sbrc	r18, 3
    1fd0:	1a c0       	rjmp	.+52     	; 0x2006 <vfprintf+0x490>
    1fd2:	8f 2d       	mov	r24, r15
    1fd4:	90 e0       	ldi	r25, 0x00	; 0
    1fd6:	08 17       	cp	r16, r24
    1fd8:	19 07       	cpc	r17, r25
    1fda:	a8 f4       	brcc	.+42     	; 0x2006 <vfprintf+0x490>
    1fdc:	b6 01       	movw	r22, r12
    1fde:	80 e2       	ldi	r24, 0x20	; 32
    1fe0:	90 e0       	ldi	r25, 0x00	; 0
    1fe2:	0e 94 cf 12 	call	0x259e	; 0x259e <fputc>
    1fe6:	fa 94       	dec	r15
    1fe8:	f4 cf       	rjmp	.-24     	; 0x1fd2 <vfprintf+0x45c>
    1fea:	f2 01       	movw	r30, r4
    1fec:	37 fc       	sbrc	r3, 7
    1fee:	85 91       	lpm	r24, Z+
    1ff0:	37 fe       	sbrs	r3, 7
    1ff2:	81 91       	ld	r24, Z+
    1ff4:	2f 01       	movw	r4, r30
    1ff6:	b6 01       	movw	r22, r12
    1ff8:	90 e0       	ldi	r25, 0x00	; 0
    1ffa:	0e 94 cf 12 	call	0x259e	; 0x259e <fputc>
    1ffe:	f1 10       	cpse	r15, r1
    2000:	fa 94       	dec	r15
    2002:	01 50       	subi	r16, 0x01	; 1
    2004:	11 09       	sbc	r17, r1
    2006:	01 15       	cp	r16, r1
    2008:	11 05       	cpc	r17, r1
    200a:	79 f7       	brne	.-34     	; 0x1fea <vfprintf+0x474>
    200c:	f8 c0       	rjmp	.+496    	; 0x21fe <vfprintf+0x688>
    200e:	84 36       	cpi	r24, 0x64	; 100
    2010:	11 f0       	breq	.+4      	; 0x2016 <vfprintf+0x4a0>
    2012:	89 36       	cpi	r24, 0x69	; 105
    2014:	59 f5       	brne	.+86     	; 0x206c <vfprintf+0x4f6>
    2016:	52 01       	movw	r10, r4
    2018:	27 ff       	sbrs	r18, 7
    201a:	09 c0       	rjmp	.+18     	; 0x202e <vfprintf+0x4b8>
    201c:	f4 e0       	ldi	r31, 0x04	; 4
    201e:	af 0e       	add	r10, r31
    2020:	b1 1c       	adc	r11, r1
    2022:	f2 01       	movw	r30, r4
    2024:	60 81       	ld	r22, Z
    2026:	71 81       	ldd	r23, Z+1	; 0x01
    2028:	82 81       	ldd	r24, Z+2	; 0x02
    202a:	93 81       	ldd	r25, Z+3	; 0x03
    202c:	0a c0       	rjmp	.+20     	; 0x2042 <vfprintf+0x4cc>
    202e:	f2 e0       	ldi	r31, 0x02	; 2
    2030:	af 0e       	add	r10, r31
    2032:	b1 1c       	adc	r11, r1
    2034:	f2 01       	movw	r30, r4
    2036:	60 81       	ld	r22, Z
    2038:	71 81       	ldd	r23, Z+1	; 0x01
    203a:	07 2e       	mov	r0, r23
    203c:	00 0c       	add	r0, r0
    203e:	88 0b       	sbc	r24, r24
    2040:	99 0b       	sbc	r25, r25
    2042:	2f 76       	andi	r18, 0x6F	; 111
    2044:	32 2e       	mov	r3, r18
    2046:	97 ff       	sbrs	r25, 7
    2048:	09 c0       	rjmp	.+18     	; 0x205c <vfprintf+0x4e6>
    204a:	90 95       	com	r25
    204c:	80 95       	com	r24
    204e:	70 95       	com	r23
    2050:	61 95       	neg	r22
    2052:	7f 4f       	sbci	r23, 0xFF	; 255
    2054:	8f 4f       	sbci	r24, 0xFF	; 255
    2056:	9f 4f       	sbci	r25, 0xFF	; 255
    2058:	20 68       	ori	r18, 0x80	; 128
    205a:	32 2e       	mov	r3, r18
    205c:	2a e0       	ldi	r18, 0x0A	; 10
    205e:	30 e0       	ldi	r19, 0x00	; 0
    2060:	a3 01       	movw	r20, r6
    2062:	0e 94 1d 13 	call	0x263a	; 0x263a <__ultoa_invert>
    2066:	e8 2e       	mov	r14, r24
    2068:	e6 18       	sub	r14, r6
    206a:	3f c0       	rjmp	.+126    	; 0x20ea <vfprintf+0x574>
    206c:	02 2f       	mov	r16, r18
    206e:	85 37       	cpi	r24, 0x75	; 117
    2070:	21 f4       	brne	.+8      	; 0x207a <vfprintf+0x504>
    2072:	0f 7e       	andi	r16, 0xEF	; 239
    2074:	2a e0       	ldi	r18, 0x0A	; 10
    2076:	30 e0       	ldi	r19, 0x00	; 0
    2078:	1d c0       	rjmp	.+58     	; 0x20b4 <vfprintf+0x53e>
    207a:	09 7f       	andi	r16, 0xF9	; 249
    207c:	8f 36       	cpi	r24, 0x6F	; 111
    207e:	91 f0       	breq	.+36     	; 0x20a4 <vfprintf+0x52e>
    2080:	18 f4       	brcc	.+6      	; 0x2088 <vfprintf+0x512>
    2082:	88 35       	cpi	r24, 0x58	; 88
    2084:	59 f0       	breq	.+22     	; 0x209c <vfprintf+0x526>
    2086:	c5 c0       	rjmp	.+394    	; 0x2212 <vfprintf+0x69c>
    2088:	80 37       	cpi	r24, 0x70	; 112
    208a:	19 f0       	breq	.+6      	; 0x2092 <vfprintf+0x51c>
    208c:	88 37       	cpi	r24, 0x78	; 120
    208e:	11 f0       	breq	.+4      	; 0x2094 <vfprintf+0x51e>
    2090:	c0 c0       	rjmp	.+384    	; 0x2212 <vfprintf+0x69c>
    2092:	00 61       	ori	r16, 0x10	; 16
    2094:	04 ff       	sbrs	r16, 4
    2096:	09 c0       	rjmp	.+18     	; 0x20aa <vfprintf+0x534>
    2098:	04 60       	ori	r16, 0x04	; 4
    209a:	07 c0       	rjmp	.+14     	; 0x20aa <vfprintf+0x534>
    209c:	24 ff       	sbrs	r18, 4
    209e:	08 c0       	rjmp	.+16     	; 0x20b0 <vfprintf+0x53a>
    20a0:	06 60       	ori	r16, 0x06	; 6
    20a2:	06 c0       	rjmp	.+12     	; 0x20b0 <vfprintf+0x53a>
    20a4:	28 e0       	ldi	r18, 0x08	; 8
    20a6:	30 e0       	ldi	r19, 0x00	; 0
    20a8:	05 c0       	rjmp	.+10     	; 0x20b4 <vfprintf+0x53e>
    20aa:	20 e1       	ldi	r18, 0x10	; 16
    20ac:	30 e0       	ldi	r19, 0x00	; 0
    20ae:	02 c0       	rjmp	.+4      	; 0x20b4 <vfprintf+0x53e>
    20b0:	20 e1       	ldi	r18, 0x10	; 16
    20b2:	32 e0       	ldi	r19, 0x02	; 2
    20b4:	52 01       	movw	r10, r4
    20b6:	07 ff       	sbrs	r16, 7
    20b8:	09 c0       	rjmp	.+18     	; 0x20cc <vfprintf+0x556>
    20ba:	f4 e0       	ldi	r31, 0x04	; 4
    20bc:	af 0e       	add	r10, r31
    20be:	b1 1c       	adc	r11, r1
    20c0:	f2 01       	movw	r30, r4
    20c2:	60 81       	ld	r22, Z
    20c4:	71 81       	ldd	r23, Z+1	; 0x01
    20c6:	82 81       	ldd	r24, Z+2	; 0x02
    20c8:	93 81       	ldd	r25, Z+3	; 0x03
    20ca:	08 c0       	rjmp	.+16     	; 0x20dc <vfprintf+0x566>
    20cc:	f2 e0       	ldi	r31, 0x02	; 2
    20ce:	af 0e       	add	r10, r31
    20d0:	b1 1c       	adc	r11, r1
    20d2:	f2 01       	movw	r30, r4
    20d4:	60 81       	ld	r22, Z
    20d6:	71 81       	ldd	r23, Z+1	; 0x01
    20d8:	80 e0       	ldi	r24, 0x00	; 0
    20da:	90 e0       	ldi	r25, 0x00	; 0
    20dc:	a3 01       	movw	r20, r6
    20de:	0e 94 1d 13 	call	0x263a	; 0x263a <__ultoa_invert>
    20e2:	e8 2e       	mov	r14, r24
    20e4:	e6 18       	sub	r14, r6
    20e6:	0f 77       	andi	r16, 0x7F	; 127
    20e8:	30 2e       	mov	r3, r16
    20ea:	36 fe       	sbrs	r3, 6
    20ec:	0b c0       	rjmp	.+22     	; 0x2104 <vfprintf+0x58e>
    20ee:	33 2d       	mov	r19, r3
    20f0:	3e 7f       	andi	r19, 0xFE	; 254
    20f2:	e1 16       	cp	r14, r17
    20f4:	50 f4       	brcc	.+20     	; 0x210a <vfprintf+0x594>
    20f6:	34 fe       	sbrs	r3, 4
    20f8:	0a c0       	rjmp	.+20     	; 0x210e <vfprintf+0x598>
    20fa:	32 fc       	sbrc	r3, 2
    20fc:	08 c0       	rjmp	.+16     	; 0x210e <vfprintf+0x598>
    20fe:	33 2d       	mov	r19, r3
    2100:	3e 7e       	andi	r19, 0xEE	; 238
    2102:	05 c0       	rjmp	.+10     	; 0x210e <vfprintf+0x598>
    2104:	0e 2d       	mov	r16, r14
    2106:	33 2d       	mov	r19, r3
    2108:	03 c0       	rjmp	.+6      	; 0x2110 <vfprintf+0x59a>
    210a:	0e 2d       	mov	r16, r14
    210c:	01 c0       	rjmp	.+2      	; 0x2110 <vfprintf+0x59a>
    210e:	01 2f       	mov	r16, r17
    2110:	34 ff       	sbrs	r19, 4
    2112:	0c c0       	rjmp	.+24     	; 0x212c <vfprintf+0x5b6>
    2114:	fe 01       	movw	r30, r28
    2116:	ee 0d       	add	r30, r14
    2118:	f1 1d       	adc	r31, r1
    211a:	80 81       	ld	r24, Z
    211c:	80 33       	cpi	r24, 0x30	; 48
    211e:	11 f4       	brne	.+4      	; 0x2124 <vfprintf+0x5ae>
    2120:	39 7e       	andi	r19, 0xE9	; 233
    2122:	08 c0       	rjmp	.+16     	; 0x2134 <vfprintf+0x5be>
    2124:	32 ff       	sbrs	r19, 2
    2126:	05 c0       	rjmp	.+10     	; 0x2132 <vfprintf+0x5bc>
    2128:	0e 5f       	subi	r16, 0xFE	; 254
    212a:	04 c0       	rjmp	.+8      	; 0x2134 <vfprintf+0x5be>
    212c:	83 2f       	mov	r24, r19
    212e:	86 78       	andi	r24, 0x86	; 134
    2130:	09 f0       	breq	.+2      	; 0x2134 <vfprintf+0x5be>
    2132:	0f 5f       	subi	r16, 0xFF	; 255
    2134:	33 fd       	sbrc	r19, 3
    2136:	13 c0       	rjmp	.+38     	; 0x215e <vfprintf+0x5e8>
    2138:	30 ff       	sbrs	r19, 0
    213a:	06 c0       	rjmp	.+12     	; 0x2148 <vfprintf+0x5d2>
    213c:	1e 2d       	mov	r17, r14
    213e:	0f 15       	cp	r16, r15
    2140:	18 f4       	brcc	.+6      	; 0x2148 <vfprintf+0x5d2>
    2142:	1f 0d       	add	r17, r15
    2144:	10 1b       	sub	r17, r16
    2146:	0f 2d       	mov	r16, r15
    2148:	0f 15       	cp	r16, r15
    214a:	68 f4       	brcc	.+26     	; 0x2166 <vfprintf+0x5f0>
    214c:	b6 01       	movw	r22, r12
    214e:	80 e2       	ldi	r24, 0x20	; 32
    2150:	90 e0       	ldi	r25, 0x00	; 0
    2152:	3b 8b       	std	Y+19, r19	; 0x13
    2154:	0e 94 cf 12 	call	0x259e	; 0x259e <fputc>
    2158:	0f 5f       	subi	r16, 0xFF	; 255
    215a:	3b 89       	ldd	r19, Y+19	; 0x13
    215c:	f5 cf       	rjmp	.-22     	; 0x2148 <vfprintf+0x5d2>
    215e:	0f 15       	cp	r16, r15
    2160:	10 f4       	brcc	.+4      	; 0x2166 <vfprintf+0x5f0>
    2162:	f0 1a       	sub	r15, r16
    2164:	01 c0       	rjmp	.+2      	; 0x2168 <vfprintf+0x5f2>
    2166:	f1 2c       	mov	r15, r1
    2168:	34 ff       	sbrs	r19, 4
    216a:	12 c0       	rjmp	.+36     	; 0x2190 <vfprintf+0x61a>
    216c:	b6 01       	movw	r22, r12
    216e:	80 e3       	ldi	r24, 0x30	; 48
    2170:	90 e0       	ldi	r25, 0x00	; 0
    2172:	3b 8b       	std	Y+19, r19	; 0x13
    2174:	0e 94 cf 12 	call	0x259e	; 0x259e <fputc>
    2178:	3b 89       	ldd	r19, Y+19	; 0x13
    217a:	32 ff       	sbrs	r19, 2
    217c:	17 c0       	rjmp	.+46     	; 0x21ac <vfprintf+0x636>
    217e:	31 fd       	sbrc	r19, 1
    2180:	03 c0       	rjmp	.+6      	; 0x2188 <vfprintf+0x612>
    2182:	88 e7       	ldi	r24, 0x78	; 120
    2184:	90 e0       	ldi	r25, 0x00	; 0
    2186:	02 c0       	rjmp	.+4      	; 0x218c <vfprintf+0x616>
    2188:	88 e5       	ldi	r24, 0x58	; 88
    218a:	90 e0       	ldi	r25, 0x00	; 0
    218c:	b6 01       	movw	r22, r12
    218e:	0c c0       	rjmp	.+24     	; 0x21a8 <vfprintf+0x632>
    2190:	83 2f       	mov	r24, r19
    2192:	86 78       	andi	r24, 0x86	; 134
    2194:	59 f0       	breq	.+22     	; 0x21ac <vfprintf+0x636>
    2196:	31 ff       	sbrs	r19, 1
    2198:	02 c0       	rjmp	.+4      	; 0x219e <vfprintf+0x628>
    219a:	8b e2       	ldi	r24, 0x2B	; 43
    219c:	01 c0       	rjmp	.+2      	; 0x21a0 <vfprintf+0x62a>
    219e:	80 e2       	ldi	r24, 0x20	; 32
    21a0:	37 fd       	sbrc	r19, 7
    21a2:	8d e2       	ldi	r24, 0x2D	; 45
    21a4:	b6 01       	movw	r22, r12
    21a6:	90 e0       	ldi	r25, 0x00	; 0
    21a8:	0e 94 cf 12 	call	0x259e	; 0x259e <fputc>
    21ac:	e1 16       	cp	r14, r17
    21ae:	38 f4       	brcc	.+14     	; 0x21be <vfprintf+0x648>
    21b0:	b6 01       	movw	r22, r12
    21b2:	80 e3       	ldi	r24, 0x30	; 48
    21b4:	90 e0       	ldi	r25, 0x00	; 0
    21b6:	0e 94 cf 12 	call	0x259e	; 0x259e <fputc>
    21ba:	11 50       	subi	r17, 0x01	; 1
    21bc:	f7 cf       	rjmp	.-18     	; 0x21ac <vfprintf+0x636>
    21be:	ea 94       	dec	r14
    21c0:	f3 01       	movw	r30, r6
    21c2:	ee 0d       	add	r30, r14
    21c4:	f1 1d       	adc	r31, r1
    21c6:	80 81       	ld	r24, Z
    21c8:	b6 01       	movw	r22, r12
    21ca:	90 e0       	ldi	r25, 0x00	; 0
    21cc:	0e 94 cf 12 	call	0x259e	; 0x259e <fputc>
    21d0:	e1 10       	cpse	r14, r1
    21d2:	f5 cf       	rjmp	.-22     	; 0x21be <vfprintf+0x648>
    21d4:	14 c0       	rjmp	.+40     	; 0x21fe <vfprintf+0x688>
    21d6:	f4 e0       	ldi	r31, 0x04	; 4
    21d8:	ff 15       	cp	r31, r15
    21da:	58 f5       	brcc	.+86     	; 0x2232 <vfprintf+0x6bc>
    21dc:	84 e0       	ldi	r24, 0x04	; 4
    21de:	f8 1a       	sub	r15, r24
    21e0:	33 fe       	sbrs	r3, 3
    21e2:	1e c0       	rjmp	.+60     	; 0x2220 <vfprintf+0x6aa>
    21e4:	21 10       	cpse	r2, r1
    21e6:	26 c0       	rjmp	.+76     	; 0x2234 <vfprintf+0x6be>
    21e8:	03 ff       	sbrs	r16, 3
    21ea:	2a c0       	rjmp	.+84     	; 0x2240 <vfprintf+0x6ca>
    21ec:	08 e1       	ldi	r16, 0x18	; 24
    21ee:	11 e0       	ldi	r17, 0x01	; 1
    21f0:	f3 2d       	mov	r31, r3
    21f2:	f0 71       	andi	r31, 0x10	; 16
    21f4:	3f 2e       	mov	r3, r31
    21f6:	f8 01       	movw	r30, r16
    21f8:	84 91       	lpm	r24, Z
    21fa:	81 11       	cpse	r24, r1
    21fc:	24 c0       	rjmp	.+72     	; 0x2246 <vfprintf+0x6d0>
    21fe:	ff 20       	and	r15, r15
    2200:	09 f4       	brne	.+2      	; 0x2204 <vfprintf+0x68e>
    2202:	e5 cc       	rjmp	.-1590   	; 0x1bce <vfprintf+0x58>
    2204:	b6 01       	movw	r22, r12
    2206:	80 e2       	ldi	r24, 0x20	; 32
    2208:	90 e0       	ldi	r25, 0x00	; 0
    220a:	0e 94 cf 12 	call	0x259e	; 0x259e <fputc>
    220e:	fa 94       	dec	r15
    2210:	f6 cf       	rjmp	.-20     	; 0x21fe <vfprintf+0x688>
    2212:	f6 01       	movw	r30, r12
    2214:	86 81       	ldd	r24, Z+6	; 0x06
    2216:	97 81       	ldd	r25, Z+7	; 0x07
    2218:	26 c0       	rjmp	.+76     	; 0x2266 <vfprintf+0x6f0>
    221a:	8f ef       	ldi	r24, 0xFF	; 255
    221c:	9f ef       	ldi	r25, 0xFF	; 255
    221e:	23 c0       	rjmp	.+70     	; 0x2266 <vfprintf+0x6f0>
    2220:	b6 01       	movw	r22, r12
    2222:	80 e2       	ldi	r24, 0x20	; 32
    2224:	90 e0       	ldi	r25, 0x00	; 0
    2226:	0e 94 cf 12 	call	0x259e	; 0x259e <fputc>
    222a:	fa 94       	dec	r15
    222c:	f1 10       	cpse	r15, r1
    222e:	f8 cf       	rjmp	.-16     	; 0x2220 <vfprintf+0x6aa>
    2230:	d9 cf       	rjmp	.-78     	; 0x21e4 <vfprintf+0x66e>
    2232:	f1 2c       	mov	r15, r1
    2234:	b6 01       	movw	r22, r12
    2236:	82 2d       	mov	r24, r2
    2238:	90 e0       	ldi	r25, 0x00	; 0
    223a:	0e 94 cf 12 	call	0x259e	; 0x259e <fputc>
    223e:	d4 cf       	rjmp	.-88     	; 0x21e8 <vfprintf+0x672>
    2240:	0c e1       	ldi	r16, 0x1C	; 28
    2242:	11 e0       	ldi	r17, 0x01	; 1
    2244:	d5 cf       	rjmp	.-86     	; 0x21f0 <vfprintf+0x67a>
    2246:	31 10       	cpse	r3, r1
    2248:	80 52       	subi	r24, 0x20	; 32
    224a:	b6 01       	movw	r22, r12
    224c:	90 e0       	ldi	r25, 0x00	; 0
    224e:	0e 94 cf 12 	call	0x259e	; 0x259e <fputc>
    2252:	0f 5f       	subi	r16, 0xFF	; 255
    2254:	1f 4f       	sbci	r17, 0xFF	; 255
    2256:	cf cf       	rjmp	.-98     	; 0x21f6 <vfprintf+0x680>
    2258:	23 e0       	ldi	r18, 0x03	; 3
    225a:	2f 15       	cp	r18, r15
    225c:	10 f4       	brcc	.+4      	; 0x2262 <vfprintf+0x6ec>
    225e:	83 e0       	ldi	r24, 0x03	; 3
    2260:	be cf       	rjmp	.-132    	; 0x21de <vfprintf+0x668>
    2262:	f1 2c       	mov	r15, r1
    2264:	c1 cf       	rjmp	.-126    	; 0x21e8 <vfprintf+0x672>
    2266:	63 96       	adiw	r28, 0x13	; 19
    2268:	e2 e1       	ldi	r30, 0x12	; 18
    226a:	0c 94 b7 11 	jmp	0x236e	; 0x236e <__epilogue_restores__>

0000226e <__mulsi3>:
    226e:	db 01       	movw	r26, r22
    2270:	8f 93       	push	r24
    2272:	9f 93       	push	r25
    2274:	0e 94 88 11 	call	0x2310	; 0x2310 <__muluhisi3>
    2278:	bf 91       	pop	r27
    227a:	af 91       	pop	r26
    227c:	a2 9f       	mul	r26, r18
    227e:	80 0d       	add	r24, r0
    2280:	91 1d       	adc	r25, r1
    2282:	a3 9f       	mul	r26, r19
    2284:	90 0d       	add	r25, r0
    2286:	b2 9f       	mul	r27, r18
    2288:	90 0d       	add	r25, r0
    228a:	11 24       	eor	r1, r1
    228c:	08 95       	ret

0000228e <__udivmodsi4>:
    228e:	a1 e2       	ldi	r26, 0x21	; 33
    2290:	1a 2e       	mov	r1, r26
    2292:	aa 1b       	sub	r26, r26
    2294:	bb 1b       	sub	r27, r27
    2296:	fd 01       	movw	r30, r26
    2298:	0d c0       	rjmp	.+26     	; 0x22b4 <__udivmodsi4_ep>

0000229a <__udivmodsi4_loop>:
    229a:	aa 1f       	adc	r26, r26
    229c:	bb 1f       	adc	r27, r27
    229e:	ee 1f       	adc	r30, r30
    22a0:	ff 1f       	adc	r31, r31
    22a2:	a2 17       	cp	r26, r18
    22a4:	b3 07       	cpc	r27, r19
    22a6:	e4 07       	cpc	r30, r20
    22a8:	f5 07       	cpc	r31, r21
    22aa:	20 f0       	brcs	.+8      	; 0x22b4 <__udivmodsi4_ep>
    22ac:	a2 1b       	sub	r26, r18
    22ae:	b3 0b       	sbc	r27, r19
    22b0:	e4 0b       	sbc	r30, r20
    22b2:	f5 0b       	sbc	r31, r21

000022b4 <__udivmodsi4_ep>:
    22b4:	66 1f       	adc	r22, r22
    22b6:	77 1f       	adc	r23, r23
    22b8:	88 1f       	adc	r24, r24
    22ba:	99 1f       	adc	r25, r25
    22bc:	1a 94       	dec	r1
    22be:	69 f7       	brne	.-38     	; 0x229a <__udivmodsi4_loop>
    22c0:	60 95       	com	r22
    22c2:	70 95       	com	r23
    22c4:	80 95       	com	r24
    22c6:	90 95       	com	r25
    22c8:	9b 01       	movw	r18, r22
    22ca:	ac 01       	movw	r20, r24
    22cc:	bd 01       	movw	r22, r26
    22ce:	cf 01       	movw	r24, r30
    22d0:	08 95       	ret

000022d2 <__divmodsi4>:
    22d2:	05 2e       	mov	r0, r21
    22d4:	97 fb       	bst	r25, 7
    22d6:	1e f4       	brtc	.+6      	; 0x22de <__divmodsi4+0xc>
    22d8:	00 94       	com	r0
    22da:	0e 94 80 11 	call	0x2300	; 0x2300 <__negsi2>
    22de:	57 fd       	sbrc	r21, 7
    22e0:	07 d0       	rcall	.+14     	; 0x22f0 <__divmodsi4_neg2>
    22e2:	0e 94 47 11 	call	0x228e	; 0x228e <__udivmodsi4>
    22e6:	07 fc       	sbrc	r0, 7
    22e8:	03 d0       	rcall	.+6      	; 0x22f0 <__divmodsi4_neg2>
    22ea:	4e f4       	brtc	.+18     	; 0x22fe <__divmodsi4_exit>
    22ec:	0c 94 80 11 	jmp	0x2300	; 0x2300 <__negsi2>

000022f0 <__divmodsi4_neg2>:
    22f0:	50 95       	com	r21
    22f2:	40 95       	com	r20
    22f4:	30 95       	com	r19
    22f6:	21 95       	neg	r18
    22f8:	3f 4f       	sbci	r19, 0xFF	; 255
    22fa:	4f 4f       	sbci	r20, 0xFF	; 255
    22fc:	5f 4f       	sbci	r21, 0xFF	; 255

000022fe <__divmodsi4_exit>:
    22fe:	08 95       	ret

00002300 <__negsi2>:
    2300:	90 95       	com	r25
    2302:	80 95       	com	r24
    2304:	70 95       	com	r23
    2306:	61 95       	neg	r22
    2308:	7f 4f       	sbci	r23, 0xFF	; 255
    230a:	8f 4f       	sbci	r24, 0xFF	; 255
    230c:	9f 4f       	sbci	r25, 0xFF	; 255
    230e:	08 95       	ret

00002310 <__muluhisi3>:
    2310:	0e 94 d2 11 	call	0x23a4	; 0x23a4 <__umulhisi3>
    2314:	a5 9f       	mul	r26, r21
    2316:	90 0d       	add	r25, r0
    2318:	b4 9f       	mul	r27, r20
    231a:	90 0d       	add	r25, r0
    231c:	a4 9f       	mul	r26, r20
    231e:	80 0d       	add	r24, r0
    2320:	91 1d       	adc	r25, r1
    2322:	11 24       	eor	r1, r1
    2324:	08 95       	ret

00002326 <__mulshisi3>:
    2326:	b7 ff       	sbrs	r27, 7
    2328:	0c 94 88 11 	jmp	0x2310	; 0x2310 <__muluhisi3>

0000232c <__mulohisi3>:
    232c:	0e 94 88 11 	call	0x2310	; 0x2310 <__muluhisi3>
    2330:	82 1b       	sub	r24, r18
    2332:	93 0b       	sbc	r25, r19
    2334:	08 95       	ret

00002336 <__prologue_saves__>:
    2336:	2f 92       	push	r2
    2338:	3f 92       	push	r3
    233a:	4f 92       	push	r4
    233c:	5f 92       	push	r5
    233e:	6f 92       	push	r6
    2340:	7f 92       	push	r7
    2342:	8f 92       	push	r8
    2344:	9f 92       	push	r9
    2346:	af 92       	push	r10
    2348:	bf 92       	push	r11
    234a:	cf 92       	push	r12
    234c:	df 92       	push	r13
    234e:	ef 92       	push	r14
    2350:	ff 92       	push	r15
    2352:	0f 93       	push	r16
    2354:	1f 93       	push	r17
    2356:	cf 93       	push	r28
    2358:	df 93       	push	r29
    235a:	cd b7       	in	r28, 0x3d	; 61
    235c:	de b7       	in	r29, 0x3e	; 62
    235e:	ca 1b       	sub	r28, r26
    2360:	db 0b       	sbc	r29, r27
    2362:	0f b6       	in	r0, 0x3f	; 63
    2364:	f8 94       	cli
    2366:	de bf       	out	0x3e, r29	; 62
    2368:	0f be       	out	0x3f, r0	; 63
    236a:	cd bf       	out	0x3d, r28	; 61
    236c:	09 94       	ijmp

0000236e <__epilogue_restores__>:
    236e:	2a 88       	ldd	r2, Y+18	; 0x12
    2370:	39 88       	ldd	r3, Y+17	; 0x11
    2372:	48 88       	ldd	r4, Y+16	; 0x10
    2374:	5f 84       	ldd	r5, Y+15	; 0x0f
    2376:	6e 84       	ldd	r6, Y+14	; 0x0e
    2378:	7d 84       	ldd	r7, Y+13	; 0x0d
    237a:	8c 84       	ldd	r8, Y+12	; 0x0c
    237c:	9b 84       	ldd	r9, Y+11	; 0x0b
    237e:	aa 84       	ldd	r10, Y+10	; 0x0a
    2380:	b9 84       	ldd	r11, Y+9	; 0x09
    2382:	c8 84       	ldd	r12, Y+8	; 0x08
    2384:	df 80       	ldd	r13, Y+7	; 0x07
    2386:	ee 80       	ldd	r14, Y+6	; 0x06
    2388:	fd 80       	ldd	r15, Y+5	; 0x05
    238a:	0c 81       	ldd	r16, Y+4	; 0x04
    238c:	1b 81       	ldd	r17, Y+3	; 0x03
    238e:	aa 81       	ldd	r26, Y+2	; 0x02
    2390:	b9 81       	ldd	r27, Y+1	; 0x01
    2392:	ce 0f       	add	r28, r30
    2394:	d1 1d       	adc	r29, r1
    2396:	0f b6       	in	r0, 0x3f	; 63
    2398:	f8 94       	cli
    239a:	de bf       	out	0x3e, r29	; 62
    239c:	0f be       	out	0x3f, r0	; 63
    239e:	cd bf       	out	0x3d, r28	; 61
    23a0:	ed 01       	movw	r28, r26
    23a2:	08 95       	ret

000023a4 <__umulhisi3>:
    23a4:	a2 9f       	mul	r26, r18
    23a6:	b0 01       	movw	r22, r0
    23a8:	b3 9f       	mul	r27, r19
    23aa:	c0 01       	movw	r24, r0
    23ac:	a3 9f       	mul	r26, r19
    23ae:	70 0d       	add	r23, r0
    23b0:	81 1d       	adc	r24, r1
    23b2:	11 24       	eor	r1, r1
    23b4:	91 1d       	adc	r25, r1
    23b6:	b2 9f       	mul	r27, r18
    23b8:	70 0d       	add	r23, r0
    23ba:	81 1d       	adc	r24, r1
    23bc:	11 24       	eor	r1, r1
    23be:	91 1d       	adc	r25, r1
    23c0:	08 95       	ret

000023c2 <__ftoa_engine>:
    23c2:	28 30       	cpi	r18, 0x08	; 8
    23c4:	08 f0       	brcs	.+2      	; 0x23c8 <__ftoa_engine+0x6>
    23c6:	27 e0       	ldi	r18, 0x07	; 7
    23c8:	33 27       	eor	r19, r19
    23ca:	da 01       	movw	r26, r20
    23cc:	99 0f       	add	r25, r25
    23ce:	31 1d       	adc	r19, r1
    23d0:	87 fd       	sbrc	r24, 7
    23d2:	91 60       	ori	r25, 0x01	; 1
    23d4:	00 96       	adiw	r24, 0x00	; 0
    23d6:	61 05       	cpc	r22, r1
    23d8:	71 05       	cpc	r23, r1
    23da:	39 f4       	brne	.+14     	; 0x23ea <__ftoa_engine+0x28>
    23dc:	32 60       	ori	r19, 0x02	; 2
    23de:	2e 5f       	subi	r18, 0xFE	; 254
    23e0:	3d 93       	st	X+, r19
    23e2:	30 e3       	ldi	r19, 0x30	; 48
    23e4:	2a 95       	dec	r18
    23e6:	e1 f7       	brne	.-8      	; 0x23e0 <__ftoa_engine+0x1e>
    23e8:	08 95       	ret
    23ea:	9f 3f       	cpi	r25, 0xFF	; 255
    23ec:	30 f0       	brcs	.+12     	; 0x23fa <__ftoa_engine+0x38>
    23ee:	80 38       	cpi	r24, 0x80	; 128
    23f0:	71 05       	cpc	r23, r1
    23f2:	61 05       	cpc	r22, r1
    23f4:	09 f0       	breq	.+2      	; 0x23f8 <__ftoa_engine+0x36>
    23f6:	3c 5f       	subi	r19, 0xFC	; 252
    23f8:	3c 5f       	subi	r19, 0xFC	; 252
    23fa:	3d 93       	st	X+, r19
    23fc:	91 30       	cpi	r25, 0x01	; 1
    23fe:	08 f0       	brcs	.+2      	; 0x2402 <__ftoa_engine+0x40>
    2400:	80 68       	ori	r24, 0x80	; 128
    2402:	91 1d       	adc	r25, r1
    2404:	df 93       	push	r29
    2406:	cf 93       	push	r28
    2408:	1f 93       	push	r17
    240a:	0f 93       	push	r16
    240c:	ff 92       	push	r15
    240e:	ef 92       	push	r14
    2410:	19 2f       	mov	r17, r25
    2412:	98 7f       	andi	r25, 0xF8	; 248
    2414:	96 95       	lsr	r25
    2416:	e9 2f       	mov	r30, r25
    2418:	96 95       	lsr	r25
    241a:	96 95       	lsr	r25
    241c:	e9 0f       	add	r30, r25
    241e:	ff 27       	eor	r31, r31
    2420:	e6 58       	subi	r30, 0x86	; 134
    2422:	fe 4f       	sbci	r31, 0xFE	; 254
    2424:	99 27       	eor	r25, r25
    2426:	33 27       	eor	r19, r19
    2428:	ee 24       	eor	r14, r14
    242a:	ff 24       	eor	r15, r15
    242c:	a7 01       	movw	r20, r14
    242e:	e7 01       	movw	r28, r14
    2430:	05 90       	lpm	r0, Z+
    2432:	08 94       	sec
    2434:	07 94       	ror	r0
    2436:	28 f4       	brcc	.+10     	; 0x2442 <__ftoa_engine+0x80>
    2438:	36 0f       	add	r19, r22
    243a:	e7 1e       	adc	r14, r23
    243c:	f8 1e       	adc	r15, r24
    243e:	49 1f       	adc	r20, r25
    2440:	51 1d       	adc	r21, r1
    2442:	66 0f       	add	r22, r22
    2444:	77 1f       	adc	r23, r23
    2446:	88 1f       	adc	r24, r24
    2448:	99 1f       	adc	r25, r25
    244a:	06 94       	lsr	r0
    244c:	a1 f7       	brne	.-24     	; 0x2436 <__ftoa_engine+0x74>
    244e:	05 90       	lpm	r0, Z+
    2450:	07 94       	ror	r0
    2452:	28 f4       	brcc	.+10     	; 0x245e <__ftoa_engine+0x9c>
    2454:	e7 0e       	add	r14, r23
    2456:	f8 1e       	adc	r15, r24
    2458:	49 1f       	adc	r20, r25
    245a:	56 1f       	adc	r21, r22
    245c:	c1 1d       	adc	r28, r1
    245e:	77 0f       	add	r23, r23
    2460:	88 1f       	adc	r24, r24
    2462:	99 1f       	adc	r25, r25
    2464:	66 1f       	adc	r22, r22
    2466:	06 94       	lsr	r0
    2468:	a1 f7       	brne	.-24     	; 0x2452 <__ftoa_engine+0x90>
    246a:	05 90       	lpm	r0, Z+
    246c:	07 94       	ror	r0
    246e:	28 f4       	brcc	.+10     	; 0x247a <__ftoa_engine+0xb8>
    2470:	f8 0e       	add	r15, r24
    2472:	49 1f       	adc	r20, r25
    2474:	56 1f       	adc	r21, r22
    2476:	c7 1f       	adc	r28, r23
    2478:	d1 1d       	adc	r29, r1
    247a:	88 0f       	add	r24, r24
    247c:	99 1f       	adc	r25, r25
    247e:	66 1f       	adc	r22, r22
    2480:	77 1f       	adc	r23, r23
    2482:	06 94       	lsr	r0
    2484:	a1 f7       	brne	.-24     	; 0x246e <__ftoa_engine+0xac>
    2486:	05 90       	lpm	r0, Z+
    2488:	07 94       	ror	r0
    248a:	20 f4       	brcc	.+8      	; 0x2494 <__ftoa_engine+0xd2>
    248c:	49 0f       	add	r20, r25
    248e:	56 1f       	adc	r21, r22
    2490:	c7 1f       	adc	r28, r23
    2492:	d8 1f       	adc	r29, r24
    2494:	99 0f       	add	r25, r25
    2496:	66 1f       	adc	r22, r22
    2498:	77 1f       	adc	r23, r23
    249a:	88 1f       	adc	r24, r24
    249c:	06 94       	lsr	r0
    249e:	a9 f7       	brne	.-22     	; 0x248a <__ftoa_engine+0xc8>
    24a0:	84 91       	lpm	r24, Z
    24a2:	10 95       	com	r17
    24a4:	17 70       	andi	r17, 0x07	; 7
    24a6:	41 f0       	breq	.+16     	; 0x24b8 <__ftoa_engine+0xf6>
    24a8:	d6 95       	lsr	r29
    24aa:	c7 95       	ror	r28
    24ac:	57 95       	ror	r21
    24ae:	47 95       	ror	r20
    24b0:	f7 94       	ror	r15
    24b2:	e7 94       	ror	r14
    24b4:	1a 95       	dec	r17
    24b6:	c1 f7       	brne	.-16     	; 0x24a8 <__ftoa_engine+0xe6>
    24b8:	e0 e2       	ldi	r30, 0x20	; 32
    24ba:	f1 e0       	ldi	r31, 0x01	; 1
    24bc:	68 94       	set
    24be:	15 90       	lpm	r1, Z+
    24c0:	15 91       	lpm	r17, Z+
    24c2:	35 91       	lpm	r19, Z+
    24c4:	65 91       	lpm	r22, Z+
    24c6:	95 91       	lpm	r25, Z+
    24c8:	05 90       	lpm	r0, Z+
    24ca:	7f e2       	ldi	r23, 0x2F	; 47
    24cc:	73 95       	inc	r23
    24ce:	e1 18       	sub	r14, r1
    24d0:	f1 0a       	sbc	r15, r17
    24d2:	43 0b       	sbc	r20, r19
    24d4:	56 0b       	sbc	r21, r22
    24d6:	c9 0b       	sbc	r28, r25
    24d8:	d0 09       	sbc	r29, r0
    24da:	c0 f7       	brcc	.-16     	; 0x24cc <__ftoa_engine+0x10a>
    24dc:	e1 0c       	add	r14, r1
    24de:	f1 1e       	adc	r15, r17
    24e0:	43 1f       	adc	r20, r19
    24e2:	56 1f       	adc	r21, r22
    24e4:	c9 1f       	adc	r28, r25
    24e6:	d0 1d       	adc	r29, r0
    24e8:	7e f4       	brtc	.+30     	; 0x2508 <__ftoa_engine+0x146>
    24ea:	70 33       	cpi	r23, 0x30	; 48
    24ec:	11 f4       	brne	.+4      	; 0x24f2 <__ftoa_engine+0x130>
    24ee:	8a 95       	dec	r24
    24f0:	e6 cf       	rjmp	.-52     	; 0x24be <__ftoa_engine+0xfc>
    24f2:	e8 94       	clt
    24f4:	01 50       	subi	r16, 0x01	; 1
    24f6:	30 f0       	brcs	.+12     	; 0x2504 <__ftoa_engine+0x142>
    24f8:	08 0f       	add	r16, r24
    24fa:	0a f4       	brpl	.+2      	; 0x24fe <__ftoa_engine+0x13c>
    24fc:	00 27       	eor	r16, r16
    24fe:	02 17       	cp	r16, r18
    2500:	08 f4       	brcc	.+2      	; 0x2504 <__ftoa_engine+0x142>
    2502:	20 2f       	mov	r18, r16
    2504:	23 95       	inc	r18
    2506:	02 2f       	mov	r16, r18
    2508:	7a 33       	cpi	r23, 0x3A	; 58
    250a:	28 f0       	brcs	.+10     	; 0x2516 <__ftoa_engine+0x154>
    250c:	79 e3       	ldi	r23, 0x39	; 57
    250e:	7d 93       	st	X+, r23
    2510:	2a 95       	dec	r18
    2512:	e9 f7       	brne	.-6      	; 0x250e <__ftoa_engine+0x14c>
    2514:	10 c0       	rjmp	.+32     	; 0x2536 <__ftoa_engine+0x174>
    2516:	7d 93       	st	X+, r23
    2518:	2a 95       	dec	r18
    251a:	89 f6       	brne	.-94     	; 0x24be <__ftoa_engine+0xfc>
    251c:	06 94       	lsr	r0
    251e:	97 95       	ror	r25
    2520:	67 95       	ror	r22
    2522:	37 95       	ror	r19
    2524:	17 95       	ror	r17
    2526:	17 94       	ror	r1
    2528:	e1 18       	sub	r14, r1
    252a:	f1 0a       	sbc	r15, r17
    252c:	43 0b       	sbc	r20, r19
    252e:	56 0b       	sbc	r21, r22
    2530:	c9 0b       	sbc	r28, r25
    2532:	d0 09       	sbc	r29, r0
    2534:	98 f0       	brcs	.+38     	; 0x255c <__ftoa_engine+0x19a>
    2536:	23 95       	inc	r18
    2538:	7e 91       	ld	r23, -X
    253a:	73 95       	inc	r23
    253c:	7a 33       	cpi	r23, 0x3A	; 58
    253e:	08 f0       	brcs	.+2      	; 0x2542 <__ftoa_engine+0x180>
    2540:	70 e3       	ldi	r23, 0x30	; 48
    2542:	7c 93       	st	X, r23
    2544:	20 13       	cpse	r18, r16
    2546:	b8 f7       	brcc	.-18     	; 0x2536 <__ftoa_engine+0x174>
    2548:	7e 91       	ld	r23, -X
    254a:	70 61       	ori	r23, 0x10	; 16
    254c:	7d 93       	st	X+, r23
    254e:	30 f0       	brcs	.+12     	; 0x255c <__ftoa_engine+0x19a>
    2550:	83 95       	inc	r24
    2552:	71 e3       	ldi	r23, 0x31	; 49
    2554:	7d 93       	st	X+, r23
    2556:	70 e3       	ldi	r23, 0x30	; 48
    2558:	2a 95       	dec	r18
    255a:	e1 f7       	brne	.-8      	; 0x2554 <__ftoa_engine+0x192>
    255c:	11 24       	eor	r1, r1
    255e:	ef 90       	pop	r14
    2560:	ff 90       	pop	r15
    2562:	0f 91       	pop	r16
    2564:	1f 91       	pop	r17
    2566:	cf 91       	pop	r28
    2568:	df 91       	pop	r29
    256a:	99 27       	eor	r25, r25
    256c:	87 fd       	sbrc	r24, 7
    256e:	90 95       	com	r25
    2570:	08 95       	ret

00002572 <strnlen_P>:
    2572:	fc 01       	movw	r30, r24
    2574:	05 90       	lpm	r0, Z+
    2576:	61 50       	subi	r22, 0x01	; 1
    2578:	70 40       	sbci	r23, 0x00	; 0
    257a:	01 10       	cpse	r0, r1
    257c:	d8 f7       	brcc	.-10     	; 0x2574 <strnlen_P+0x2>
    257e:	80 95       	com	r24
    2580:	90 95       	com	r25
    2582:	8e 0f       	add	r24, r30
    2584:	9f 1f       	adc	r25, r31
    2586:	08 95       	ret

00002588 <strnlen>:
    2588:	fc 01       	movw	r30, r24
    258a:	61 50       	subi	r22, 0x01	; 1
    258c:	70 40       	sbci	r23, 0x00	; 0
    258e:	01 90       	ld	r0, Z+
    2590:	01 10       	cpse	r0, r1
    2592:	d8 f7       	brcc	.-10     	; 0x258a <strnlen+0x2>
    2594:	80 95       	com	r24
    2596:	90 95       	com	r25
    2598:	8e 0f       	add	r24, r30
    259a:	9f 1f       	adc	r25, r31
    259c:	08 95       	ret

0000259e <fputc>:
    259e:	0f 93       	push	r16
    25a0:	1f 93       	push	r17
    25a2:	cf 93       	push	r28
    25a4:	df 93       	push	r29
    25a6:	fb 01       	movw	r30, r22
    25a8:	23 81       	ldd	r18, Z+3	; 0x03
    25aa:	21 fd       	sbrc	r18, 1
    25ac:	03 c0       	rjmp	.+6      	; 0x25b4 <fputc+0x16>
    25ae:	8f ef       	ldi	r24, 0xFF	; 255
    25b0:	9f ef       	ldi	r25, 0xFF	; 255
    25b2:	28 c0       	rjmp	.+80     	; 0x2604 <fputc+0x66>
    25b4:	22 ff       	sbrs	r18, 2
    25b6:	16 c0       	rjmp	.+44     	; 0x25e4 <fputc+0x46>
    25b8:	46 81       	ldd	r20, Z+6	; 0x06
    25ba:	57 81       	ldd	r21, Z+7	; 0x07
    25bc:	24 81       	ldd	r18, Z+4	; 0x04
    25be:	35 81       	ldd	r19, Z+5	; 0x05
    25c0:	42 17       	cp	r20, r18
    25c2:	53 07       	cpc	r21, r19
    25c4:	44 f4       	brge	.+16     	; 0x25d6 <fputc+0x38>
    25c6:	a0 81       	ld	r26, Z
    25c8:	b1 81       	ldd	r27, Z+1	; 0x01
    25ca:	9d 01       	movw	r18, r26
    25cc:	2f 5f       	subi	r18, 0xFF	; 255
    25ce:	3f 4f       	sbci	r19, 0xFF	; 255
    25d0:	31 83       	std	Z+1, r19	; 0x01
    25d2:	20 83       	st	Z, r18
    25d4:	8c 93       	st	X, r24
    25d6:	26 81       	ldd	r18, Z+6	; 0x06
    25d8:	37 81       	ldd	r19, Z+7	; 0x07
    25da:	2f 5f       	subi	r18, 0xFF	; 255
    25dc:	3f 4f       	sbci	r19, 0xFF	; 255
    25de:	37 83       	std	Z+7, r19	; 0x07
    25e0:	26 83       	std	Z+6, r18	; 0x06
    25e2:	10 c0       	rjmp	.+32     	; 0x2604 <fputc+0x66>
    25e4:	eb 01       	movw	r28, r22
    25e6:	09 2f       	mov	r16, r25
    25e8:	18 2f       	mov	r17, r24
    25ea:	00 84       	ldd	r0, Z+8	; 0x08
    25ec:	f1 85       	ldd	r31, Z+9	; 0x09
    25ee:	e0 2d       	mov	r30, r0
    25f0:	09 95       	icall
    25f2:	89 2b       	or	r24, r25
    25f4:	e1 f6       	brne	.-72     	; 0x25ae <fputc+0x10>
    25f6:	8e 81       	ldd	r24, Y+6	; 0x06
    25f8:	9f 81       	ldd	r25, Y+7	; 0x07
    25fa:	01 96       	adiw	r24, 0x01	; 1
    25fc:	9f 83       	std	Y+7, r25	; 0x07
    25fe:	8e 83       	std	Y+6, r24	; 0x06
    2600:	81 2f       	mov	r24, r17
    2602:	90 2f       	mov	r25, r16
    2604:	df 91       	pop	r29
    2606:	cf 91       	pop	r28
    2608:	1f 91       	pop	r17
    260a:	0f 91       	pop	r16
    260c:	08 95       	ret

0000260e <printf>:
    260e:	a0 e0       	ldi	r26, 0x00	; 0
    2610:	b0 e0       	ldi	r27, 0x00	; 0
    2612:	ed e0       	ldi	r30, 0x0D	; 13
    2614:	f3 e1       	ldi	r31, 0x13	; 19
    2616:	0c 94 ab 11 	jmp	0x2356	; 0x2356 <__prologue_saves__+0x20>
    261a:	ae 01       	movw	r20, r28
    261c:	4b 5f       	subi	r20, 0xFB	; 251
    261e:	5f 4f       	sbci	r21, 0xFF	; 255
    2620:	fa 01       	movw	r30, r20
    2622:	61 91       	ld	r22, Z+
    2624:	71 91       	ld	r23, Z+
    2626:	af 01       	movw	r20, r30
    2628:	80 91 d4 01 	lds	r24, 0x01D4
    262c:	90 91 d5 01 	lds	r25, 0x01D5
    2630:	0e 94 bb 0d 	call	0x1b76	; 0x1b76 <vfprintf>
    2634:	e2 e0       	ldi	r30, 0x02	; 2
    2636:	0c 94 c7 11 	jmp	0x238e	; 0x238e <__epilogue_restores__+0x20>

0000263a <__ultoa_invert>:
    263a:	fa 01       	movw	r30, r20
    263c:	aa 27       	eor	r26, r26
    263e:	28 30       	cpi	r18, 0x08	; 8
    2640:	51 f1       	breq	.+84     	; 0x2696 <__ultoa_invert+0x5c>
    2642:	20 31       	cpi	r18, 0x10	; 16
    2644:	81 f1       	breq	.+96     	; 0x26a6 <__ultoa_invert+0x6c>
    2646:	e8 94       	clt
    2648:	6f 93       	push	r22
    264a:	6e 7f       	andi	r22, 0xFE	; 254
    264c:	6e 5f       	subi	r22, 0xFE	; 254
    264e:	7f 4f       	sbci	r23, 0xFF	; 255
    2650:	8f 4f       	sbci	r24, 0xFF	; 255
    2652:	9f 4f       	sbci	r25, 0xFF	; 255
    2654:	af 4f       	sbci	r26, 0xFF	; 255
    2656:	b1 e0       	ldi	r27, 0x01	; 1
    2658:	3e d0       	rcall	.+124    	; 0x26d6 <__ultoa_invert+0x9c>
    265a:	b4 e0       	ldi	r27, 0x04	; 4
    265c:	3c d0       	rcall	.+120    	; 0x26d6 <__ultoa_invert+0x9c>
    265e:	67 0f       	add	r22, r23
    2660:	78 1f       	adc	r23, r24
    2662:	89 1f       	adc	r24, r25
    2664:	9a 1f       	adc	r25, r26
    2666:	a1 1d       	adc	r26, r1
    2668:	68 0f       	add	r22, r24
    266a:	79 1f       	adc	r23, r25
    266c:	8a 1f       	adc	r24, r26
    266e:	91 1d       	adc	r25, r1
    2670:	a1 1d       	adc	r26, r1
    2672:	6a 0f       	add	r22, r26
    2674:	71 1d       	adc	r23, r1
    2676:	81 1d       	adc	r24, r1
    2678:	91 1d       	adc	r25, r1
    267a:	a1 1d       	adc	r26, r1
    267c:	20 d0       	rcall	.+64     	; 0x26be <__ultoa_invert+0x84>
    267e:	09 f4       	brne	.+2      	; 0x2682 <__ultoa_invert+0x48>
    2680:	68 94       	set
    2682:	3f 91       	pop	r19
    2684:	2a e0       	ldi	r18, 0x0A	; 10
    2686:	26 9f       	mul	r18, r22
    2688:	11 24       	eor	r1, r1
    268a:	30 19       	sub	r19, r0
    268c:	30 5d       	subi	r19, 0xD0	; 208
    268e:	31 93       	st	Z+, r19
    2690:	de f6       	brtc	.-74     	; 0x2648 <__ultoa_invert+0xe>
    2692:	cf 01       	movw	r24, r30
    2694:	08 95       	ret
    2696:	46 2f       	mov	r20, r22
    2698:	47 70       	andi	r20, 0x07	; 7
    269a:	40 5d       	subi	r20, 0xD0	; 208
    269c:	41 93       	st	Z+, r20
    269e:	b3 e0       	ldi	r27, 0x03	; 3
    26a0:	0f d0       	rcall	.+30     	; 0x26c0 <__ultoa_invert+0x86>
    26a2:	c9 f7       	brne	.-14     	; 0x2696 <__ultoa_invert+0x5c>
    26a4:	f6 cf       	rjmp	.-20     	; 0x2692 <__ultoa_invert+0x58>
    26a6:	46 2f       	mov	r20, r22
    26a8:	4f 70       	andi	r20, 0x0F	; 15
    26aa:	40 5d       	subi	r20, 0xD0	; 208
    26ac:	4a 33       	cpi	r20, 0x3A	; 58
    26ae:	18 f0       	brcs	.+6      	; 0x26b6 <__ultoa_invert+0x7c>
    26b0:	49 5d       	subi	r20, 0xD9	; 217
    26b2:	31 fd       	sbrc	r19, 1
    26b4:	40 52       	subi	r20, 0x20	; 32
    26b6:	41 93       	st	Z+, r20
    26b8:	02 d0       	rcall	.+4      	; 0x26be <__ultoa_invert+0x84>
    26ba:	a9 f7       	brne	.-22     	; 0x26a6 <__ultoa_invert+0x6c>
    26bc:	ea cf       	rjmp	.-44     	; 0x2692 <__ultoa_invert+0x58>
    26be:	b4 e0       	ldi	r27, 0x04	; 4
    26c0:	a6 95       	lsr	r26
    26c2:	97 95       	ror	r25
    26c4:	87 95       	ror	r24
    26c6:	77 95       	ror	r23
    26c8:	67 95       	ror	r22
    26ca:	ba 95       	dec	r27
    26cc:	c9 f7       	brne	.-14     	; 0x26c0 <__ultoa_invert+0x86>
    26ce:	00 97       	sbiw	r24, 0x00	; 0
    26d0:	61 05       	cpc	r22, r1
    26d2:	71 05       	cpc	r23, r1
    26d4:	08 95       	ret
    26d6:	9b 01       	movw	r18, r22
    26d8:	ac 01       	movw	r20, r24
    26da:	0a 2e       	mov	r0, r26
    26dc:	06 94       	lsr	r0
    26de:	57 95       	ror	r21
    26e0:	47 95       	ror	r20
    26e2:	37 95       	ror	r19
    26e4:	27 95       	ror	r18
    26e6:	ba 95       	dec	r27
    26e8:	c9 f7       	brne	.-14     	; 0x26dc <__ultoa_invert+0xa2>
    26ea:	62 0f       	add	r22, r18
    26ec:	73 1f       	adc	r23, r19
    26ee:	84 1f       	adc	r24, r20
    26f0:	95 1f       	adc	r25, r21
    26f2:	a0 1d       	adc	r26, r0
    26f4:	08 95       	ret

000026f6 <_exit>:
    26f6:	f8 94       	cli

000026f8 <__stop_program>:
    26f8:	ff cf       	rjmp	.-2      	; 0x26f8 <__stop_program>
